{"version":3,"sources":["pages/ClientReservations/useStyles.ts","components/DataTable/useStyles.ts","components/DataTable/DataTable.tsx","components/Button/useStyles.ts","components/Button/CustomButton.tsx","utils/dictionary.js","helpers/APICalls/reservation.ts","context/useSnackbarContext.tsx","components/CustomDialog/useStyles.ts","components/CustomDialog/CustomDialog.tsx","context/useLanguageContext.tsx","pages/Agency/Drivers/DriverDetail/useStyles.ts","pages/Agency/Drivers/DriverDetail/DriverDetail.tsx","pages/ClientReservations/ListReservations.tsx","components/Search/useStyles.ts","components/Search/Search.tsx","helpers/APICalls/loginWithCookies.ts","helpers/APICalls/logout.ts","context/useAuthContext.tsx","pages/ClientPayment/ClientPayment.tsx","pages/ClientReservations/AddReservation/useStyles.ts","pages/ClientReservations/AddReservation/AddReservationForm/useStyles.ts","pages/ClientReservations/AddReservation/AddReservationForm/AddReservationForm.tsx","pages/ClientReservations/AddReservation/AddReservation.tsx","pages/Agency/AddClient/useStyles.ts","pages/Agency/AddClient/AddClientForm/useStyles.ts","pages/Agency/AddClient/AddClientForm/AddClientForm.tsx","helpers/APICalls/user.ts","pages/Agency/AddClient/AddClient.tsx","pages/Agency/ListClients/useStyles.ts","pages/Agency/UpdateClient/useStyles.ts","pages/Agency/UpdateClient/UpdateClient.tsx","pages/Agency/ListClients/ListClients.tsx","helpers/APICalls/agencyReservation.ts","helpers/APICalls/driver.ts","pages/Agency/Drivers/AssignDriver/useStyles.ts","pages/Agency/Drivers/AssignDriver/AssignDriver.tsx","pages/Agency/Reservation/useStyles.ts","pages/Agency/Reservation/ListPassengers.tsx","pages/Agency/Reservation/ListAgencyReservations.tsx","utils/dictionary/listAgencyReservation.js","pages/Agency/Payments/AddPayment/AddPaymentForm/useStyles.ts","pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx","pages/Agency/Payments/AddPayment/useStyles.ts","helpers/APICalls/agencyPayment.ts","pages/Agency/Payments/AddPayment/AddPayment.tsx","pages/Agency/Payments/ListPayments/ListPayments.tsx","pages/Agency/Payments/Details/Details.tsx","pages/Agency/Payments/AgencyPayments.tsx","pages/Login/useStyles.ts","pages/Login/LoginForm/useStyles.ts","pages/Login/LoginForm/LoginForm.tsx","helpers/APICalls/login.ts","pages/Login/Login.tsx","components/Header/ClientHeader/useStyles.ts","components/Header/LanguageTab/useStyles.ts","components/Header/LanguageTab/LanguageTab.tsx","components/Header/Profile/useStyles.ts","components/Header/ChangePassword/useStyles.ts","components/Header/ChangePassword/ChangePassword.tsx","components/Header/Profile/Profile.tsx","components/Header/ClientHeader/ClientHeader.tsx","components/Header/AgencyHeader/useStyles.ts","components/Header/AgencyHeader/AgencyHeader.tsx","components/Header/useStyles.ts","components/Header/Header.tsx","pages/Agency/Drivers/DriverForm/useStyles.ts","pages/Agency/Drivers/DriverForm/DriverForm.tsx","pages/Agency/Drivers/UpdateDriver/useStyles.ts","pages/Agency/Drivers/UpdateDriver/UpdateDriver.tsx","pages/Agency/Drivers/DeleteDriver/useStyles.ts","pages/Agency/Drivers/DeleteDriver/DeleteDriver.tsx","pages/Agency/Drivers/ListDrivers/ListDrivers.tsx","pages/Agency/Drivers/AddDriver/useStyles.ts","pages/Agency/Drivers/AddDriver/AddDriver.tsx","pages/Home/AgencyHome/useStyles.ts","pages/Home/AgencyHome/AgencyHome.tsx","utils/dictionary/home.js","pages/Home/ClientHome/ClientHome.tsx","App.tsx","index.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","position","display","flexDirection","alignItems","justifyContent","columnHeader","backgroundColor","color","fontWeight","fontSize","height","row","DataTable","rows","columns","Box","className","components","Toolbar","GridToolbar","pageSize","rowHeight","disableSelectionOnClick","disableColumnMenu","disableDensitySelector","getRowClassName","params","clsx","status","classes","circularProgress","palette","common","white","button","textTransform","borderRadius","shape","padding","spacing","primary","main","margin","marginBottom","marginRight","CustomButton","btnText","style","onClick","disabled","isSubmitBtn","btnStyle","Button","type","NewReservationDictionary","title","form","from","to","pax","property","fullName","passenger","driverNote","flightNo","selectedDate","tabsDictionary","label","agencyPaymentPage","paid","currency","note","exchangeRate","paidInTL","engTabs","value","turkishTabs","addClientFormlanguage","eng","firstName","lastName","email","propertyName","businessType","address","istCostTitle","sawCostTitle","turkish","postReservation","inputs","a","axios","post","then","res","data","catch","error","message","getReservations","get","deleteReservation","id","delete","getMyDetailsStat","response","SnackBarContext","createContext","updateSnackBarMessage","SnackBarProvider","children","useState","setMessage","open","setOpen","useCallback","handleClose","snackbarHandleClose","event","reason","Provider","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","size","useSnackBar","useContext","dialog","maxHeight","CustomDialog","cssStyle","isFullScreen","dialogStyle","Dialog","fullScreen","LanguageContext","language","updateLanguage","LanguageProvider","setLanguage","useLanguage","monHieght","avatar","black","DriverDetail","driver","Grid","container","direction","item","Avatar","src","img","Typography","name","variant","phoneNumber","carNumber","driverInitValue","ListReservations","history","useHistory","confirmedReservations","setConfirmedReservations","unConfirmedReservations","setUnConfirmedReservations","openDetailDialog","setOpenDetailDialog","setDriver","setValue","Date","timezone","passengers","setInitValues","handleCacelClick","cellValues","_id","success","filter","handleEditClick","handleDriverDetails","handleCancelClick","field","headerName","renderCell","confirmed","turksihColumns","engColumn","tabs","useEffect","console","log","reservations","map","reservation","idx","date","format","sx","TabContext","borderBottom","borderColor","TabList","onChange","newValue","Tab","TabPanel","select","border","transition","transitions","create","boxShadow","alpha","inputLabel","itemContainer","Search","setFrom","setTo","invokeUseEffect","utils","DateFnsUtils","InputLabel","DatePicker","InputProps","input","disableUnderline","loginWithCookies","fetchOptions","method","credentials","fetch","json","logout","AuthContext","loggedInUser","undefined","updateLoginContext","AuthProvider","setLoggedInUser","user","role","push","logoutAPI","checkLoginWithCookies","useAuth","ClientPayment","clientId","debt","detailsColumns","detailsRows","setDetailsRows","useEffectTrigger","setUseEffectTrigger","setHours","getHours","totalReservationsCost","useRef","paymentTotal","totalsRows","current","cost","payments","client","createdAt","sort","b","parseFloat","minHeight","fieldInputLabel","submit","menuItem","airports","resorts","AddReservationForm","handleSubmit","initValues","initialValues","validationSchema","Yup","required","min","max","default","onSubmit","values","handleChange","errors","touched","setFieldValue","isSubmitting","noValidate","Select","autoWidth","MenuProps","transformOrigin","getContentAnchorEl","MenuItem","FormHelperText","Boolean","Array","fill","_","airport","resort","TextField","helperText","DateTimePicker","multiline","lg","fieldArrayProps","allPassengers","index","turkishPage","engPage","AddReservation","page","setPage","component","Paper","xs","sm","md","textAlign","paddingTop","typography","AddClientForm","IstAirportMaxFourPaxCost","IstAirportMaxSixPaxCost","IstAirportMaxTenPaxCost","SawAirportMaxFourPaxCost","SawAirportMaxSixPaxCost","SawAirportMaxTenPaxCost","justify","fullWidth","align","postClient","getClients","deleteClient","patchClient","patch","AddClient","mainBox","UpdateClient","handleUpdatedClientSuccess","formValues","ListClients","setRows","openDialog","setOpenDialog","openUpdateClient","setOpenUpdateClient","cellValue","setCellValue","clients","now","handleCloseDialog","text","yes","no","turkishClientColumn","engClientColumn","m","pt","rowValue","updateReservation","getClientReservationPaymentStat","getStat","getstatInfo","postDriver","updateDriver","deleteDriver","getDrivers","listItem","cursor","opacity","AssignDriver","selected","drivers","setDrivers","List","maxWidth","ListItem","ListItemAvatar","alt","ListItemText","secondary","Divider","passengerTitle","passengerRoot","ListPassengers","ListAgencyReservations","openShowDialog","setOpenShowDialog","setReservation","setPassengers","handleProcessedClick","handleUnprocessedClick","handleConfirmClick","handleShowClick","agencyEngColumns","agencyTurksihColumns","currencies","AddPaymentForm","alignContent","postPayment","getClientPayments","updatePayment","AddPayment","ListPayments","paymentId","agencyListPaymentEngColumns","agencyListPaymentTurkishColumns","payment","Details","AgencyPayments","openAddPayment","setOpenAddPayment","openAllPayments","setOpenAllPayments","details","setDetails","setClientId","setDebt","handleAddPaymentClick","handleAllPaymentsClick","handleAllPaymentsClose","handleDetailsClick","handleDetailsClose","agencyPaymentEngColumns","agencyPaymentTurkishColumns","AppBar","edge","welcome","paddingBottom","signinImage","breakpoints","down","LoginForm","username","password","InputLabelProps","shrink","CircularProgress","login","fetchData","changePasswordApi","passwordInputs","Login","setSubmitting","gridItem","right","menu","marginLeft","tabStyle","LanguageTab","anchorEl","setAnchorEl","handleMenuItemClick","lenguage","Tabs","TabIndicatorProps","currentTarget","Menu","paper","MenuListProps","onMouseLeave","elevation","ChangePassword","handleDialogClose","oldPassword","setOldPassword","newPassword","setNewPassword","changePassword","passwordType","target","Profile","e","englishTabs","ClientHeader","Link","AgencyHeader","anchorCleitnEl","setAnchorCleitnEl","openClient","setOpenClient","handleClick","url","handleClickMenu","setAnchorFunc","setOpenFunc","AgencyTabsDictionary","menus","options","Header","engDriverForm","turkishDriverForm","UpdateDriver","DriverForm","DeleteDriver","handleDeleteDialogClose","ListDrivers","openDeleteDialog","setOpenDeleteDialog","engDriverColumn","turksihDriverColumns","itemContaienr","AddDriver","card","minWidth","initStat","owedUsersNumber","unconfirmedReservationsNumber","initStatInfo","owedUsers","unconfirmedReservations","AgencyHome","stat","setStat","statInfo","setStatInfo","unconfirmedResColumns","owedUsersColumns","cards","cardImg","content","number","Card","CardMedia","image","CardContent","gutterBottom","ClientHome","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"yNAceA,EAZGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,OACPC,UAAW,MACXC,SAAU,WACVC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,c,2BCwBTV,EAhCGC,aAAW,SAACC,GAAD,MAAY,CACrCS,aAAc,CACVC,gBAAiB,UACjBC,MAAO,UACPC,WAAY,IACZC,SAAU,GACVX,MAAO,QAETD,KAAM,CACJS,gBAAiB,UACjBC,MAAO,UACPG,OAAQ,IACRZ,MAAO,QAETa,IAAK,CACH,gBAAiB,CACfL,gBAAiB,WAEnB,YAAa,CACXA,gBAAiB,WAEnB,WAAY,GAGZ,UAAW,CACTA,gBAAiB,gB,uBCjBZ,SAASM,EAAT,GAA2D,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QACtC,EAAoCpB,IAA5BG,EAAR,EAAQA,KAAMc,EAAd,EAAcA,IAAKN,EAAnB,EAAmBA,aAEnB,OACE,cAACU,EAAA,EAAD,CAAKC,UAAWnB,EAAhB,SACE,cAAC,IAAD,CACIoB,WAAY,CAAEC,QAASC,KACvBN,KAAMA,EACNC,QAASA,EACTM,SAAU,GACVC,UAAW,IACXC,yBAAuB,EACvBC,mBAAmB,EACnBC,wBAAwB,EACxBC,gBAAiB,SAACC,GAAD,gBAAeC,YAAKhB,EAAKe,EAAOf,IAAIiB,UACrDC,QAAS,CAAExB,aAAcA,O,YCkFtBX,EAzGGC,aAAW,SAACC,GAAD,MAAY,CACrCkC,iBAAkB,CACdvB,MAAOX,EAAMmC,QAAQC,OAAOC,OAEhCC,OAAQ,CACJC,cAAe,YACfC,aAAcxC,EAAMyC,MAAMD,aAC1B3B,SAAU,GACVD,WAAY,IACZ8B,QAAS1C,EAAM2C,QAAQ,GACvB,WAAY,CACRjC,gBAAiBV,EAAMmC,QAAQS,QAAQC,KACvCC,OAAQ9C,EAAM2C,QAAQ,EAAG,EAAG,GAC5BzC,MAAO,IACPY,OAAQ,IAEZ,SAAU,CACNJ,gBAAiB,UACjBR,MAAO,GACPY,OAAQ,IAEZ,iBAAkB,CACdJ,gBAAiBV,EAAMmC,QAAQS,QAAQC,KACvC3C,MAAO,GACPY,OAAQ,IAEZ,WAAY,CACRJ,gBAAiB,UACjBR,MAAO,GACPY,OAAQ,IAEZ,WAAY,CACRJ,gBAAiB,UACjBR,MAAO,GACPY,OAAQ,IAEZ,cAAe,CACXJ,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,GACRX,UAAW,GAEf,gBAAiB,CACbO,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,GACRX,UAAW,GAEf,mBAAoB,CAChBO,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,GACRiC,aAAc,GAElB,eAAgB,CACZrC,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,IAEZ,gBAAiB,CACbJ,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,IAEZ,YAAa,CACTJ,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,IAEZ,kBAAmB,CACfJ,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,IAEZ,YAAa,CACTJ,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,IAEZ,cAAe,CACXJ,gBAAiB,UACjBR,MAAO,IACPY,OAAQ,IAEZ,QAAS,CACLJ,gBAAiB,UACjBR,MAAO,GACPY,OAAQ,GACRkC,YAAa,OAEjB,OAAQ,CACJtC,gBAAiB,UACjBR,MAAO,GACPY,OAAQ,IAEZ,iBAAkB,CACdJ,gBAAiB,UACjBR,MAAO,GACPY,OAAQ,GACRX,UAAW,cCtER8C,MAjBf,YAA+F,IAAvEC,EAAsE,EAAtEA,QAASC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,QAAsBC,GAAgC,EAA7CC,YAA6C,EAAhCD,UAClDf,EAAWxC,IAAXwC,OACFiB,EAAWxB,YAAKO,EAAQa,GAE9B,OACI,cAACK,EAAA,EAAD,CACIH,SAAUA,EACVjC,UAAWmC,EACXH,QAASA,EACTK,KAAK,SAJT,SAMKP,KCtBAQ,EACA,CACLC,MAAO,kBACPC,KAAM,CACFH,KAAM,OACNI,KAAM,OACNC,GAAI,KACJC,IAAK,MACLC,SAAU,WACVC,SAAU,YACVC,UAAW,YACXC,WAAY,cACZC,SAAU,YACVC,aAAc,8BAbbX,EAgBI,CACTC,MAAO,mBACPC,KAAM,CACFH,KAAM,MACNI,KAAM,SACNC,GAAI,SACJC,IAAK,MACLC,SAAU,QACVC,SAAU,WACVC,UAAW,QACXC,WAAY,uBACZC,SAAU,kBACVC,aAAc,oCAKbC,EACK,CAEV,CAAEC,MAAO,kBAAmBT,GAAI,oBAChC,CAAES,MAAO,eAAgBT,GAAI,gBAC7B,CAAES,MAAO,WAAYT,GAAI,aALpBQ,EAOK,CAEV,CAAEC,MAAO,mBAAoBT,GAAI,oBACjC,CAAES,MAAO,iBAAkBT,GAAI,gBAC/B,CAAES,MAAO,SAAUT,GAAI,aAqXlBU,EACD,CACRb,MAAO,cACPC,KAAM,CACJH,KAAM,OACNgB,KAAM,OACNC,SAAU,WACVC,KAAM,OACNC,aAAc,gBACdC,SAAU,eATHL,EAYE,CACXb,MAAO,iBACPC,KAAM,CACJH,KAAM,MACNgB,KAAM,kBACNC,SAAU,cACVC,KAAM,MACNC,aAAc,gBACdC,SAAU,wBAocHC,EACX,CACE,CAAEP,MAAO,YAAaQ,MAAO,KAC7B,CAAER,MAAO,uBAAwBQ,MAAO,MAE7BC,EACb,CACE,CAAET,MAAO,uBAAcQ,MAAO,KAC9B,CAAER,MAAO,mBAAoBQ,MAAO,MAwO3BE,EAAwB,CACnCC,IAAK,CACDC,UAAW,YACXC,SAAU,WACVC,MAAO,QACPC,aAAc,gBACdC,aAAc,gBACdC,QAAS,UACTC,aAAc,yBACdC,aAAc,0BAElBC,QAAS,CACLR,UAAW,OACXC,SAAU,UACVC,MAAO,QACPC,aAAc,iBACdC,aAAc,wBACdC,QAAS,UACTC,aAAc,iCACdC,aAAc,mC,0CC3nCPE,EAAe,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACdC,IAAMC,KAAK,gBAAiBH,GACpCI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,MAAY,CACfA,MAAO,CAAEC,QAAS,qCAJC,mFAAH,sDAkBfC,EAAe,uCAAG,sBAAAT,EAAA,sEACdC,IAAMS,IAAI,iBAClBP,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAAEC,QAAS,qCAJC,mFAAH,qDASfG,EAAiB,uCAAG,WAAOC,GAAP,SAAAZ,EAAA,sEAChBC,IAAMY,OAAN,uBAA6BD,IACrCT,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAAEC,QAAS,qCAJG,mFAAH,sDASjBM,EAAgB,uCAAG,WAAOF,EAAwB7C,EAAYC,GAA3C,SAAAgC,EAAA,sEACfC,IAAMS,IAAN,4BAA+BE,GAAM,CAC9C5E,OAAQ,CACJ+B,OACAC,QAGPmC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QARL,mFAAH,0D,mCC/BhBW,EAAkBC,wBAAgC,CAC7DC,sBAAuB,kBAAM,QAGlBC,EAAsC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SACpD,EAA8BC,mBAAwB,MAAtD,mBAAOb,EAAP,KAAgBc,EAAhB,KACA,EAAwBD,oBAAkB,GAA1C,mBAAOE,EAAP,KAAaC,EAAb,KAEMN,EAAwBO,uBAAY,SAACjB,GACzCc,EAAWd,GACXgB,GAAQ,KACP,IAEGE,EAAcD,uBAAY,WAC9BD,GAAQ,KACP,IAEGG,EAAsBF,uBAAY,SAACG,EAAuBC,GAC/C,cAAXA,GACJL,GAAQ,KACP,IAEH,OACE,eAACR,EAAgBc,SAAjB,CAA0B7C,MAAO,CAAEiC,yBAAnC,UACGE,EACD,cAACW,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdX,KAAMA,EACNY,iBAAkB,IAClBC,QAAST,EACTnB,QAASA,EACT6B,OACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQ,aAAW,QAAQ1H,MAAM,UAAUyC,QAASoE,EAArE,SACE,cAAC,IAAD,CAAW3G,SAAS,kBAQzB,SAASyH,IACd,OAAOC,qBAAWzB,G,aCzCLhH,EAXGC,aAAW,SAACC,GAAD,MAAY,CACrCwI,OAAQ,CACJ,sBAAuB,CACnBC,UAAU,UAEd,eAAgB,CACZA,UAAU,eCqBPC,EAhBM,SAAC,GAAoF,IAAlFrB,EAAiF,EAAjFA,KAAMa,EAA2E,EAA3EA,QAAS/E,EAAkE,EAAlEA,MAAOwF,EAA2D,EAA3DA,SAAUzB,EAAiD,EAAjDA,SAAU0B,EAAuC,EAAvCA,aACtDJ,EAAW1I,IAAX0I,OACFK,EAAc9G,YAAKyG,EAAQrF,GACjC,OACI,cAAC2F,EAAA,EAAD,CACIzB,KAAMA,EACN0B,WAAYH,EACZV,QAASA,EACT9G,UAAWyH,EACX1F,MAAOwF,EALX,SAOKzB,KChBA8B,EAAkBjC,wBAAgC,CAC3DkC,SAAU,MACVC,eAAgB,kBAAM,QAGbC,EAAsC,SAAC,GAA+B,IAA7BjC,EAA4B,EAA5BA,SAClD,EAAgCC,mBAAmB,MAAnD,mBAAO8B,EAAP,KAAiBG,EAAjB,KAEMF,EAAiB3B,uBAAY,SAAC0B,GAChCG,EAAYH,KACX,IAEL,OACI,cAACD,EAAgBpB,SAAjB,CAA0B7C,MAAO,CAAEkE,WAAUC,kBAA7C,SAAgEhC,KAIjE,SAASmC,IACZ,OAAOd,qBAAWS,G,8DCRPlJ,GAhBGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFyC,QAAS1C,EAAM2C,QAAQ,GACvB2G,UAAW,QAEfC,OAAQ,CACJzI,OAAQ,GACRZ,MAAO,IAEXyD,MAAO,CACH9C,SAAU,GACVD,WAAY,IACZD,MAAOX,EAAMmC,QAAQC,OAAOoH,WCWrBC,GAjBM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OACpB,EAAgC5J,KAAxBG,EAAR,EAAQA,KAAMsJ,EAAd,EAAcA,OAAQ5F,EAAtB,EAAsBA,MAEtB,OACI,mCACI,eAACgG,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzI,UAAWnB,EAAMO,eAAe,SAASD,WAAW,SAAvF,UACI,cAACoJ,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACC,GAAA,EAAD,CAAQ3I,UAAWmI,EAAQS,IAAKN,EAAOO,QAEvC,cAACC,GAAA,EAAD,CAAY9I,UAAWuC,EAAvB,mBAAkC+F,EAAOS,QACzC,cAACD,GAAA,EAAD,CAAYE,QAAQ,QAApB,wBAAqCV,EAAOW,eAC5C,cAACH,GAAA,EAAD,CAAYE,QAAQ,QAApB,2BAAwCV,EAAOY,mBCA7DC,GAAkB,CACpBJ,KAAM,GACNF,IAAK,GACLK,UAAW,GACXD,YAAa,EACbhF,MAAO,IAwHImF,OArHf,WACI,IAAQvK,EAASH,IAATG,KACFwK,EAAUC,cACRzB,EAAaI,IAAbJ,SACAjC,EAA0BsB,IAA1BtB,sBAER,EAA0DG,mBAAc,IAAxE,mBAAOwD,EAAP,KAA8BC,EAA9B,KACA,EAA8DzD,mBAAc,IAA5E,mBAAO0D,EAAP,KAAgCC,EAAhC,KACA,EAAwB3D,oBAAkB,GAA1C,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAgDH,oBAAkB,GAAlE,mBAAO4D,EAAP,KAAyBC,EAAzB,KACA,EAA4B7D,mBAAiBoD,IAA7C,mBAAOb,EAAP,KAAeuB,EAAf,KACA,EAA0B9D,mBAAS,KAAnC,mBAAOpC,EAAP,KAAcmG,EAAd,KACA,EAAoC/D,mBAAU,CAC1C1D,KAAM,EACNI,KAAM,EACNC,GAAI,EACJE,SAAU,GACVD,IAAK,EACLK,SAAU,GACVD,WAAY,GACZE,aAAc,IAAI8G,KAClBC,SAAU,EACVC,WAAY,KAVhB,mBAAmBC,GAAnB,WAiBMC,EAAmB,SAACC,GACtB,IAAM9E,EAAK8E,EAAWzK,IAAI0K,IAC1BhF,EAAkBC,GAAIT,MAAK,SAACE,GACpBA,EAAKE,MACLW,EAAsBb,EAAKE,MAAMC,SAC1BH,EAAKuF,SACZ1E,EAAsB,wBACtB4D,EAAyBD,EAAsBgB,QAAO,SAAC5K,GAAD,OAAcA,EAAI2F,KAAO8E,EAAW9E,QAE1FM,EAAsB,wDAK5B4E,EAAkB,SAACJ,GACrBF,EAAcE,EAAWzK,KACzBuG,GAAQ,IAONuE,EAAsB,SAACL,GACzBP,EAAUO,EAAWzK,IAAI2I,QACzBsB,GAAoB,IAOlB9J,EAAuB,OAAb+H,ERiIU,SAAC2C,EAAiBE,EAAmBD,GAgFjE,MA/EgB,CACd,CACEE,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,mBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,kBACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACEnI,UAAWmI,EAAWzK,IAAImL,UAC1B/I,MAAM,gBACND,QAAQ,QACRE,QAAS,kBAAMyI,EAAoBL,QAK3C,CACEO,MAAO,aACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACEnI,SAAUmI,EAAWzK,IAAImL,UACzB/I,MAAM,OACND,QAAQ,aACRE,QAAS,kBAAMwI,EAAgBJ,QAKvC,CACEO,MAAO,QACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACEnI,SAAUmI,EAAWzK,IAAImL,UACzB/I,MAAM,SACND,QAAQ,QACRE,QAAS,kBAAM0I,EAAkBN,SQ3MLW,CAAeP,EAAiBL,EAAkBM,GR8CjE,SAACD,EAAiBE,EAAmBD,GAgF5D,MA/EgB,CACd,CACEE,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,YACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,KACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,SACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACEnI,UAAWmI,EAAWzK,IAAImL,UAC1B/I,MAAM,gBACND,QAAQ,UACRE,QAAS,kBAAMyI,EAAoBL,QAK3C,CACEO,MAAO,OACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACEnI,SAAUmI,EAAWzK,IAAImL,UACzB/I,MAAM,OACND,QAAQ,OACRE,QAAS,kBAAMwI,EAAgBJ,QAKvC,CACEO,MAAO,SACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACEnI,SAAUmI,EAAWzK,IAAImL,UACzB/I,MAAM,SACND,QAAQ,SACRE,QAAS,kBAAM0I,EAAkBN,SQvHLY,CAAUR,EAAiBL,EAAkBM,GAC3EQ,EAAoB,OAAbpD,EAAoBjE,EAAcF,EAgC/C,OA9BAwH,qBAAU,WAsBN,OArBA/F,IAAkBN,MAAK,SAACE,GAChBA,EAAKE,MACLkG,QAAQC,IAAIrG,EAAKE,OACVF,EAAKuF,SACZvF,EAAKuF,QAAQe,aAAa9B,sBAAsB+B,KAAI,SAACC,EAAaC,GAC9DD,EAAYjG,GAAKkG,EAAM,EACvBD,EAAY3K,OAAS,cACrB,IAAM6K,EAAO,IAAI1B,KAAKwB,EAAYtI,cAClCsI,EAAYE,KAAOC,YAAOD,EAAM,uBAEpCjC,EAAyBzE,EAAKuF,QAAQe,aAAa9B,uBACnDxE,EAAKuF,QAAQe,aAAa5B,wBAAwB6B,KAAI,SAACC,EAAaC,GAChED,EAAYjG,GAAKkG,EAAM,EACvB,IAAMC,EAAO,IAAI1B,KAAKwB,EAAYtI,cAClCsI,EAAYE,KAAOC,YAAOD,EAAM,uBAEpC/B,EAA2B3E,EAAKuF,QAAQe,aAAa5B,0BAErD0B,QAAQC,IAAI,qBAGb,WACH5B,EAAyB,IACzBE,EAA2B,OAEhC,CAACL,EAASpD,IAKT,mCACI,eAAClG,EAAA,EAAD,CAAK4L,GAAI,CAAE7M,MAAO,QAAUkB,UAAWnB,EAAvC,UACI,eAAC+M,EAAA,EAAD,CAAYjI,MAAOA,EAAnB,UACI,cAAC5D,EAAA,EAAD,CAAK4L,GAAI,CAAEE,aAAc,EAAGC,YAAa,WAAzC,SACI,cAACC,GAAA,EAAD,CAASC,SApDR,SAAC1F,EAAa2F,GAC/BnC,EAASmC,IAmDwC,aAAW,uBAA5C,SACKhB,EAAKK,KAAI,WAAiBE,GAAjB,IAAErI,EAAF,EAAEA,MAAOQ,EAAT,EAASA,MAAT,OACN,cAACuI,EAAA,EAAD,CAAe/I,MAAOA,EAAOQ,MAAOA,GAA1B6H,UAItB,cAACW,GAAA,EAAD,CAAUxI,MAAM,IAAI5B,MAAO,CAAEjD,MAAO,QAApC,SAA8C,cAACc,EAAD,CAAWC,KAAM0J,EAAuBzJ,QAASA,MAC/F,cAACqM,GAAA,EAAD,CAAUxI,MAAM,IAAI5B,MAAO,CAAEjD,MAAO,QAApC,SAA8C,cAACc,EAAD,CAAWC,KAAM4J,EAAyB3J,QAASA,SAErG,cAAC,EAAD,CAAcmG,KAAM0D,EAAkB7C,QApDtB,WACxB8C,GAAoB,IAmDwD7H,MAAM,oBAA1E,SACI,cAAC,GAAD,CAAcuG,OAAQA,Y,4BCxF3B5J,GA/CGC,aAAW,SAACC,GAAD,MAAY,CACrCuE,MAAO,CACH1D,SAAU,GACVD,WAAY,IACZD,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5BjH,cAAe,aAEnBiL,OAAQ,CACJhL,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACV6B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,QACXD,MAAO,IACPwN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,gBAE1D/H,OAAQ,CACJrD,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACVC,OAAQ,OACR4B,QAAS1C,EAAM2C,QAAQ,GACvBI,aAAc,MACd2K,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTC,UAAU,GAAD,OAAKC,aAAM9N,EAAMmC,QAAQS,QAAQC,KAAM,KAAvC,iBACTqK,YAAalN,EAAMmC,QAAQS,QAAQC,MAErCG,YAAa,OAEjB+K,WAAY,CACRlN,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACf5B,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5B9G,QAAS1C,EAAM2C,QAAQ,IAG3BqL,cAAe,CACXlL,OAAQ,mB,4BCqBDmL,GAhDA,SAAC,GAAuE,IAArEpK,EAAoE,EAApEA,KAAMC,EAA8D,EAA9DA,GAAIoK,EAA0D,EAA1DA,QAASC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,gBACxC,EAA+CtO,KAAvCkO,EAAR,EAAQA,cAAgBD,EAAxB,EAAwBA,WAAYlI,EAApC,EAAoCA,OAMpC,OACI,mCACI,cAAC8D,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAW4M,EAAerL,QAAS,EAAGnC,eAAe,SAA1E,SACI,eAAC,KAAD,CAAyB6N,MAAOC,KAAhC,UACI,eAAC3E,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAW2M,EAAvB,kBAGA,cAAC,KAAD,CAAyBM,MAAOC,KAAhC,SACI,cAACE,GAAA,EAAD,CACIC,WAAa,CACTxM,QAAS,CAAEyM,MAAO7I,GAClB8I,kBAAkB,GAEtB5J,MAAOlB,EACPuJ,SAAU,SAACP,GAAD,OAAeqB,EAAQrB,WAI7C,eAAClD,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAW2M,EAAvB,gBAGA,cAAC,KAAD,CAAyBM,MAAOC,KAAhC,SACI,cAACE,GAAA,EAAD,CACIC,WAAa,CACTxM,QAAS,CAAEyM,MAAO7I,GAClB8I,kBAAkB,GAEtB5J,MAAOjB,EACPsJ,SAAU,SAACP,GAAD,OAAesB,EAAMtB,QAGvC,cAAC,EAAD,CAAc3J,QAAQ,SAASC,MAAM,eAAeC,QArClD,WAClBgL,kBCnBFQ,GAAgB,uCAAG,4BAAA9I,EAAA,6DACjB+I,EAA6B,CACjCC,OAAQ,MACRC,YAAa,WAHQ,SAKVC,MAAM,aAAcH,GAC9B5I,MAAK,SAACC,GAAD,OAASA,EAAI+I,UAClB7I,OAAM,iBAAO,CACZC,MAAO,CAAEC,QAAS,qDARC,mFAAH,qDAYPsI,MCZTM,GAAM,uCAAG,4BAAApJ,EAAA,6DACP+I,EAA6B,CACjCC,OAAQ,MACRC,YAAa,WAHF,SAKAC,MAAM,eAAgBH,GAChC5I,MAAK,SAACC,GAAD,OAASA,EAAI+I,UAClB7I,OAAM,iBAAO,CACZC,MAAO,CAAEC,QAAS,qDART,mFAAH,qDAYG4I,MCFFC,GAAcpI,wBAA4B,CACrDqI,kBAAcC,EACdC,mBAAoB,kBAAM,MAC1BJ,OAAQ,kBAAM,QAGHK,GAAkC,SAAC,GAA+B,IAA7BrI,EAA4B,EAA5BA,SAChD,EAAwCC,qBAAxC,mBAAOiI,EAAP,KAAqBI,EAArB,KACM/E,EAAUC,cAEV4E,EAAqB/H,uBACzB,SAACpB,GACCqJ,EAAgBrJ,EAAKsJ,MACF,WAAnBtJ,EAAKsJ,KAAKC,KAAoBjF,EAAQkF,KAAK,gBAAkBlF,EAAQkF,KAAK,kBAE5E,CAAClF,IAGGyE,EAAS3H,sBAAW,sBAAC,sBAAAzB,EAAA,sEACnB8J,KACH3J,MAAK,WACJwE,EAAQkF,KAAK,UACbH,EAAgB,SAEjBpJ,OAAM,SAACC,GAAD,OAAgBkG,QAAQlG,MAAMA,MANd,2CAOxB,CAACoE,IAiBJ,OAfA6B,qBAAU,WACR,IAAMuD,EAAqB,uCAAG,sBAAA/J,EAAA,sEACtB8I,KAAmB3I,MAAK,SAACE,GACzBA,EAAKuF,SACP4D,EAAmBnJ,EAAKuF,SACG,WAA3BvF,EAAKuF,QAAQ+D,KAAKC,KAAoBjF,EAAQkF,KAAK,gBAAkBlF,EAAQkF,KAAK,kBAElFH,EAAgB,MAChB/E,EAAQkF,KAAK,cAPW,2CAAH,qDAW3BE,MACC,CAACP,EAAoB7E,IAEjB,cAAC0E,GAAYvH,SAAb,CAAsB7C,MAAO,CAAEqK,eAAcE,qBAAoBJ,UAAjE,SAA4EhI,KAG9E,SAAS4I,KACd,OAAOvH,qBAAW4G,ICkCLY,OArEf,YAA+D,EAAtCC,SAAuC,IAA7BC,EAA4B,EAA5BA,KACvBhH,EAAaI,IAAbJ,SACAmG,EAAiBU,KAAjBV,aACFc,EAA8B,QAAbjH,EdulBT,CACd,CACE8C,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,YACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,KACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,wBACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,yBACZ9L,MAAO,MAOK,CACd,CACE6L,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,mBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,eACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,wBACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,sBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,UACZ9L,MAAO,Mc7tBT,EAAsCiH,mBAAc,IAApD,mBAAOgJ,EAAP,KAAoBC,EAApB,KACA,EAAgDjJ,oBAAkB,GAAlE,mBAAOkJ,EAAP,KAAyBC,EAAzB,KACA,EAAwBnJ,mBAAS,IAAIgE,MAArC,mBAAOtH,EAAP,KAAaqK,EAAb,KACMrB,EAAO,IAAI1B,KACjB,EAAoBhE,mBAAS,IAAIgE,KAAK0B,EAAK0D,SAAS1D,EAAK2D,WAAa,MAAtE,mBAAO1M,EAAP,KAAWqK,EAAX,KAGMsC,EAAwBC,iBAAO,GAC/BC,EAAeD,iBAAO,GACtBE,EAAaF,iBAAgB,CAAC,CAAChK,GAAI,SAAU+J,sBAAuB,EAAGE,aAAc,EAAGV,KAAMA,EAAMjO,OAAQ,WA+ClH,OAzCAsK,qBAAU,WACN,IAAM0D,EAAQ,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAc1I,GAiC3B,OAhCJE,EAAiBoJ,EAAUnM,EAAMC,GAAImC,MAAK,SAACE,GACnC,IAAIyG,EAAM,EACNzG,EAAKE,MACLkG,QAAQC,IAAIrG,EAAKE,OACVF,EAAKuF,SACZvF,EAAKuF,QAAQe,aAAaC,KAAI,SAACC,GAC3BA,EAAYjG,GAAKkG,EAAM,EACvBD,EAAY3K,OAAS,cACrB,IAAM6K,EAAO,IAAI1B,KAAKwB,EAAYtI,cAClCsI,EAAYE,KAAOC,YAAOD,EAAM,oBAChC4D,EAAsBI,SAAalE,EAAYmE,KAAOnE,EAAYmE,KAAO,EACzElE,OAEJzG,EAAKuF,QAAQqF,SAASrE,KAAI,SAAC5C,GAAU,IAAD,EAChCA,EAAKpD,GAAKkG,EAAM,EAChB9C,EAAK9F,SAAL,UAAgB8F,EAAKkH,cAArB,aAAgB,EAAahN,SAC7B8F,EAAK9H,OAAS,UACd,IAAM6K,EAAO,IAAI1B,KAAKrB,EAAKmH,UAAYnH,EAAKmH,UAAY,IAAI9F,MAC5DrB,EAAK+C,KAAOC,YAAOD,EAAM,oBACzB8D,EAAaE,SAAW/G,EAAKjF,SAC7B+H,OAEJgE,EAAWC,QAAQ,GAAGJ,sBAAwBA,EAAsBI,QACpED,EAAWC,QAAQ,GAAGF,aAAeA,EAAaE,QAClDD,EAAWC,QAAQ,GAAGZ,KAAOQ,EAAsBI,QAAUF,EAAaE,QAC1ET,EAAe,uBAAIjK,EAAKuF,QAAQe,cAAjB,aAAkCtG,EAAKuF,QAAQqF,UAA/C,aAA4DH,EAAWC,UACrFK,MAAK,SAASpL,EAAGqL,GAAI,OAAOC,WAAWtL,EAAE+G,MAAQuE,WAAWD,EAAEtE,WAG/DN,QAAQC,IAAI,8CAGb,WACHiE,EAAsBI,QAAU,EAChCF,EAAaE,QAAU,EACvBT,EAAe,OAExB,CAACC,IAGA,mCACI,eAAClP,EAAA,EAAD,CAAKd,QAAQ,OAAOC,cAAc,SAAlC,UACI,cAAC,GAAD,CAAQuD,KAAMA,EAAMC,GAAIA,EAAIoK,QAASA,EAASC,MAAOA,EAAOC,gBAhDhD,WACpBkC,GAAqBD,MAgDb,cAACrP,EAAD,CAAWC,KAAMkP,EAAajP,QAASgP,U,UCvExCpQ,GAfGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFI,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ8Q,UAAU,QACVlR,UAAW,OAEfwD,MAAO,CACHpB,cAAe,YACf1B,SAAU,GACVD,WAAY,S,kBC8DLd,GAzEGC,aAAW,SAACC,GAAD,MAAY,CACrC4D,KAAM,CACF1D,MAAO,OACPC,UAAWH,EAAM2C,QAAQ,GACzBjC,gBAAiB,UACjB,yBAA0B,CACtBP,UAAWH,EAAM2C,QAAQ,KAGjCkD,OAAQ,CACJrD,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACRP,YAAa,OACbrM,SAAU,GACVC,OAAQ,OACR4B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,EACXuN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTC,UAAU,GAAD,OAAKC,aAAM9N,EAAMmC,QAAQS,QAAQC,KAAM,KAAvC,iBACTqK,YAAalN,EAAMmC,QAAQS,QAAQC,OAGzCkL,WAAY,CACRlN,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACf5B,MAAOX,EAAMmC,QAAQC,OAAOoH,OAGhC8H,gBAAkB,CACdzQ,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACf5B,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5BrJ,UAAW,SAEfqN,OAAQ,CACJhL,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACRP,YAAa,OACbrM,SAAU,GACV6B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,QACXD,MAAO,IACPwN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,gBAE1D1L,iBAAkB,CACdvB,MAAOX,EAAMmC,QAAQC,OAAOC,OAEhCkP,OAAQ,CACJhP,cAAe,YACfC,aAAcxC,EAAMyC,MAAMD,aAC1B9B,gBAAiBV,EAAMmC,QAAQS,QAAQC,KACvCC,OAAQ9C,EAAM2C,QAAQ,EAAG,EAAG,GAC5BD,QAAS1C,EAAM2C,QAAQ,GACvBzC,MAAO,IACPY,OAAQ,GACRD,SAAU,GACVD,WAAY,KAEhBoN,cAAe,CACXlL,OAAQ,eAEZ0O,SAAU,CACNtR,MAAO,a,iDCjDTuR,GAAW,CACb,CAAE1M,MAAO,cAAeoF,KAAM,oBAC9B,CAAEpF,MAAO,cAAeoF,KAAK,mBAE3BuH,GAAU,CACZ,CAAE3M,MAAO,cAAeoF,KAAM,eAC9B,CAAEpF,MAAO,UAAWoF,KAAM,WAC1B,CAAEpF,MAAO,SAAUoF,KAAM,UACzB,CAAEpF,MAAO,QAASoF,KAAM,SACxB,CAAEpF,MAAO,SAAUoF,KAAM,WAwSdwH,OA/Rf,YAAsF,IAAxD/N,EAAuD,EAAvDA,KAAMgO,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,WACxC5P,EAAUnC,KACP2D,EAAsEG,EAAtEH,KAAMI,EAAgED,EAAhEC,KAAMC,EAA0DF,EAA1DE,GAAIC,EAAsDH,EAAtDG,IAAKC,EAAiDJ,EAAjDI,SAAUG,EAAuCP,EAAvCO,WAAYC,EAA2BR,EAA3BQ,SAAUC,EAAiBT,EAAjBS,aAE9D,OACI,mCACI,cAAClD,EAAA,EAAD,UACI,cAAC,KAAD,CACI2Q,cAAe,CACXrO,KAAMoO,EAAWpO,KACjBI,KAAMgO,EAAWhO,KACjBC,GAAI+N,EAAW/N,GACfE,SAAU6N,EAAW7N,SACrBD,IAAK8N,EAAW9N,IAChBK,SAAUyN,EAAWzN,SACrBD,WAAY0N,EAAW1N,WACvBE,aAAcwN,EAAWxN,aACzB+G,SAAUyG,EAAWzG,SACrBC,WAAYwG,EAAWxG,YAE3B0G,iBAAkBC,OAAavP,MAAM,CACjCgB,KAAMuO,OAAaC,SAAS,0BAC5BpO,KAAOmO,OAAaC,SAAS,0BAC7BnO,GAAIkO,OAAaC,SAAS,0BAC1BjO,SAAUgO,OAAaC,SAAS,0BAChC7N,SAAU4N,OAAaC,SAAS,0BAChC9N,WAAY6N,OACZ3N,aAAc2N,OAAWC,SAAS,0BAClClO,IAAKiO,OAAaE,IAAI,GAAGC,IAAI,IAAIC,QAAQ,KAE7CC,SAAU,SAACC,GAAYV,EAAaU,IAvBxC,SAyBK,gBAAGV,EAAH,EAAGA,aAAcW,EAAjB,EAAiBA,aAAcD,EAA/B,EAA+BA,OAAiBE,GAAhD,EAAuCC,QAAvC,EAAgDD,QAAsBE,GAAtE,EAAwDC,aAAxD,EAAsED,eAAtE,OACD,sBAAML,SAAUT,EAAcxQ,UAAWa,EAAQ2B,KAAMgP,YAAU,EAAjE,SACI,eAACjJ,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAStJ,WAAW,SAA9C,UACI,cAACoJ,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAY7H,GAAG,OAAOtF,UAAWa,EAAQ8L,WAAzC,SACKtK,IAEL,eAACoP,GAAA,EAAD,CACInM,GAAG,OACHyD,KAAK,OACL2I,WAAS,EACTC,UAAW,CACPjL,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdgL,gBAAiB,CACfjL,SAAU,MACVC,WAAY,QAEdiL,mBAAoB,MAExBlO,MAAOuN,EAAO7O,KACd2J,SAAUmF,EACVtQ,QAAS,CAAEuL,OAAQvL,EAAQuL,QAjB/B,UAmBI,cAAC0F,GAAA,EAAD,CAAUnO,MAAO,EAAjB,+BACA,cAACmO,GAAA,EAAD,CAAUnO,MAAO,EAAjB,kCAEJ,cAACoO,GAAA,EAAD,CAAgB9M,MAAO+M,QAAQZ,EAAO/O,MAAtC,SAA8C+O,EAAO/O,UAEzD,eAACkG,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKhK,IAEL,cAAC8O,GAAA,EAAD,CACInM,GAAG,MACHyD,KAAK,MACL2I,WAAS,EACTC,UAAW,CACPjL,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdgL,gBAAiB,CACfjL,SAAU,MACVC,WAAY,QAEdiL,mBAAoB,MAExBlO,MAAOuN,EAAOvO,IACdqJ,SAAUmF,EACVtQ,QAAS,CAAEuL,OAAQvL,EAAQuL,QAjB/B,SAoBQ6F,MAAM,IAAIC,KAAK,GAAG5G,KAAI,SAAC6G,EAAG3G,GAAJ,OACtB,cAACsG,GAAA,EAAD,CAAU9R,UAAWa,EAAQuP,SAAUzM,MAAO6H,EAAI,EAAlD,SAAsDA,EAAI,SAIlE,cAACuG,GAAA,EAAD,CAAgB9M,MAAO+M,QAAQZ,EAAOzO,KAAtC,SAA6CyO,EAAOzO,cAIhE,cAAC4F,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKlK,IAEL,cAACgP,GAAA,EAAD,CACInM,GAAG,OACHyD,KAAK,OACL2I,WAAS,EACTC,UAAW,CACPjL,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdgL,gBAAiB,CACfjL,SAAU,MACVC,WAAY,QAEdiL,mBAAoB,MAExBlO,MAAOuN,EAAOzO,KACduJ,SAAUmF,EACVtQ,QAAS,CAAEuL,OAAQvL,EAAQuL,QAjB/B,SAmBqB,IAAhB8E,EAAO7O,KAAagO,GAAS/E,KAAI,SAAC8G,GAAD,OAC9B,cAACN,GAAA,EAAD,CAAUnO,MAAOyO,EAAQzO,MAAzB,SAAiCyO,EAAQrJ,UACzCuH,GAAQhF,KAAI,SAAC+G,GAAD,OACZ,cAACP,GAAA,EAAD,CAAUnO,MAAO0O,EAAO1O,MAAxB,SAAgC0O,EAAOtJ,YAI/C,cAACgJ,GAAA,EAAD,CAAgB9M,MAAO+M,QAAQZ,EAAO3O,MAAtC,SAA8C2O,EAAO3O,UAEzD,eAAC8F,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKjK,IAEL,cAAC+O,GAAA,EAAD,CACInM,GAAG,KACHyD,KAAK,KACL2I,WAAS,EACTC,UAAW,CACPjL,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdgL,gBAAiB,CACfjL,SAAU,MACVC,WAAY,QAEdiL,mBAAoB,MAExBlO,MAAOuN,EAAOxO,GACdsJ,SAAUmF,EACVtQ,QAAS,CAAEuL,OAAQvL,EAAQuL,QAjB/B,SAmBqB,IAAhB8E,EAAO7O,KAAagO,GAAS/E,KAAI,SAAC8G,GAAD,OAC9B,cAACN,GAAA,EAAD,CAAUnO,MAAOyO,EAAQzO,MAAzB,SAAiCyO,EAAQrJ,UACzCuH,GAAQhF,KAAI,SAAC+G,GAAD,OACZ,cAACP,GAAA,EAAD,CAAUnO,MAAO0O,EAAO1O,MAAxB,SAAgC0O,EAAOtJ,YAI/C,cAACgJ,GAAA,EAAD,CAAgB9M,MAAO+M,QAAQZ,EAAO1O,IAAtC,SAA4C0O,EAAO1O,aAI/D,cAAC6F,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACK/J,IAEL,cAAC0P,GAAA,EAAD,CACIhN,GAAG,WACHyD,KAAK,WACL9D,MAAO+M,QAAQZ,EAAOxO,UACtB2P,WAAYnB,EAAOxO,SACnByK,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAAOuN,EAAOtO,SACdoJ,SAAUmF,OAIlB,eAAC5I,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACK3J,IAEL,cAACsP,GAAA,EAAD,CACIhN,GAAG,WACHyD,KAAK,WACLsE,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAAOuN,EAAOlO,SACdgJ,SAAUmF,YAM1B,cAAC5I,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,SACI,cAAC,KAAD,CAAyB0L,MAAOC,KAAhC,SACI,eAAC3E,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACK1J,IAEL,cAAC,KAAD,CAAyBgK,MAAOC,KAAhC,SACI,cAACsF,GAAA,EAAD,CACInF,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAAOuN,EAAOjO,aACd+I,SAAU,SAACP,GAAD,OAAe6F,EAAc,eAAgB7F,iBAO/E,eAAClD,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACK5J,IAEL,cAACuP,GAAA,EAAD,CACIhN,GAAG,aACHyD,KAAK,aACL0J,WAAS,EACT5S,KAAM,EACNwN,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAAOuN,EAAOnO,WACdiJ,SAAUmF,OAGlB,cAAC5I,GAAA,EAAD,CAAMG,MAAI,EAACgK,GAAI,EAAf,SACI,cAACnK,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,SACI,cAAC,KAAD,CAAYwH,KAAK,aAAjB,SAEQ,SAAC4J,GACG,IAEQhQ,EAFSgQ,EAATnQ,KACA0O,OACAvO,IACJiQ,EAAgB,IAAIX,MAAMtP,GAAKuP,KAAK,IACxC,OACI,cAAC,KAAD,UAEQU,EAActH,KAAI,SAACxI,EAAgB+P,GAAjB,OACd,eAAC9S,EAAA,EAAD,WACI,eAACoN,GAAA,EAAD,CAAYnN,UAAWa,EAAQqP,gBAA/B,uBACe2C,EAAQ,EADvB,gBAGA,cAAC,KAAD,CACIvN,GAAE,qBAAgBuN,EAAhB,KACF9J,KAAI,qBAAgB8J,EAAhB,KACJ7S,UAAWa,EAAQuL,OACnBrK,MAAO,CAAE/C,SAAU,6BAa/D,cAACuJ,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC,EAAD,CAAc3G,MAAM,SAASD,QAAQ,0BClT7DgR,GAAyBxQ,EAAZyQ,GAAYzQ,EA+DlB0Q,OA7Df,WACI,IAAMnS,EAAUnC,KAChB,EAAwBqH,mBAAe,CAACxD,MAAO,GAAIC,KAAMuQ,GAAQvQ,OAAjE,mBAAOyQ,EAAP,KAAaC,EAAb,KACM7J,EAAUC,cACR1D,EAA0BsB,IAA1BtB,sBACAiC,EAAaI,IAAbJ,SACF4I,EAAanB,iBACf,CACIjN,KAAM,EACNI,KAAM,EACNC,GAAI,EACJE,SAAU,GACVD,IAAK,EACLK,SAAU,GACVD,WAAY,GACZE,aAAc,IAAI8G,KAClBC,SAAU,EACVC,WAAY,KAsBpB,OANAiB,qBAAU,WAEFgI,EADa,OAAbrL,EACQiL,GACGC,MAChB,CAAC1J,EAASxB,IAGT,mCACI,cAACU,GAAA,EAAD,CAAMC,WAAS,EAAC2K,UAAWC,KAAOpT,UAAWa,EAAQhC,KAAMM,WAAW,SAAtE,SACI,cAACoJ,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIb,GAAI,GAAvC,SACI,cAAC3S,EAAA,EAAD,CACId,QAAQ,OACRC,cAAc,SACd+Q,UAAU,QAHd,SAKI,eAAClQ,EAAA,EAAD,WACI,cAAC+I,GAAA,EAAD,CAAYE,QAAQ,KAAKzJ,MAAM,UAAUS,UAAWa,EAAQ0B,MAA5D,SACM0Q,EAAK1Q,QAEX,cAAC,GAAD,CAAoBC,KAAMyQ,EAAKzQ,KAAMgO,aA/BxC,SAACU,GAClB1M,EAAgB0M,GAAQrM,MAAK,SAACE,GACtBA,EAAKE,MACLW,EAAsBb,EAAKE,MAAMC,SAC1BH,EAAKuF,QACZ1E,EAAsB,6CAEtBA,EAAsB,wDAwBuD6K,WAAYA,EAAWhB,sBChDrG/Q,GAfGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFyC,QAAS1C,EAAM2C,QAAQ,IAE3BgB,MAAO,CACHpB,cAAe,YACf3B,WAAY,IACZC,SAAU,GACVF,MAAO,UACPoC,aAAc,MACd6R,UAAW,SACXC,WAAY7U,EAAM2C,QAAQ,QCqCnB7C,GAhDGC,aAAW,SAACC,GAAD,MAAY,CACrC4D,KAAM,CACF1D,MAAO,OACPC,UAAWH,EAAM2C,QAAQ,GACzB,yBAA0B,CACtBxC,UAAWH,EAAM2C,QAAQ,KAGjCkD,OAAQ,CACJrD,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACVC,OAAQ,OACR4B,QAAS1C,EAAM2C,QAAQ,GACvBI,aAAc,MACd2K,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTC,UAAU,GAAD,OAAKC,aAAM9N,EAAMmC,QAAQS,QAAQC,KAAM,KAAvC,iBACTqK,YAAalN,EAAMmC,QAAQS,QAAQC,OAGzC0B,MAAO,CACH1D,SAAU,GACVD,WAAY,IACZD,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5BjH,cAAe,aAEnBiL,OAAQ,CACJhL,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACV6B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,QACXD,MAAO,IACPwN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,gBAE1DkH,WAAY,CACRjU,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACfO,OAAQ,mBCmQDiS,OAnSf,YAAwE,IAA9CnD,EAA6C,EAA7CA,aAAcU,EAA+B,EAA/BA,OAC9BrQ,EAAUnC,KAGhB,EACiB,OAHIuJ,IAAbJ,SAGgBhE,EAAsBU,QAAUV,EAAsBC,IADtEC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,MAAOC,EAApC,EAAoCA,aAAcC,EAAlD,EAAkDA,aAAcC,EAAhE,EAAgEA,QAASC,EAAzE,EAAyEA,aAAcC,EAAvF,EAAuFA,aAIvF,OACG,mCACC,cAAC,KAAD,CACIoM,cAAe,CACXzM,MAAOiN,EAAOjN,MACdF,UAAWmN,EAAOnN,UAClBC,SAAUkN,EAAOlN,SACjBG,aAAc+M,EAAO/M,aACrBC,QAAS8M,EAAO9M,QAChBkK,KAAM,SACNpK,aAAcgN,EAAOhN,aACrB0P,yBAA0B1C,EAAO0C,yBACjCC,wBAAyB3C,EAAO2C,wBAChCC,wBAAyB5C,EAAO4C,wBAChCC,yBAA0B7C,EAAO6C,yBACjCC,wBAAyB9C,EAAO8C,wBAChCC,wBAAyB/C,EAAO+C,yBAEpCtD,iBAAkBC,OAAavP,MAAM,CACjC4C,MAAO2M,OAAa3M,MAAM,yBAAyB4M,SAAS,8BAC5D9M,UAAW6M,OAAaC,SAAS,+BACjC7M,SAAU4M,OAAaC,SAAS,+BAChC3M,aAAc0M,OAAaC,SAAS,+BACpCzM,QAASwM,OAAaC,SAAS,+BAC/BvC,KAAMsC,OACNzM,aAAcyM,OAAaC,SAAS,+BACpC+C,yBAA0BhD,OAAaE,IAAI,GAAGD,SAAS,yCACvDgD,wBAAyBjD,OAAaE,IAAI,GAAGD,SAAS,yCACtDiD,wBAAyBlD,OAAaE,IAAI,GAAGD,SAAS,0CACtDkD,yBAA0BnD,OAAaE,IAAI,GAAGD,SAAS,yCACvDmD,wBAAyBpD,OAAaE,IAAI,GAAGD,SAAS,yCACtDoD,wBAAyBrD,OAAaE,IAAI,GAAGD,SAAS,4CAE1DI,SAAU,SAACC,GAAYV,EAAaU,IA/BxC,SAkCK,gBAAGV,EAAH,EAAGA,aAAcW,EAAjB,EAAiBA,aAAcD,EAA/B,EAA+BA,OAAiBE,GAAhD,EAAuCC,QAAvC,EAAgDD,QAAhD,EAAwDG,aAAxD,OACG,cAAC,KAAD,CAAMN,SAAUT,EAAcxQ,UAAWa,EAAQ2B,KAAMgP,YAAU,EAAjE,SACI,eAACjJ,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASlH,QAAS,EAA5C,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC0L,QAAQ,eAA7B,UACI,eAAC3L,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACKY,IAEL,cAACuO,GAAA,EAAD,CACIhN,GAAG,YACHyD,KAAK,YACLpF,MAAOuN,EAAOnN,UACdiI,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOrN,WACtBwO,WAAYnB,EAAOrN,UACnBsJ,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACKa,IAEL,cAACsO,GAAA,EAAD,CACIhN,GAAG,WACHyD,KAAK,WACLpF,MAAOuN,EAAOlN,SACdgI,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOpN,UACtBuO,WAAYnB,EAAOpN,SACnBqJ,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,WAKlC,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC0L,QAAQ,eAA7B,UACI,eAAC3L,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACKc,IAEL,cAACqO,GAAA,EAAD,CACIhN,GAAG,QACHyD,KAAK,QACLpF,MAAOuN,EAAOjN,MACd+H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOnN,OACtBsO,WAAYnB,EAAOnN,MACnBoJ,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACKgB,IAEL,eAACsN,GAAA,EAAD,CACInM,GAAG,eACHyD,KAAK,eACL2I,WAAS,EACTC,UAAW,CACPjL,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBgL,gBAAiB,CACbjL,SAAU,MACVC,WAAY,QAEhBiL,mBAAoB,MAExBlO,MAAOuN,EAAO/M,aACd6H,SAAUmF,EACVtQ,QAAS,CAAEuL,OAAQvL,EAAQuL,QAjB/B,UAmBI,cAAC0F,GAAA,EAAD,CAAUnO,MAAO,QAAjB,mBACA,cAACmO,GAAA,EAAD,CAAUnO,MAAO,aAAjB,wBACA,cAACmO,GAAA,EAAD,CAAUnO,MAAO,QAAjB,4BAIZ,eAAC4E,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC0L,QAAQ,eAA7B,UACA,eAAC3L,GAAA,EAAD,CAAMG,MAAI,EAAV,UACQ,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACSe,IAET,cAACoO,GAAA,EAAD,CACIhN,GAAG,eACHyD,KAAK,eACLpF,MAAOuN,EAAOhN,aACd8H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOlN,cACtBiQ,WAAS,EACT5B,WAAYnB,EAAOlN,aACnBmJ,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACSiB,IAET,cAACkO,GAAA,EAAD,CACIhN,GAAG,UACHyD,KAAK,UACLpF,MAAOuN,EAAO9M,QACd4H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOhN,SACtB+P,WAAS,EACT5B,WAAYnB,EAAOhN,QACnBiJ,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,WAKlC,cAACzE,GAAA,EAAD,CAAYsL,MAAM,SAASpU,UAAWa,EAAQ6S,WAA9C,SACKrP,IAEL,eAACkE,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC0L,QAAQ,eAA7B,UACI,eAAC3L,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAApC,UACI,cAACvF,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,uBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,2BACHyD,KAAK,2BACLpF,MAAOuN,EAAO0C,yBACd5H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOwC,0BACtBrB,WAAYnB,EAAOwC,yBACnBvG,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAApC,UACI,cAACvF,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,uBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,0BACHyD,KAAK,0BACLpF,MAAOuN,EAAO2C,wBACd7H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOyC,yBACtBtB,WAAYnB,EAAOyC,wBACnBxG,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAApC,UACI,cAACvF,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,wBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,0BACHyD,KAAK,0BACLpF,MAAOuN,EAAO4C,wBACd9H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAO0C,yBACtBvB,WAAYnB,EAAO0C,wBACnBzG,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,WAKlC,cAACzE,GAAA,EAAD,CAAYsL,MAAM,SAASpU,UAAWa,EAAQ6S,WAA9C,SACKpP,IAEL,eAACiE,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC0L,QAAQ,eAA7B,UACI,eAAC3L,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAApC,UACI,cAACvF,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,uBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,2BACHyD,KAAK,2BACLpF,MAAOuN,EAAO6C,yBACd/H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAO2C,0BACtBxB,WAAYnB,EAAO2C,yBACnB1G,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAApC,UACI,cAACvF,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,uBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,0BACHyD,KAAK,0BACLpF,MAAOuN,EAAO8C,wBACdhI,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAO4C,yBACtBzB,WAAYnB,EAAO4C,wBACnB3G,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAApC,UACI,cAACvF,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,wBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,0BACHyD,KAAK,0BACLpF,MAAOuN,EAAO+C,wBACdjI,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAO6C,yBACtB1B,WAAYnB,EAAO6C,wBACnB5G,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,WAKlC,cAAChF,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACpJ,eAAe,SAApC,SACI,cAAC,EAAD,CAAc2C,MAAM,SAASD,QAAQ,wBCnSpDuS,GAAU,uCAAG,WAAO5P,GAAP,SAAAC,EAAA,sEACTC,IAAMC,KAAK,UAAWH,GAC1BI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDAJP,mFAAH,sDAQVoP,GAAU,uCAAG,sBAAA5P,EAAA,sEACTC,IAAMS,IAAI,WACdP,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDAJP,mFAAH,qDAQVqP,GAAY,uCAAG,WAAOjP,GAAP,SAAAZ,EAAA,sEACXC,IAAMY,OAAN,iBAAuBD,IAC/BT,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDAJD,mFAAH,sDAQZsP,GAAW,uCAAG,WAAO/P,EAAgBa,GAAvB,SAAAZ,EAAA,sEACVC,IAAM8P,MAAN,iBAAsBnP,GAAMb,GACpCI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDAJF,mFAAH,wDC2BTwP,OA/Cf,WACI,IAAM7T,EAAUnC,KACRkH,EAA0BsB,IAA1BtB,sBACAiC,EAAaI,IAAbJ,SA8BR,OACI,mCACI,cAACU,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAStJ,WAAW,SAASgU,UAAWC,KAAO7R,QAAS,EAAGvB,UAAWa,EAAQhC,KAAxG,SACI,eAAC0J,GAAA,EAAD,CAAMG,MAAI,EAAC3G,MAAO,CAAEzC,gBAAiB,WAArC,UACI,cAACwJ,GAAA,EAAD,CAAYE,QAAQ,KAAKhJ,UAAWa,EAAQ0B,MAA5C,SACmB,OAAbsF,EAAoB,uBAAiB,eAE3C,cAAC,GAAD,CAAe2I,aApBV,SAAC/L,GAClB4P,GAAW5P,GAAQI,MAAK,SAACE,GACjBA,EAAKE,OACLkG,QAAQC,IAAIrG,EAAKE,OACjBW,EAAsBb,EAAKE,MAAMC,UAC1BH,EAAKuF,SACZa,QAAQC,IAAIrG,EAAKuF,SACjB1E,EAAsB,wCAEtBA,EAAsB,wDAWyBsL,OAnCvC,CAChBjN,MAAO,GACPF,UAAW,GACXC,SAAU,GACVG,aAAc,GACdC,QAAS,GACTF,aAAc,GACd0P,yBAA0B,EAC1BC,wBAAyB,EACzBC,wBAAyB,EACzBC,yBAA0B,EAC1BC,wBAAyB,EACzBC,wBAAyB,a,UCVlBvV,GAbGC,aAAW,SAACC,GAAD,MAAY,CACrC+V,QAAS,CACLrT,QAAS1C,EAAM2C,QAAQ,IAG3BgB,MAAO,CACH9C,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACfQ,aAAc,QCKPjD,GAdGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFyC,QAAS1C,EAAM2C,QAAQ,GACvBpC,WAAY,SACZC,eAAgB,UAEpBmD,MAAO,CACH9C,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACfQ,aAAc,QCgCPiT,GAhCM,SAAC,GAAgE,IAA9D1D,EAA6D,EAA7DA,OAAQ2D,EAAqD,EAArDA,2BAC5B,EAAwBnW,KAAhBG,EAAR,EAAQA,KAAM0D,EAAd,EAAcA,MACNqD,EAA2BsB,IAA3BtB,sBAgBR,OACI,mCACI,eAAC2C,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzI,UAAWnB,EAAMqV,QAAQ,SAA5D,UACQ,cAACpL,GAAA,EAAD,CAAY9I,UAAWuC,EAAvB,2BAGJ,cAACgG,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC,GAAD,CAAe8H,aArBV,SAACsE,GAClB,IAAMxP,EAAK4L,EAAO7G,IAClBmK,GAAYM,EAAYxP,GAAIT,MAAK,SAACE,GAC1BA,EAAKE,MACLW,EAAsBb,EAAKE,MAAMC,SAC1BH,EAAKuF,SACZuK,EAA2B3D,EAAQnM,EAAKuF,QAAQsF,QAChDhK,EAAsB,0CAEtBA,EAAsB,wDAYyBsL,OAAQA,YCtBjER,GAAc,CAChBzM,MAAO,GACPF,UAAW,GACXC,SAAU,GACVG,aAAc,GACdC,QAAS,GACTF,aAAc,GACd0P,yBAA0B,EAC1BC,wBAAyB,EACzBC,wBAAyB,EACzBC,yBAA0B,EAC1BC,wBAAyB,EACzBC,wBAAyB,GA2Gdc,GAxGK,WAChB,MAA2BrW,KAAnBiW,EAAR,EAAQA,QAASpS,EAAjB,EAAiBA,MACTsF,EAAaI,IAAbJ,SACR,EAAwB9B,mBAAoB,IAA5C,mBAAOlG,EAAP,KAAamV,EAAb,KACA,EAAoCjP,oBAAkB,GAAtD,mBAAOkP,EAAP,KAAmBC,EAAnB,KACA,EAAgDnP,oBAAkB,GAAlE,mBAAOoP,EAAP,KAAyBC,EAAzB,KACA,EAAkCrP,mBAAiB2K,IAAnD,mBAAO2E,EAAP,KAAkBC,EAAlB,KAEQ1P,EAA0BsB,IAA1BtB,sBACFyD,EAAUC,cAEhB4B,qBAAU,WACNoJ,KAAazP,MAAK,SAACE,GACXA,EAAKE,OACLkG,QAAQC,IAAIrG,EAAKE,OACjBW,EAAsBb,EAAKE,MAAMC,UAC1BH,EAAKuF,SACZvF,EAAKuF,QAAQiL,QAAQjK,KAAI,SAACsE,EAAQpE,GAC9BoE,EAAOtK,GAAKkG,EAAM,EAClB,IAAMC,EAAO,IAAI1B,KAAK6F,EAAOC,UAAYD,EAAOC,UAAY9F,KAAKyL,OACjE5F,EAAOC,UAAYnE,YAAOD,EAAM,uBAEpCuJ,EAAQjQ,EAAKuF,QAAQiL,UAErB3P,EAAsB,yDAG/B,CAACyD,IAEJ,IAAMmB,EAAkB,SAAC0G,GACrBkE,GAAoB,GACpBE,EAAapE,EAAOvR,MAGlB+K,EAAoB,SAACwG,GACvBgE,GAAc,GACdI,EAAapE,EAAOvR,MAsBlB8V,EAAoB,WACtBP,GAAc,IAQZ9N,EAAsB,OAAbS,EAAoB,CACK6N,KAAM,gEACNC,IAAK,OACLC,GAAI,eAER,CACIF,KAAM,+CACNC,IAAK,MACLC,GAAI,OAGtC9V,EAAuB,OAAb+H,E3Bu8Be,SAAC2C,EAAiBE,GAsDnD,MArDgB,CACd,CACEC,MAAO,eACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,UACPC,WAAY,UACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,sBACZ9L,MAAO,KAET,CACE6L,MAAO,aACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,OACND,QAAQ,aACRE,QAAS,kBAAMwI,EAAgBJ,QAKvC,CACEO,MAAO,MACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,SACND,QAAQ,MACRE,QAAS,kBAAM0I,EAAkBN,S2Bv/BLyL,CAAoBrL,EAAiBE,G3B84B9C,SAACF,EAAiBE,GAsD/C,MArDgB,CACd,CACEC,MAAO,eACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,UACPC,WAAY,UACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,eACZ9L,MAAO,KAET,CACE6L,MAAO,OACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,OACND,QAAQ,OACRE,QAAS,kBAAMwI,EAAgBJ,QAKvC,CACEO,MAAO,SACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,SACND,QAAQ,SACRE,QAAS,kBAAM0I,EAAkBN,S2B77BH0L,CAAgBtL,EAAiBE,GAEvE,OACI,qCACI,cAAC9K,EAAD,CAAWC,KAAMA,EAAMC,QAASA,IAChC,cAAC,EAAD,CAAcmG,KAAMgP,EAAYnO,QAAS2O,EAAzC,SACI,mCACI,eAAC1V,EAAA,EAAD,CAAKd,QAAQ,OAAOE,WAAW,SAASD,cAAc,SAASc,UAAW2U,EAA1E,UACQ,cAAC7L,GAAA,EAAD,CAAY9I,UAAWuC,EAAvB,SACK6E,EAAOsO,OAEZ,eAAC3V,EAAA,EAAD,CAAKX,eAAe,SAAS2W,EAAG,EAAGC,GAAI,EAAvC,UACI,cAAC,EAAD,CAAclU,QAASsF,EAAOuO,IAAK5T,MAAM,MAAMC,QAhDxD,WACf,IAAMsD,EAAE,OAAG+P,QAAH,IAAGA,OAAH,EAAGA,EAAWhL,IACtBkK,GAAajP,GAAIT,MAAK,SAACE,GACfA,EAAKE,MACLW,EAAsBb,EAAKE,MAAMC,SAC1BH,EAAKuF,SACZ1E,EAAsB,yCACtBoP,EAAQnV,EAAK0K,QAAO,SAAA5K,GAAG,OAAIA,EAAI2F,MAAJ,OAAW+P,QAAX,IAAWA,OAAX,EAAWA,EAAW/P,QACjD4P,GAAc,IAEdtP,EAAsB,0DAuCN,cAAC,EAAD,CAAc9D,QAASsF,EAAOwO,GAAI7T,MAAM,KAAKC,QAASyT,cAK1E,cAAC,EAAD,CAAcxP,KAAMkP,EAAkBrO,QA1Dd,WAC5BsO,GAAoB,IAyDhB,SACI,cAAC,GAAD,CAAclE,OAAQmE,EAAWR,2BApCV,SAACoB,EAAkBrG,GAClDoF,EAAQnV,EAAKyL,KAAI,SAAA3L,GAAG,OAAIA,EAAI0K,MAAQ4L,EAAS5L,IAArB,6BAA+B1K,GAAQiQ,GAAUjQ,MACzEyV,GAAoB,YClFfc,GAAoB,SAACzR,EAAgBa,GAC9C,OAAOX,IAAM8P,MAAN,8BAAmCnP,GAAMb,GACvCI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAAAC,GAAK,OAAIA,EAAMQ,SAASV,SAe9BoR,GAA+B,uCAAG,WAAO7Q,EAAY7C,EAAYC,GAA/B,SAAAgC,EAAA,sEAC9BC,IAAMS,IAAN,mCAAsCE,GAAM,CACrD5E,OAAQ,CACJ+B,OACAC,QAGPmC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QARU,mFAAH,0DAW/BI,GAAe,uCAAG,WAAO1C,EAAYC,GAAnB,SAAAgC,EAAA,sEACdC,IAAMS,IAAN,sBAAiC,CAC1C1E,OAAQ,CACJ+B,KAAMA,EACNC,GAAIA,KAGXmC,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QARN,mFAAH,wDAWfqR,GAAO,uCAAG,sBAAA1R,EAAA,sEACNC,IAAMS,IAAN,6BACZP,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QAHd,mFAAH,qDAMPsR,GAAW,uCAAG,sBAAA3R,EAAA,sEACVC,IAAMS,IAAN,iCACZP,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QAHV,mFAAH,qD,kDCvDXuR,GAAU,uCAAG,WAAO7R,GAAP,SAAAC,EAAA,sEACTC,IAAMC,KAAK,UAAWH,GAC9BI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QAHf,mFAAH,sDAMVwR,GAAY,uCAAG,WAAO9R,EAAgBa,GAAvB,SAAAZ,EAAA,sEACXC,IAAM8P,MAAN,kBAAuBnP,GAAMb,GACrCI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QAHb,mFAAH,wDAMZyR,GAAY,uCAAG,WAAOlR,GAAP,SAAAZ,EAAA,sEACXC,IAAMY,OAAN,kBAAwBD,IAChCT,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QAHb,mFAAH,sDAMZ0R,GAAU,uCAAG,sBAAA/R,EAAA,sEACTC,IAAMS,IAAI,eAClBP,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QAHf,mFAAH,qDCDRrG,GAlBGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFyC,QAAS1C,EAAM2C,QAAQ,GACvB0O,UAAW,QACXnR,MAAO,QAEX4X,SAAU,CACN,UAAW,CACPC,OAAQ,UACRC,QAAS,GACTtX,gBAAiB,WAErB,aAAc,CACVA,gBAAiB,gBC0FduX,GAxFM,SAAC,GAAuE,IAArEtL,EAAoE,EAApEA,YAAayB,EAAuD,EAAvDA,gBAAiB5G,EAAsC,EAAtCA,YAClD,EAA2B1H,KAAnBG,EAAR,EAAQA,KAAM6X,EAAd,EAAcA,SACRI,EAAWnW,YAAK+V,EAAU,YAEhC,EAA0B3Q,qBAA1B,mBAAOpC,EAAP,KAAcmG,EAAd,KACA,EAA8B/D,mBAAoB,IAAlD,mBAAOgR,EAAP,KAAgBC,EAAhB,KAEQpR,EAA0BsB,IAA1BtB,sBAERsF,qBAAU,WAUN,OATAuL,KAAa5R,MAAK,SAACE,GACXA,EAAKE,MACLW,EAAsBb,EAAKE,OACpBF,EAAKuF,QACZ0M,EAAWjS,EAAKuF,QAAQyM,SAExBnR,EAAsB,uDAGvB,WACHoR,EAAW,OAEhB,IAsBH,OACI,mCACI,eAACzO,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzI,UAAWnB,EAA9C,UACI,eAAC0J,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACI,GAAA,EAAD,mCAGI,cAACmO,GAAA,EAAD,CAAMlV,MAAO,CAAEjD,MAAO,OAAQoY,SAAU,IAAK5X,gBAAiB,oBAA9D,SACKyX,EAAQzL,KAAI,SAAChD,EAAQkD,GAAT,OACT,qCACI,eAAC2L,GAAA,EAAD,CAAUhY,WAAW,aAAaa,UAAW2D,IAAU2E,EAAO+B,IAAMqM,EAAWI,EAAU9U,QAAS,WAAO8H,EAASxB,EAAO+B,MAAzH,UACI,cAAC+M,GAAA,EAAD,UACI,cAACzO,GAAA,EAAD,CAAQ0O,IAAG,UAAK/O,EAAOS,MAAQH,IAAI,iEAEvC,cAAC0O,GAAA,EAAD,CACI9V,QAAO,UAAK8G,EAAOS,MACnBwO,UACI,mCACA,eAACzO,GAAA,EAAD,CACI/G,MAAO,CAAE9C,QAAS,UAClBkU,UAAU,OACVnK,QAAQ,QAHZ,4BAKgBV,EAAOY,WALvB,IAKoC,uBALpC,mBAKoDZ,EAAOW,uBAOvE,cAACuO,GAAA,EAAD,CAASxO,QAAQ,QAAQmK,UAAU,kBAKvD,eAAC5K,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACpJ,eAAe,eAAe2C,MAAO,CAAEhD,UAAW,OAAvE,UACI,cAAC,EAAD,CAAc+C,QAAQ,SAASC,MAAM,eAAeC,QAxD/C,WACjB,QAAciM,IAAVtK,EAAJ,CAIA,IAAM2B,EAAKiG,EAAYlB,IAEvB6L,GADe,CAAEpL,WAAW,EAAMxC,OAAQ3E,GAChB2B,GAAIT,MAAK,SAACE,GAC5BA,EAAKE,MACLW,EAAsBb,EAAKE,OACpBF,EAAKuF,SACZ1E,EAAsB,gDACtBoH,KAGApH,EAAsB,4DAb1BA,EAAsB,6BAuDd,cAAC,EAAD,CAAc9D,QAAQ,SAASC,MAAM,SAASC,QAASoE,aCrF5D1H,GAXGC,aAAW,SAACC,GAAD,MAAY,CACrC6Y,eAAgB,CACZtW,cAAe,YACf1B,SAAU,GACVD,WAAY,KAEhBkY,cAAe,CACXpW,QAAS1C,EAAM2C,QAAQ,QCkBhBoW,GApBQ,SAAC,GAA2B,IAAzB1N,EAAwB,EAAxBA,WACtB,EAA0CvL,KAAlCgZ,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,eAEvB,OACI,mCACI,eAAC1X,EAAA,EAAD,CAAKC,UAAW0X,EAAhB,UACI,cAAC5O,GAAA,EAAD,CAAY9I,UAAWyX,EAAvB,wBACA,cAACD,GAAA,EAAD,IACA,cAACP,GAAA,EAAD,UACKhN,EAAWqB,KAAI,SAACxI,EAAW0I,GAAZ,OAChB,cAAC2L,GAAA,EAAD,UACI,cAACG,GAAA,EAAD,CAAc9V,QAAO,UAAKgK,EAAM,EAAX,YAAgB1I,MAD1B0I,cCuGpBoM,OA1Gf,WACI,IAAQ/P,EAAaI,IAAbJ,SACAjC,EAA0BsB,IAA1BtB,sBACR,EAAwBG,mBAAc,IAAtC,mBAAOlG,EAAP,KAAamV,EAAb,KACA,EAAwBjP,oBAAkB,GAA1C,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA4CH,oBAAkB,GAA9D,mBAAO8R,EAAP,KAAuBC,EAAvB,KACA,EAAgD/R,oBAAkB,GAAlE,mBAAOkJ,EAAP,KAAyBC,EAAzB,KACA,EAAsCnJ,qBAAtC,mBAAOwF,EAAP,KAAoBwM,EAApB,KACA,EAAwBhS,mBAAS,IAAIgE,MAArC,mBAAOtH,EAAP,KAAaqK,EAAb,KACA,EAAoC/G,mBAAmB,IAAvD,mBAAOkE,EAAP,KAAmB+N,EAAnB,KACMvM,EAAO,IAAI1B,KACjB,EAAoBhE,mBAAS,IAAIgE,KAAK0B,EAAK0D,SAAS1D,EAAK2D,WAAa,MAAtE,mBAAO1M,EAAP,KAAWqK,EAAX,KAEMkL,EAAuB,SAAC7N,GAC1B,IAAM9E,EAAK8E,EAAWzK,IAAI0K,IAE1B6L,GADe,CAAEtV,OAAQ,aACC0E,GAAIT,MAAK,SAACE,GAC5BA,EAAKE,MACLW,EAAsBb,EAAKE,OACpBF,EAAKuF,SACZ1E,EAAsB,gDACtBoP,EAAQnV,EAAK0K,QAAO,SAAC5K,GAAD,OAAcA,EAAI2F,KAAO8E,EAAW9E,QAExDM,EAAsB,wDAK5BsS,EAAyB,SAAC9N,GAC5B,IAAM9E,EAAK8E,EAAWzK,IAAI0K,IAE1B6L,GADe,CAAEtV,OAAQ,eACC0E,GAAIT,MAAK,SAACE,GAC5BA,EAAKE,MACLW,EAAsBb,EAAKE,OACpBF,EAAKuF,SACZ1E,EAAsB,kDACtBoP,EAAQnV,EAAK0K,QAAO,SAAC5K,GAAD,OAAcA,EAAI2F,KAAO8E,EAAW9E,QAExDM,EAAsB,wDAK5BuS,EAAqB,SAAC/N,GACxB2N,EAAe3N,EAAWzK,KAC1BuG,GAAQ,IAGNE,EAAc,WAChBF,GAAQ,IAGN8G,EAAkB,WACpBkC,GAAqBD,IAGnBmJ,EAAkB,SAAChO,GACrB4N,EAAc5N,EAAWzK,IAAIsK,YAC7B6N,GAAkB,IAOtB5M,qBAAU,WAmBN,OAlBA/F,GAAgB1C,EAAMC,GAAImC,MAAK,SAACE,GACxBA,EAAKE,MACLW,EAAsBb,EAAKE,OACpBF,EAAKuF,SACZa,QAAQC,IAAIrG,EAAKuF,SACjBvF,EAAKuF,QAAQe,aAAaC,KAAI,SAACC,EAAaC,GAAS,IAAD,EAChDD,EAAYjG,GAAKkG,EAAM,EACvBD,EAAY3K,OAAS,cACrB,IAAM6K,EAAO,IAAI1B,KAAKwB,EAAYtI,cAClCsI,EAAYE,KAAOC,YAAOD,EAAM,oBAChCF,EAAY3I,SAAZ,UAAuB2I,EAAYqE,cAAnC,aAAuB,EAAoB1L,gBAE/C8Q,EAAQjQ,EAAKuF,QAAQe,eAErBzF,EAAsB,uDAIvB,WACHoP,EAAQ,OAEb,CAAC/F,IAEJ,IAAMnP,EAAuB,QAAb+H,ECpGY,SAACoQ,EAAsBC,EAAwBC,EAAoBC,GAmE/F,MAlEgB,CACd,CACEzN,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,YACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,KACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,SACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,mCACE,eAACrK,EAAA,EAAD,CAAKgC,MAAO,CAAE9C,QAAS,OAAQC,cAAe,UAA9C,UACA,cAAC,EAAD,CACI6C,MAAM,iBACND,QAAQ,OACRE,QAAS,kBAAMoW,EAAgBhO,MACjC,cAAC,EAAD,CACEnI,SAAUmI,EAAWzK,IAAImL,UACzB/I,MAAQqI,EAAWzK,IAAImL,UAAwB,YAAZ,UACnChJ,QAAUsI,EAAWzK,IAAImL,UAAwB,YAAZ,UACrC9I,QAAS,kBAAMmW,EAAmB/N,MACpC,cAAC,EAAD,CACErI,MAAM,YACND,QAAQ,YACRE,QAAS,kBAAMiW,EAAqB7N,MACtC,cAAC,EAAD,CACErI,MAAM,cACND,QAAQ,cACRE,QAAS,kBAAMkW,EAAuB9N,cDwCfiO,CAAiBJ,EAAsBC,EAAwBC,EAAoBC,GC9BtF,SAACH,EAAsBC,EAAwBC,EAAoBC,GAsErG,MArEgB,CACd,CACEzN,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,mBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,OACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,mCACE,eAACrK,EAAA,EAAD,CAAKgC,MAAO,CAAE9C,QAAS,OAAQC,cAAe,UAA9C,UACA,cAAC,EAAD,CACI6C,MAAM,iBACND,QAAQ,YACRE,QAAS,kBAAMoW,EAAgBhO,MACjC,cAAC,EAAD,CACEnI,SAAUmI,EAAWzK,IAAImL,UACzB/I,MAAQqI,EAAWzK,IAAImL,UAAwB,YAAZ,UACnChJ,QAAUsI,EAAWzK,IAAImL,UAAqB,YAAT,OACrC9I,QAAS,kBAAMmW,EAAmB/N,MAEpC,cAAC,EAAD,CACErI,MAAM,YACND,QAAQ,qBACRE,QAAS,kBAAMiW,EAAqB7N,MAEtC,cAAC,EAAD,CACErI,MAAM,cACND,QAAQ,uBACRE,QAAS,kBAAMkW,EAAuB9N,cD/BfkO,CAAqBL,EAAsBC,EAAwBC,EAAoBC,GAE5H,OACI,eAACrY,EAAA,EAAD,WACI,cAAC,GAAD,CAAQ0C,KAAMA,EAAMC,GAAIA,EAAIoK,QAASA,EAASC,MAAOA,EAAOC,gBAAiBA,IAC7E,cAACpN,EAAD,CAAWC,KAAMA,EAAMC,QAASA,IAChC,cAAC,EAAD,CAAcmG,KAAMA,EAAMa,QAASV,EAAnC,SACI,cAAC,GAAD,CAAcmF,YAAaA,EAAayB,gBAAiBA,EAAiB5G,YAAaA,MAE3F,cAAC,EAAD,CAAcH,KAAM4R,EAAgB/Q,QAtCd,WAC1BgR,GAAkB,IAqCd,SACI,cAAC,GAAD,CAAgB7N,WAAYA,UEvC7BvL,GAzEGC,aAAW,SAACC,GAAD,MAAY,CACrC4D,KAAM,CACF1D,MAAO,OACPC,UAAWH,EAAM2C,QAAQ,GACzBjC,gBAAiB,UACjB,yBAA0B,CACtBP,UAAWH,EAAM2C,QAAQ,KAGjCkD,OAAQ,CACJrD,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACRP,YAAa,OACbrM,SAAU,GACVC,OAAQ,OACR4B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,EACXuN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTC,UAAU,GAAD,OAAKC,aAAM9N,EAAMmC,QAAQS,QAAQC,KAAM,KAAvC,iBACTqK,YAAalN,EAAMmC,QAAQS,QAAQC,OAGzCkL,WAAY,CACRlN,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACf5B,MAAOX,EAAMmC,QAAQC,OAAOoH,OAGhC8H,gBAAkB,CACdzQ,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACf5B,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5BrJ,UAAW,SAEfqN,OAAQ,CACJhL,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACRP,YAAa,OACbrM,SAAU,GACV6B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,QACXD,MAAO,IACPwN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,gBAE1D1L,iBAAkB,CACdvB,MAAOX,EAAMmC,QAAQC,OAAOC,OAEhCkP,OAAQ,CACJhP,cAAe,YACfC,aAAcxC,EAAMyC,MAAMD,aAC1B9B,gBAAiBV,EAAMmC,QAAQS,QAAQC,KACvCC,OAAQ9C,EAAM2C,QAAQ,EAAG,EAAG,GAC5BD,QAAS1C,EAAM2C,QAAQ,GACvBzC,MAAO,IACPY,OAAQ,GACRD,SAAU,GACVD,WAAY,KAEhBoN,cAAe,CACXlL,OAAQ,eAEZ0O,SAAU,CACNtR,MAAO,aChETyZ,GAAa,CACf,CACI5U,MAAO,KACPR,MAAO,MAEX,CACEQ,MAAO,MACPR,MAAO,KAET,CACEQ,MAAO,MACPR,MAAO,WAoMEqV,OAnLf,YAA+E,IAArDhW,EAAoD,EAApDA,KAAMgO,EAA8C,EAA9CA,aAAc5B,EAAgC,EAAhCA,SAClCvM,EAAuDG,EAAvDH,KAAMkB,EAAiDf,EAAjDe,KAAMF,EAA2Cb,EAA3Ca,KAAMC,EAAqCd,EAArCc,SAAUE,EAA2BhB,EAA3BgB,aAAcC,EAAajB,EAAbiB,SAE5C5C,EAAUnC,KAEhB,OACI,mCACI,cAAC,KAAD,CACIgS,cAAe,CACX9B,SAAUA,EACVvM,KAAM,GACNgB,KAAM,EACNC,SAAU,KACVE,aAAc,EACdC,SAAU,EACVF,KAAM,IAEToN,iBAAkBC,OAAavP,MAAM,CAClCgB,KAAMuO,OAAaC,SAAS,0BAC5BxN,KAAMuN,OAAaE,IAAI,GAAGE,QAAQ,GAClC1N,SAAUsN,OAAaC,SAAS,0BAChCrN,aAAcoN,OAAaE,IAAI,GAAGE,QAAQ,GAC1CvN,SAAUmN,OAAaE,IAAI,GAAGE,QAAQ,GACtCzN,KAAMqN,SAEVK,SAAU,SAACC,GAAYV,EAAaU,IAlBxC,SAoBK,gBAAGV,EAAH,EAAGA,aAAcW,EAAjB,EAAiBA,aAAcD,EAA/B,EAA+BA,OAAiBE,GAAhD,EAAuCC,QAAvC,EAAgDD,QAAhD,EAAwDG,aAAxD,OACG,sBAAMN,SAAUT,EAAcxQ,UAAWa,EAAQ2B,KAAMgP,YAAU,EAAjE,SACI,eAACjJ,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAStJ,WAAW,SAA9C,UACI,cAACoJ,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,eAACH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAY7H,GAAG,OAAOtF,UAAWa,EAAQ8L,WAAzC,SACKtK,IAEL,eAACoP,GAAA,EAAD,CACInM,GAAG,OACHyD,KAAK,OACL2I,WAAS,EACTC,UAAW,CACPjL,aAAc,CACdC,SAAU,SACVC,WAAY,QAEZgL,gBAAiB,CACjBjL,SAAU,MACVC,WAAY,QAEZiL,mBAAoB,MAExBlO,MAAOuN,EAAO7O,KACd2J,SAAUmF,EACVtQ,QAAS,CAAEuL,OAAQvL,EAAQuL,QAjB/B,UAmBI,cAAC0F,GAAA,EAAD,CAAUnO,MAAO,OAAjB,kBACA,cAACmO,GAAA,EAAD,CAAUnO,MAAO,cAAjB,4BAEJ,cAACoO,GAAA,EAAD,CAAgB9M,MAAO+M,QAAQZ,EAAO/O,MAAtC,SAA8C+O,EAAO/O,UAEzD,eAACkG,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKpJ,IAEL,cAAC+O,GAAA,EAAD,CACIhN,GAAG,OACHyD,KAAK,OACL9D,MAAO+M,QAAQZ,EAAO7N,MACtBgP,WAAYnB,EAAO7N,KACnB8J,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAAOuN,EAAO3N,KACdyI,SAAUmF,YAM1B,eAAC5I,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,eAACH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKtJ,IAEL,cAACiP,GAAA,EAAD,CACIhN,GAAG,OACHyD,KAAK,OACL9D,MAAO+M,QAAQZ,EAAO/N,MACtBkP,WAAYnB,EAAO/N,KACnBgK,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAAOuN,EAAO7N,KACd2I,SAAUmF,OAIlB,eAAC5I,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKrJ,IAEL,cAACmO,GAAA,EAAD,CACInM,GAAG,WACHyD,KAAK,WACL2I,WAAS,EACTC,UAAW,CACPjL,aAAc,CACdC,SAAU,SACVC,WAAY,QAEZgL,gBAAiB,CACjBjL,SAAU,MACVC,WAAY,QAEZiL,mBAAoB,MAExBlO,MAAOuN,EAAO5N,SACd0I,SAAUmF,EACVtQ,QAAS,CAAEuL,OAAQvL,EAAQuL,QAjB/B,SAmBKmM,GAAWjN,KAAI,gBAAG3H,EAAH,EAAGA,MAAOR,EAAV,EAAUA,MAAV,OACZ,cAAC2O,GAAA,EAAD,CAAsBnO,MAAOA,EAA7B,SAAqCR,GAAtBA,QAGvB,cAAC4O,GAAA,EAAD,CAAgB9M,MAAO+M,QAAQZ,EAAO9N,UAAtC,SAAkD8N,EAAO9N,iBAGjE,eAACiF,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACxI,UAAWa,EAAQ+L,cAAerL,QAAS,EAAhE,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKnJ,IAEL,cAAC8O,GAAA,EAAD,CACIhN,GAAG,eACHyD,KAAK,eACL9D,MAAO+M,QAAQZ,EAAO5N,cACtB+O,WAAYnB,EAAO5N,aACnB6J,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAA2B,OAApBuN,EAAO5N,SAAqB4N,EAAO1N,aAAe,EAAI0N,EAAO1N,aACpEwI,SAAUmF,OAIlB,eAAC5I,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQ8L,WAA/B,SACKlJ,IAEL,cAAC6O,GAAA,EAAD,CACIhN,GAAG,WACHyD,KAAK,WACL9D,MAAO+M,QAAQZ,EAAO3N,UACtB8O,WAAYnB,EAAO3N,SACnB4J,WAAa,CACTxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,GAEtB5J,MAAOuN,EAAOzN,SAAWyN,EAAO7N,KAAO6N,EAAO1N,aAC9CwI,SAAUmF,UAItB,cAAC5I,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC,EAAD,CAAc3G,MAAM,SAASD,QAAQ,2BC5L1DpD,GAbGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFoR,UAAW,QACX7Q,eAAgB,SAChBqZ,aAAc,SACd1Z,UAAW,MACXuC,QAAS1C,EAAM2C,QAAQ,IAE3BgB,MAAO,CACHpB,cAAe,iBCRVuX,GAAW,uCAAG,WAAMjU,GAAN,SAAAC,EAAA,sEACVC,IAAMC,KAAK,mBAAoBH,GACnCI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDAJN,mFAAH,sDAQXyT,GAAiB,uCAAG,WAAOrT,GAAP,SAAAZ,EAAA,sEAChBC,IAAMS,IAAN,0BAA6BE,IACjCT,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDAJA,mFAAH,sDAajB0T,GAAa,uCAAG,WAAOnU,EAAgBa,GAAvB,SAAAZ,EAAA,sEACZC,IAAM8P,MAAN,0BAA+BnP,GAAMb,GACzCI,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDAJJ,mFAAH,wDCflB6N,GAAyB3P,EAAhB0P,GAAgB1P,EA8ClByV,OAxCf,YAAyD,IAAlCjK,EAAiC,EAAjCA,SACb/N,EAAUnC,KACRmJ,EAAaI,IAAbJ,SACAjC,EAA0BsB,IAA1BtB,sBACFqN,EAAoB,QAAbpL,EAAqBkL,GAAUD,GAe5C,OACI,cAACvK,GAAA,EAAD,CAAMC,WAAS,EAAC2K,UAAWC,KAAOpT,UAAWa,EAAQhC,KAAMM,WAAW,SAAtE,SACI,cAACoJ,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIb,GAAI,GAAvC,SACI,cAAC3S,EAAA,EAAD,CACId,QAAQ,OACRC,cAAc,SACd+Q,UAAU,QACVnR,MAAM,OAJV,SAMI,eAACiB,EAAA,EAAD,WACI,cAAC+I,GAAA,EAAD,CAAYE,QAAQ,KAAKzJ,MAAM,UAAUS,UAAWa,EAAQ0B,MAA5D,SACM0Q,EAAK1Q,QAEX,cAAC,GAAD,CAAgBC,KAAMyQ,EAAKzQ,KAAMgO,aAzBhC,SAAC/L,GAClBiU,GAAYjU,GAAQI,MAAK,SAACE,GAClBA,EAAKE,MACLW,EAAsBb,EAAKE,MAAMC,SAC1BH,EAAKuF,QACZ1E,EAAsB,wCAEtBA,EAAsB,wDAkB+CgJ,SAAUA,cCchFkK,OA7Cf,YAAyD,IAAjClK,EAAgC,EAAhCA,SACpB,EAAwB7I,mBAAc,IAAtC,mBAAOlG,EAAP,KAAamV,EAAb,KACQpP,EAA0BsB,IAA1BtB,sBAGF8E,EAAoB,SAACN,GACvB,IAAM2O,EAAY3O,EAAWzK,IAAI0K,IAEjCuO,GADe,CAAEhY,OAAQ,WAAYgO,YACfmK,GAAWlU,MAAK,SAACE,GAC/BA,EAAKE,MACLW,EAAsBb,EAAKE,MAAMC,SAC1BH,EAAKuF,SACZ1E,EAAsB,0CACtBoP,EAAQnV,EAAK0K,QAAO,SAAC5K,GAAD,OAAcA,EAAI2F,KAAO8E,EAAW9E,QAGxDM,EAAsB,wDAI5B9F,EAAuB,QAjBRmI,IAAbJ,SzC0a+B,SAAC6C,GA8C1C,MA7CgB,CACd,CACEC,MAAO,WACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,kBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,SACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,SACND,QAAQ,SACRE,QAAS,kBAAM0I,EAAkBN,SyCjcJ4O,CAA4BtO,GzC0ctB,SAACA,GA8C9C,MA7CgB,CACd,CACEC,MAAO,WACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,kBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,eACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,sBACZ9L,MAAO,KAET,CACE6L,MAAO,QACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,SACND,QAAQ,QACRE,QAAS,kBAAM0I,EAAkBN,SyClf6C6O,CAAgCvO,GAoBtH,OAnBAQ,qBAAU,WACNyN,GAAkB/J,GAAU/J,MAAK,SAACE,GAC1BA,EAAKE,MACLkG,QAAQC,IAAIrG,EAAKE,MAAMC,SAChBH,EAAKuF,SACZvF,EAAKuF,QAAQ4O,QAAQ5N,KAAI,SAAC5C,EAAM8C,GAAS,IAAD,IACpC9C,EAAKpD,GAAKkG,EAAM,EAChB9C,EAAK9H,OAAS,UACd8H,EAAK9F,SAAL,UAAgB8F,EAAKkH,cAArB,aAAgB,EAAahN,SAC7B8F,EAAKzE,MAAL,UAAayE,EAAKkH,cAAlB,aAAa,EAAa3L,MAC1B,IAAMwH,EAAO/C,EAAKmH,UAAY,IAAI9F,KAAKrB,EAAKmH,WAAY,IAAI9F,KAC5DrB,EAAKmH,UAAYnE,YAAOD,EAAM,uBAElCuJ,EAAQjQ,EAAKuF,QAAQ4O,UAErB/N,QAAQC,IAAI,wBAGjB,IAEH,cAACxL,EAAD,CAAWC,KAAMA,EAAMC,QAASA,KCmCzBqZ,OApEf,YAA0D,IAAvCvK,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,KAEnBC,EAA8B,QADf7G,IAAbJ,S1CylBM,CACd,CACE8C,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,YACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,KACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,wBACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,yBACZ9L,MAAO,MAOK,CACd,CACE6L,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,mBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,eACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,wBACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,eACPC,WAAY,sBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,UACZ9L,MAAO,M0C7tBT,EAAsCiH,mBAAc,IAApD,mBAAOgJ,EAAP,KAAoBC,EAApB,KACA,EAAgDjJ,oBAAkB,GAAlE,mBAAOkJ,EAAP,KAAyBC,EAAzB,KACA,EAAwBnJ,mBAAS,IAAIgE,MAArC,mBAAOtH,EAAP,KAAaqK,EAAb,KACMrB,EAAO,IAAI1B,KACjB,EAAoBhE,mBAAS,IAAIgE,KAAK0B,EAAK0D,SAAS1D,EAAK2D,WAAa,MAAtE,mBAAO1M,EAAP,KAAWqK,EAAX,KAGMsC,EAAwBC,iBAAO,GAC/BC,EAAeD,iBAAO,GACtBE,EAAaF,iBAAgB,CAAC,CAAChK,GAAI,SAAU+J,sBAAuB,EAAGE,aAAc,EAAGV,KAAMA,EAAMjO,OAAQ,WA8ClH,OAxCAsK,qBAAU,WAiCF,OAhCJiL,GAAgCvH,EAAUnM,EAAMC,GAAImC,MAAK,SAACE,GAClD,IAAIyG,EAAM,EACNzG,EAAKE,MACLkG,QAAQC,IAAIrG,EAAKE,OACVF,EAAKuF,SACZvF,EAAKuF,QAAQe,aAAaC,KAAI,SAACC,GAC3BA,EAAYjG,GAAKkG,EAAM,EACvBD,EAAY3K,OAAS,cACrB,IAAM6K,EAAO,IAAI1B,KAAKwB,EAAYtI,cAClCsI,EAAYE,KAAOC,YAAOD,EAAM,oBAChC4D,EAAsBI,SAAalE,EAAYmE,KAAOnE,EAAYmE,KAAO,EACzElE,OAEJzG,EAAKuF,QAAQqF,SAASrE,KAAI,SAAC5C,GAAU,IAAD,EAChCA,EAAKpD,GAAKkG,EAAM,EAChB9C,EAAK9F,SAAL,UAAgB8F,EAAKkH,cAArB,aAAgB,EAAahN,SAC7B8F,EAAK9H,OAAS,UACd,IAAM6K,EAAO,IAAI1B,KAAKrB,EAAKmH,UAAYnH,EAAKmH,UAAY,IAAI9F,MAC5DrB,EAAK+C,KAAOC,YAAOD,EAAM,oBACzB8D,EAAaE,SAAW/G,EAAKjF,SAC7B+H,OAEJgE,EAAWC,QAAQ,GAAGJ,sBAAwBA,EAAsBI,QACpED,EAAWC,QAAQ,GAAGF,aAAeA,EAAaE,QAClDD,EAAWC,QAAQ,GAAGZ,KAAOQ,EAAsBI,QAAUF,EAAaE,QAC1ET,EAAe,uBAAIjK,EAAKuF,QAAQe,cAAjB,aAAkCtG,EAAKuF,QAAQqF,UAA/C,aAA4DH,EAAWC,UACrFK,MAAK,SAASpL,EAAGqL,GAAI,OAAOC,WAAWtL,EAAE+G,MAAQuE,WAAWD,EAAEtE,WAG/DN,QAAQC,IAAI,8CAGb,WACHiE,EAAsBI,QAAU,EAChCF,EAAaE,QAAU,EACvBT,EAAe,OAExB,CAACC,IAGA,mCACI,eAAClP,EAAA,EAAD,CAAKd,QAAQ,OAAOC,cAAc,SAAlC,UACI,cAAC,GAAD,CAAQuD,KAAMA,EAAMC,GAAIA,EAAIoK,QAASA,EAASC,MAAOA,EAAOC,gBA/ChD,WACpBkC,GAAqBD,MA+Cb,cAACrP,EAAD,CAAWC,KAAMkP,EAAajP,QAASgP,U,oBCkDxCsK,OA5Hf,WACI,IAAQvR,EAAaI,IAAbJ,SACFwB,EAAUC,cAEhB,EAA4CvD,oBAAkB,GAA9D,mBAAOsT,EAAP,KAAuBC,EAAvB,KACA,EAA8CvT,oBAAkB,GAAhE,mBAAOwT,EAAP,KAAwBC,EAAxB,KACA,EAA8BzT,oBAAkB,GAAhD,mBAAO0T,EAAP,KAAgBC,EAAhB,KAEA,EAAwB3T,mBAAc,IAAtC,mBAAOlG,EAAP,KAAamV,EAAb,KACA,EAAgCjP,mBAAiB,IAAjD,mBAAO6I,EAAP,KAAiB+K,EAAjB,KACA,EAAwB5T,mBAAiB,GAAzC,mBAAO8I,EAAP,KAAa+K,EAAb,KAEMC,EAAwB,SAACzP,GAC3BuP,EAAYvP,EAAWzK,IAAI0K,KAC3BiP,GAAkB,IAOhBQ,EAAyB,SAAC1P,GAC5BuP,EAAYvP,EAAWzK,IAAI0K,KAC3BmP,GAAmB,IAGjBO,EAAyB,WAC3BP,GAAmB,IAGjBQ,EAAqB,SAAC5P,GACxBwP,EAAQxP,EAAWzK,IAAIkP,MACvB8K,EAAYvP,EAAWzK,IAAI0K,KAC3BqP,GAAW,IAGTO,EAAqB,WACvBP,GAAW,IAGT5Z,EAAuB,QAAb+H,E3CuPmB,SAACgS,EAAuBC,EAAwBE,GAyDrF,MAxDgB,CACd,CACErP,MAAO,eACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,cACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,aACND,QAAQ,cACRE,QAAS,kBAAM6X,EAAsBzP,QAK7C,CACEO,MAAO,eACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,cACND,QAAQ,eACRE,QAAS,kBAAM8X,EAAuB1P,QAK9C,CACEO,MAAO,UACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,UACND,QAAQ,UACRE,QAAS,kBAAMgY,EAAmB5P,S2CzSR8P,CAAwBL,EAAuBC,EAAwBE,G3CkTlE,SAACH,EAAuBC,EAAwBE,GAyDzF,MAxDgB,CACd,CACErP,MAAO,WACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,oBACZ9L,MAAO,KAET,CACE6L,MAAO,gBACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,aACND,QAAQ,gBACRE,QAAS,kBAAM6X,EAAsBzP,QAK7C,CACEO,MAAO,cACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,cACND,QAAQ,cACRE,QAAS,kBAAM8X,EAAuB1P,QAK9C,CACEO,MAAO,WACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,UACND,QAAQ,WACRE,QAAS,kBAAMgY,EAAmB5P,S2CpWR+P,CAA4BN,EAAuBC,EAAwBE,GAqB7G,OAnBA9O,qBAAU,WAcN,OAbAoJ,KAAazP,MAAK,SAACE,GACXA,EAAKE,MACLkG,QAAQC,IAAI,cACLrG,EAAKuF,SACZvF,EAAKuF,QAAQiL,QAAQjK,KAAI,SAACsE,EAAQpE,GAC9BoE,EAAOtK,GAAKkG,EAAM,EAClBoE,EAAOhP,OAAS,YAEpBoU,EAAQjQ,EAAKuF,QAAQiL,UAErBpK,QAAQC,IAAI,qBAGb,WACH4J,EAAQ,OAEb,CAAC3L,EAASkQ,EAAiBF,IAG1B,qCACI,cAACzZ,EAAD,CAAWC,KAAMA,EAAMC,QAASA,IAChC,cAAC,EAAD,CACImG,KAAMoT,EACNvS,QAnDkB,WAC1BwS,GAAkB,IAmDVvX,MAAO,aAHX,SAKI,cAAC,GAAD,CAAY6M,SAAUA,MAE1B,eAAC,EAAD,CACI3I,KAAMsT,EACNzS,QAASiT,EACThY,MAAO,aACPyF,cAAc,EAJlB,UAMI,cAAC4S,GAAA,EAAD,CAAQpb,SAAS,SAAjB,SACI,eAACkB,GAAA,EAAD,WACI,cAAC8G,EAAA,EAAD,CACAqT,KAAK,QACL9a,MAAM,UACNyC,QAAS+X,EACT,aAAW,QAJX,SAMI,cAAC,IAAD,MAEJ,cAACjR,GAAA,EAAD,CAAYE,QAAQ,KAAKmK,UAAU,MAAnC,+BAKR,cAAC,GAAD,CAAcvE,SAAUA,OAE5B,eAAC,EAAD,CACI3I,KAAMwT,EACN3S,QAASmT,EACTlY,MAAO,aACPyF,cAAc,EAJlB,UAMI,cAAC4S,GAAA,EAAD,CAAQpb,SAAS,SAAjB,SACI,eAACkB,GAAA,EAAD,WACI,cAAC8G,EAAA,EAAD,CACAqT,KAAK,QACL9a,MAAM,UACNyC,QAASiY,EACT,aAAW,QAJX,SAMI,cAAC,IAAD,MAEJ,cAACnR,GAAA,EAAD,CAAYE,QAAQ,KAAKmK,UAAU,MAAnC,oDAKR,cAAC,GAAD,CAASvE,SAAUA,EAAUC,KAAMA,W,kBCxGpCnQ,GAxBGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFoR,UAAW,QACX7Q,eAAgB,SAChBqZ,aAAc,SACd1Z,UAAW,OAEfub,QAAS,CACL7G,WAAY7U,EAAM2C,QAAQ,IAC1BgZ,cAAe,GACfhb,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5B5I,WAAY,IACZgU,UAAW,SACX1U,MAAO,OAEX0b,YAAY,cACR9a,OAAQ,QACPd,EAAM6b,YAAYC,KAAK,MAAQ,CAE5B5b,MAAO,a,UC4BJJ,GA/CGC,aAAW,SAACC,GAAD,MAAY,CACrC4D,KAAM,CACF1D,MAAO,OACPC,UAAWH,EAAM2C,QAAQ,GACzB,yBAA0B,CACtBxC,UAAWH,EAAM2C,QAAQ,KAGjC4B,MAAO,CACHpE,UAAWH,EAAM2C,QAAQ,GACzBJ,cAAe,YACf5B,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5B3I,SAAU,GACVD,WAAY,KAGhBiF,OAAQ,CACJrD,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACVC,OAAQ,OACR4B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,EACXuN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTC,UAAU,GAAD,OAAKC,aAAM9N,EAAMmC,QAAQS,QAAQC,KAAM,KAAvC,iBACTqK,YAAalN,EAAMmC,QAAQS,QAAQC,OAGzC0O,OAAQ,CACJhP,cAAe,YACfC,aAAcxC,EAAMyC,MAAMD,aAC1B9B,gBAAiBV,EAAMmC,QAAQS,QAAQC,KACvCC,OAAQ9C,EAAM2C,QAAQ,EAAG,EAAG,GAC5BD,QAAS1C,EAAM2C,QAAQ,GACvBzC,MAAO,IACPY,OAAQ,GACRD,SAAU,GACVD,WAAY,KAEhBsB,iBAAkB,CACdvB,MAAOX,EAAMmC,QAAQC,OAAOC,WCiDrB0Z,OAtEf,YAA2D,IAArCnK,EAAoC,EAApCA,aACZ3P,EAAUnC,KAChB,OACI,mCACI,cAAC,KAAD,CACIgS,cAAe,CACXkK,SAAU,GACVC,SAAU,IAEdlK,iBAAkBC,OAAavP,MAAM,CACjCuZ,SAAUhK,OAAaC,SAAS,0BAA0BC,IAAI,EAAG,yBACjE+J,SAAUjK,OAAaC,SAAS,yBAAyBC,IAAI,EAAG,4BAEpEG,SAAUT,EATd,SAWK,gBAAGA,EAAH,EAAGA,aAAcW,EAAjB,EAAiBA,aAAcD,EAA/B,EAA+BA,OAAiBE,GAAhD,EAAuCC,QAAvC,EAAgDD,QAAQG,EAAxD,EAAwDA,aAAxD,OACD,sBAAMN,SAAUT,EAAcxQ,UAAWa,EAAQ2B,KAAMgP,YAAU,EAAjE,SACI,eAACjJ,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASrJ,eAAe,SAASD,WAAW,SAAtE,UACI,eAACoJ,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,sBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,WACHyD,KAAK,WACL9D,MAAO+M,QAAQZ,EAAOwJ,UACtBrI,WAAYnB,EAAOwJ,SACnBjX,MAAOuN,EAAO0J,SACd5O,SAAUmF,EACV2J,gBAAiB,CACbC,QAAQ,GAEZ1N,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,KAI1B,cAACJ,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,sBAGA,cAACmP,GAAA,EAAD,CACIhN,GAAG,WACHyD,KAAK,WACL1G,KAAK,WACL4C,MAAO+M,QAAQZ,EAAOyJ,UACtBtI,WAAYnB,EAAOyJ,SACnBlX,MAAOuN,EAAO2J,SACd7O,SAAUmF,EACV2J,gBAAiB,CACbC,QAAQ,GAEZ1N,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,cAAChF,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACtG,EAAA,EAAD,CAAQ6E,KAAK,QAAQ5E,KAAK,SAAS2G,QAAQ,YAAYzJ,MAAM,UAAUS,UAAWa,EAAQsP,OAA1F,SACCoB,EAAe,cAACyJ,GAAA,EAAD,CAAkBhb,UAAWa,EAAQC,mBAAuB,uBCjFlGma,GAAK,uCAAG,WAAOL,EAAkBC,GAAzB,eAAAnW,EAAA,6DACJwW,EAAY,CAAEN,WAAUC,YADpB,SAEGlW,IAAMC,KAAK,cAAesW,GAClCrW,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,iBAAO,CACVC,MAAO,CAACC,QAAS,qDALf,mFAAH,wDAcEiW,GAAiB,uCAAG,WAAOC,GAAP,SAAA1W,EAAA,sEAChBC,IAAM8P,MAAM,wBAAyB2G,GAC7CvW,MAAK,SAACC,GAAD,OAASA,EAAIC,QAClBC,OAAM,SAACC,GAAD,OAAWA,EAAMQ,SAASV,QAHR,mFAAH,sDAMfkW,MCgCCI,OA9ChB,WACI,IAAMxa,EAAUnC,KACRwP,EAAuBQ,KAAvBR,mBACAtI,EAA0BsB,IAA1BtB,sBAoBR,OACI,mCACI,eAAC2C,GAAA,EAAD,CAAMC,WAAS,EAAC2K,UAAU,OAAOnT,UAAWa,EAAQhC,KAAM0C,QAAS,EAAnE,UACI,cAACgH,GAAA,EAAD,CAAMG,MAAI,EAAC2K,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAApC,SACI,qBAAK9J,IAAI,gEAAgEyO,IAAI,UAAUrX,UAAWa,EAAQ2Z,gBAE9G,cAACjS,GAAA,EAAD,CAAMG,MAAI,EAACyK,UAAWC,KAAOC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGb,GAAI,EAAtD,SACI,eAAC3S,EAAA,EAAD,CACId,QAAQ,OACRC,cAAc,SACd+Q,UAAU,QAHd,UAKI,cAAClQ,EAAA,EAAD,UACI,cAAC+I,GAAA,EAAD,CAAYE,QAAQ,KAAKhJ,UAAWa,EAAQyZ,QAA5C,uBAEJ,cAAC,GAAD,CAAW9J,aAhCV,SAAC,EAAD,GAGX,IAFJoK,EAEG,EAFHA,SAAUC,EAEP,EAFOA,SACVS,EACG,EADHA,cAEEL,GAAML,EAAUC,GAAUhW,MAAK,SAACE,GACxBA,EAAKE,OACLqW,GAAc,GACd1V,EAAsBb,EAAKE,MAAMC,UAC1BH,EAAKuF,QACZ4D,EAAmBnJ,EAAKuF,UAExBgR,GAAc,GACd1V,EAAsB,sECR3BlH,GAjBGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFI,QAAS,OACTG,eAAgB,SAChBN,MAAO,QAEXmM,KAAM,CACF9J,cAAe,YACf3B,WAAY,IACZC,SAAU,IAEd8b,SAAU,CACNvc,SAAU,WACVwc,MAAO,S,oBCaA9c,GA1BGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,KAEX2c,KAAM,CACFnc,gBAAiB,UACjBC,MAAOX,EAAMmC,QAAQC,OAAOC,MAC5Bya,WAAY,MACZ3c,UAAW,MACX6X,QAAS,GACT,UAAW,CACPA,QAAS,IAGjBxG,SAAU,CACNwG,QAAS,GACT,UAAW,CACPA,QAAS,IAIjB+E,SAAU,CACNnc,WAAY,YCuCLoc,OAzDf,WACI,MAAqC3T,IAA7BH,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,SACxB,EAA0B9B,mBAAS,OAAnC,mBAAOpC,EAAP,KACA,GADA,KACgCoC,mBAAS,OAAzC,mBAAO8V,EAAP,KAAiBC,EAAjB,KACA,EAAwB/V,oBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA2CxH,KAAnC+c,EAAR,EAAQA,KAAMrL,EAAd,EAAcA,SAAUvR,EAAxB,EAAwBA,KAAM8c,EAA9B,EAA8BA,SAOxBvV,EAAc,WAChB0V,EAAY,MACZ5V,GAAQ,IAIN6V,EAAsB,SAACC,GACzBlU,EAAekU,GACf5V,KAGJ,OACI,eAACrG,EAAA,EAAD,CAAKC,UAAWnB,EAAhB,UACI,cAACod,GAAA,EAAD,CACItY,MAAOA,EACPuY,kBAAmB,CACnBna,MAAO,CACH9C,QAAS,SAJjB,SAQQ,cAACiN,EAAA,EAAD,CACI,YAAW2P,EAAW,mBAAgB5N,EACtC,kBAAe4N,QAAkB5N,EACjCjM,QAAS,SAACsE,GAAD,OA5BzBwV,EA4BqDxV,EA5BvC6V,oBACdjW,GAAQ,IA4BQlG,UAAW2b,EACXxY,MAAoB,QAAb0E,EAAqB,WAAa,UAGrD,eAACuU,GAAA,EAAD,CACQ9W,GAAG,cACHuW,SAAUA,EACV5V,KAAMA,EACNa,QAASV,EACTvF,QAAS,CAACwb,MAAOZ,GACjBa,cAAe,CAACC,aAAcnW,GAC9BoW,UAAW,EAPnB,UASQ,cAAC1K,GAAA,EAAD,CAAUjR,QAAS,CAAChC,KAAMuR,GAAYpO,QAAS,WAAQ+Z,EAAoB,QAA3E,wBACA,cAACjK,GAAA,EAAD,CAAUjR,QAAS,CAAChC,KAAMuR,GAAYpO,QAAS,WAAQ+Z,EAAoB,OAA3E,+B,qBC7BLrd,GA1BGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,MAAO,KAEX2c,KAAM,CACFnc,gBAAiB,UACjBC,MAAOX,EAAMmC,QAAQC,OAAOC,MAC5Bya,WAAY,MACZ3c,UAAW,MACX6X,QAAS,GACT,UAAW,CACPA,QAAS,IAGjBxG,SAAU,CACNwG,QAAS,GACT,UAAW,CACPA,QAAS,IAIjB+E,SAAU,CACNnc,WAAY,YCaLd,GAnCGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFyC,QAAS1C,EAAM2C,QAAQ,IACvBjC,gBAAiB,WAErBiD,MAAO,CACH9C,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACfQ,aAAc,OAElB8C,OAAQ,CACJrD,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACVC,OAAQ,OACR4B,QAAS1C,EAAM2C,QAAQ,GACvBI,aAAc,MACd2K,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTC,UAAU,GAAD,OAAKC,aAAM9N,EAAMmC,QAAQS,QAAQC,KAAM,KAAvC,iBACTqK,YAAalN,EAAMmC,QAAQS,QAAQC,OAGzC0B,MAAO,CACH1D,SAAU,GACVD,WAAY,IACZD,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5BjH,cAAe,iBC+CRsb,GAnEQ,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,kBACtB,EAAuChe,KAA/BG,EAAR,EAAQA,KAAM0D,EAAd,EAAcA,MAAOkC,EAArB,EAAqBA,OACrB,GADA,EAA6BtB,MACS4C,mBAAS,KAA/C,mBAAO4W,EAAP,KAAoBC,EAApB,KACA,EAAsC7W,mBAAS,IAA/C,mBAAO8W,EAAP,KAAoBC,EAApB,KACQlX,EAA0BsB,IAA1BtB,sBACAiC,EAAaI,IAAbJ,SAEFkV,EAAiB,SAACC,EAAsB1W,GAC1C,OAAO0W,GACH,IAAK,cACDJ,EAAetW,EAAM2W,OAAOtZ,OAC5B,MACJ,IAAK,cACDmZ,EAAexW,EAAM2W,OAAOtZ,SAmBxC,OACI,eAAC5D,EAAA,EAAD,CAAKC,UAAWnB,EAAhB,UACI,cAACiK,GAAA,EAAD,CAAY9I,UAAWuC,EAAvB,SACmB,QAAbsF,EAAqB,kBAAoB,mCAE/C,cAACsF,GAAA,EAAD,UACmB,QAAbtF,EAAqB,eAAiB,oBAE5C,cAACyK,GAAA,EAAD,CACIjQ,KAAM,WACNsB,MAAOgZ,EACP3Q,SAAU,SAAC1F,GAAWyW,EAAe,cAAezW,IACpD+G,WAAY,CACAxM,QAAS,CAAEyM,MAAO7I,GAClB8I,kBAAkB,KAGlC,cAACJ,GAAA,EAAD,UACmB,QAAbtF,EAAqB,eAAiB,oBAE5C,cAACyK,GAAA,EAAD,CACIjQ,KAAK,WACLsB,MAAOkZ,EACP7Q,SAAU,SAAC1F,GAAWyW,EAAe,cAAezW,IACpD+G,WAAY,CACAxM,QAAS,CAAEyM,MAAO7I,GAClB8I,kBAAkB,KAGlC,cAACxN,EAAA,EAAD,IACI,cAAC,EAAD,CAAcgC,MAAM,SAASD,QAAQ,SAASE,QA5CrC,WAEjBmZ,GADuB,CAAEwB,cAAaE,gBACJhY,MAAK,SAACE,GAChCA,EAAKE,MACLW,EAAsBb,EAAKE,OACpBF,EAAKuF,SACZ1E,EAAsB,0CACtB8W,KAEA9W,EAAsB,8DCsBvBsX,GAlDC,WACZ,MAAgCnX,mBAAS,MAAzC,mBAAO8V,EAAP,KAAiBC,EAAjB,KACA,EAAwB/V,oBAAS,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAoCH,oBAAS,GAA7C,mBAAOkP,EAAP,KAAmBC,EAAnB,KACA,EAA2CxW,KAAnC+c,EAAR,EAAQA,KAAMrL,EAAd,EAAcA,SACNtC,GADR,EAAwBjP,KAAxB,EAA8B8c,SACXjN,KAAXZ,QACAjG,EAAaI,IAAbJ,SAOFzB,EAAc,WAChB0V,EAAY,MACZ5V,GAAQ,IAONwW,EAAoB,WACtBxH,GAAeD,IAGnB,OACI,qCACI,cAACjO,EAAA,EAAD,CAAY,aAAW,cAAchF,QApBzB,SAACmb,GACjBrB,EAAYqB,EAAEhB,eACdjW,GAAQ,IAkBJ,SACI,cAAC,KAAD,MAEJ,eAACkW,GAAA,EAAD,CACI9W,GAAG,cACHuW,SAAUA,EACV5V,KAAMA,EACNa,QAASV,EACTvF,QAAS,CAACwb,MAAOZ,GACjBa,cAAe,CAACC,aAAcnW,GAC9BoW,UAAW,EAPf,UASI,cAAC1K,GAAA,EAAD,CAAUjR,QAAS,CAAChC,KAAMuR,GAAWpO,QAAS,WAAOkT,GAAc,IAAnE,SAA2F,QAAbrN,EAAqB,kBAAoB,mCACvH,cAACiK,GAAA,EAAD,CAAUjR,QAAS,CAAChC,KAAMuR,GAAYpO,QAvB7B,WACjB8L,KAsBQ,SAA4E,QAAbjG,EAAqB,SAAW,qBAEnG,cAAC,EAAD,CAAc5B,KAAMgP,EAAYnO,QAAS4V,EAAzC,SACI,cAAC,GAAD,CAAgBA,kBAAmBA,UC/C3CU,GAA8Bla,EAAhBU,GAAgBV,EA8CvBma,OA3Cf,WACI,IAAMxc,EAAUnC,KACRmJ,EAAaI,IAAbJ,SAiBR,OACI,eAACU,GAAA,EAAD,CAAMC,WAAS,EAACxI,UAAWa,EAAQhC,KAAnC,UACI,cAAC0J,GAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACuT,GAAA,EAAD,CACI,aAAW,6BACXC,kBAAmB,CACfna,MAAO,CACH9C,QAAS,SAJrB,UAhBS,OAAb4I,EAA0BjE,GAClBwZ,IACA9R,KAAI,WAAgBE,GAAhB,IAAGrI,EAAH,EAAGA,MAAOT,EAAV,EAAUA,GAAV,OACZ,cAACwJ,EAAA,EAAD,CAEI/I,MAAOA,EACPgQ,UAAWmK,IACX5a,GAAIA,EACJ1C,UAAWa,EAAQoK,MAJdO,UAuBT,cAACjD,GAAA,EAAD,CAAMG,MAAI,EAAC1I,UAAWa,EAAQ0a,SAA9B,SACI,eAAChT,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,aClBL9J,GA3BGC,aAAW,SAACC,GAAD,MAAY,CACrC2c,SAAU,CACNvc,SAAU,WACVwc,MAAO,KAEX3c,KAAM,CACFI,QAAS,OACTG,eAAgB,SAChBN,MAAO,QAEXmM,KAAM,CACF9J,cAAe,YACf3B,WAAY,IACZC,SAAU,IAEdgc,KAAM,CACFnc,gBAAiB,UACjBC,MAAOX,EAAMmC,QAAQC,OAAOC,MAC5BlC,UAAW,MACX6X,QAAS,GACT,UAAW,CACPA,QAAS,QCqHN2G,OApIf,WACI,IAAM1c,EAAUnC,KAChB,EAAgCqH,mBAA6B,MAA7D,mBAAO8V,EAAP,KAAiBC,EAAjB,KACA,EAA4C/V,mBAA6B,MAAzE,mBAAOyX,EAAP,KAAuBC,EAAvB,KACA,EAAwB1X,oBAAkB,GAA1C,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAoCH,oBAAkB,GAAtD,mBAAO2X,EAAP,KAAmBC,EAAnB,KAEQ9V,EAAaI,IAAbJ,SACFwB,EAAUC,cAcVsU,EAAc,SAACtX,EAAYuX,GAC7BxU,EAAQkF,KAAKsP,GACb3X,GAAQ,GACRyX,GAAc,IAGZG,EAAkB,SAACxX,EAAYyX,EAAqCC,GACtED,EAAczX,EAAM6V,eACpB6B,GAAY,IAGVC,EAAuB,CACzBb,YAAc,CACV,CAAEja,MAAO,OAAQya,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,kBACjE,CAAEnD,MAAO,WAAYya,YAAa,SAACtX,GAAD,OAAgBwX,EAAgBxX,EAAOmX,EAAmBE,KAC5F,CAAExa,MAAO,eAAgBya,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,yBACzE,CAAEnD,MAAO,WAAYya,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,qBACrE,CAAEnD,MAAO,UAAYya,YAAa,SAACtX,GAAD,OAAgBwX,EAAgBxX,EAAOwV,EAAa5V,MAE1FtC,YAAc,CACV,CAAET,MAAO,OAAQya,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,kBACjE,CAAEnD,MAAO,sBAAeya,YAAa,SAACtX,GAAD,OAAgBwX,EAAgBxX,EAAOmX,EAAmBE,KAC/F,CAAExa,MAAO,iBAAkBya,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,yBAC3E,CAAEnD,MAAO,SAAUya,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,qBACnE,CAAEnD,MAAO,qBAAaya,YAAa,SAACtX,GAAD,OAAgBwX,EAAgBxX,EAAOwV,EAAa5V,OAIzFgY,EAAQ,CACV,CACIrC,SAAUA,EAAU5V,KAAMA,EAAMa,QAxCpB,WAChBgV,EAAY,MACZ5V,GAAQ,IAuCJiY,QAAS,CACL,CAAEhb,MAAoB,QAAb0E,EAAqB,cAAgB,qBAAa+V,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,aAC3G,CAAEnD,MAAoB,QAAb0E,EAAqB,aAAe,uBAAe+V,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,kBAGpH,CACIuV,SAAU2B,EAAgBvX,KAAMyX,EAAY5W,QA1C1B,WACtB2W,EAAkB,MAClBE,GAAc,IAyCVQ,QAAS,CACL,CAAEhb,MAAoB,QAAb0E,EAAqB,cAAgB,qBAAc+V,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,aAC5G,CAAEnD,MAAoB,QAAb0E,EAAqB,aAAe,uBAAgB+V,YAAa,SAACtX,GAAD,OAAgBsX,EAAYtX,EAAO,mBAKjH8W,EAA8Ba,EAA9Bb,YAAcxZ,EAAgBqa,EAAhBra,YAetB,OACI,eAAC2E,GAAA,EAAD,CAAMC,WAAS,EAACxI,UAAWa,EAAQhC,KAAnC,UACI,eAAC0J,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACuT,GAAA,EAAD,CACI,aAAW,6BACXC,kBAAmB,CACfna,MAAO,CACH9C,QAAS,SAJrB,UAfS,OAAb4I,EAA0BjE,EAClBwZ,GACA9R,KAAI,WAAyBE,GAAzB,IAAGrI,EAAH,EAAGA,MAAOya,EAAV,EAAUA,YAAV,OACZ,cAAC1R,EAAA,EAAD,CAEI/I,MAAOA,EACPnB,QAAS4b,EACT5d,UAAWa,EAAQoK,MAHdO,QAsBD0S,EAAM5S,KAAI,gBAAGuQ,EAAH,EAAGA,SAAU5V,EAAb,EAAaA,KAAMa,EAAnB,EAAmBA,QAASqX,EAA5B,EAA4BA,QAA5B,OACN,mCACI,cAAC/B,GAAA,EAAD,CACI9W,GAAG,YACHuW,SAAUA,EACV5V,KAAMA,EACNa,QAASA,EACTjG,QAAS,CAAEwb,MAAOxb,EAAQ4a,MAC1Ba,cAAe,CACf,kBAAmB,cACnBhO,KAAM,WARV,SAWK6P,EAAQ7S,KAAI,WAAuBE,GAAvB,IAAErI,EAAF,EAAEA,MAAOya,EAAT,EAASA,YAAT,OACb,cAAC9L,GAAA,EAAD,CAEI9P,QAAS4b,EAFb,SAIKza,GAHIqI,gBAW7B,cAACjD,GAAA,EAAD,CAAMG,MAAI,EAAC1I,UAAWa,EAAQ0a,SAA9B,SACI,eAAChT,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,aC3HL9J,GARGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFS,gBAAiB,UACjBC,MAAO,UACPT,MAAO,YC0BAsf,OAxBf,WACI,IAAQpQ,EAAiBU,KAAjBV,aACFnN,EAAUnC,KAEhB,OACI,cAACqB,EAAA,EAAD,UACI,cAACqa,GAAA,EAAD,CAAQpb,SAAS,SAASgB,UAAWa,EAAQhC,KAA7C,SACI,cAACqB,GAAA,EAAD,UACM8N,EACsB,YAAX,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcM,MACX,cAACvO,EAAA,EAAD,UACI,cAAC,GAAD,MAGJ,cAACA,EAAA,EAAD,UACI,cAAC,GAAD,MAPS,YCkCtBrB,GAhDGC,aAAW,SAACC,GAAD,MAAY,CACrC4D,KAAM,CACF1D,MAAO,OACPC,UAAWH,EAAM2C,QAAQ,GACzB,yBAA0B,CACtBxC,UAAWH,EAAM2C,QAAQ,KAGjCkD,OAAQ,CACJrD,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACVC,OAAQ,OACR4B,QAAS1C,EAAM2C,QAAQ,GACvBI,aAAc,MACd2K,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,eACtD,UAAW,CACTC,UAAU,GAAD,OAAKC,aAAM9N,EAAMmC,QAAQS,QAAQC,KAAM,KAAvC,iBACTqK,YAAalN,EAAMmC,QAAQS,QAAQC,OAGzC0B,MAAO,CACH1D,SAAU,GACVD,WAAY,IACZD,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5BjH,cAAe,aAEnBiL,OAAQ,CACJhL,aAAc,EACdpC,SAAU,WACVM,gBAAiBV,EAAMmC,QAAQC,OAAOC,MACtCoL,OAAQ,oBACR5M,SAAU,GACV6B,QAAS1C,EAAM2C,QAAQ,GACvBxC,UAAW,QACXD,MAAO,IACPwN,WAAY1N,EAAM2N,YAAYC,OAAO,CAAC,eAAgB,gBAE1DkH,WAAY,CACRjU,SAAU,GACVD,WAAY,IACZ2B,cAAe,YACfO,OAAQ,mBCtCV2c,GAAgB,CAClBtV,KAAM,OACNE,YAAa,MACbhF,MAAO,QACPiF,UAAW,cAGToV,GAAoB,CACtBvV,KAAM,OACNE,YAAa,MACbhF,MAAO,QACPiF,UAAW,cAqHAyK,OA7Gf,YAA4E,IAAlDnD,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,WAC9B5P,EAAUnC,KAEhB,EAA6D,OADxCuJ,IAAbJ,SAC4DyW,GAAoBD,GAAhFtV,EAAR,EAAQA,KAAME,EAAd,EAAcA,YAAahF,EAA3B,EAA2BA,MAAOiF,EAAlC,EAAkCA,UAElC,OACG,mCACC,cAAC,KAAD,CACIwH,cAAe,CACXzM,MAAOwM,EAAWxM,MAClB8E,KAAM0H,EAAW1H,KACjBE,YAAawH,EAAWxH,YACxBC,UAAWuH,EAAWvH,WAE1ByH,iBAAkBC,OAAavP,MAAM,CACjC4C,MAAO2M,OAAa3M,MAAM,yBAAyB4M,SAAS,8BAC5D9H,KAAM6H,OAAaC,SAAS,+BAC5B5H,YAAa2H,OAAaC,SAAS,+BACnC3H,UAAW0H,OAAaC,SAAS,iCAErCI,SAAU,SAACC,GAAYV,EAAaU,IAbxC,SAgBK,gBAAGV,EAAH,EAAGA,aAAcW,EAAjB,EAAiBA,aAAcD,EAA/B,EAA+BA,OAAiBE,GAAhD,EAAuCC,QAAvC,EAAgDD,QAAhD,EAAwDG,aAAxD,OACG,cAAC,KAAD,CAAMN,SAAUT,EAAcxQ,UAAWa,EAAQ2B,KAAMgP,YAAU,EAAjE,SACI,eAACjJ,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASlH,QAAS,EAA5C,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC0L,QAAQ,eAAe3S,QAAS,EAArD,UACI,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACK4F,IAEL,cAACuJ,GAAA,EAAD,CACIhN,GAAG,OACHyD,KAAK,OACLpF,MAAOuN,EAAOnI,KACdiD,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOrI,MACtBwJ,WAAYnB,EAAOrI,KACnBsE,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACK8F,IAEL,cAACqJ,GAAA,EAAD,CACIhN,GAAG,cACHyD,KAAK,cACLpF,MAAOuN,EAAOjI,YACd+C,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOnI,aACtBsJ,WAAYP,QAAQZ,EAAOnI,aAAe,8BAA+B,KACzEoE,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,WAKlC,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAAC0L,QAAQ,eAAe3S,QAAS,EAArD,UACA,eAACgH,GAAA,EAAD,CAAMG,MAAI,EAAV,UACQ,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACKc,IAEL,cAACqO,GAAA,EAAD,CACIhN,GAAG,QACHyD,KAAK,QACLpF,MAAOuN,EAAOjN,MACd+H,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOnN,OACtBsO,WAAYnB,EAAOnN,MACnBoJ,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,QAI9B,eAAChF,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACyE,GAAA,EAAD,CAAYnN,UAAWa,EAAQsC,MAA/B,SACK+F,IAEL,cAACoJ,GAAA,EAAD,CACIhN,GAAG,YACHyD,KAAK,YACLpF,MAAOuN,EAAOhI,UACd8C,SAAUmF,EACVlM,MAAO+M,QAAQZ,EAAOlI,WACtBqJ,WAAYnB,EAAOlI,UACnBmE,WAAY,CACRxM,QAAS,CAAEyM,MAAOzM,EAAQ4D,QAC1B8I,kBAAkB,WAKlC,cAAChF,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACpJ,eAAe,SAApC,SACI,cAAC,EAAD,CAAc0C,QAAQ,SAASC,MAAM,wBClHlDrD,GAVGC,aAAW,SAACC,GAAD,MAAY,CACrC2D,MAAO,CACH9C,SAAU,GACVD,WAAY,IACZD,MAAOX,EAAMmC,QAAQC,OAAOoH,MAC5B1G,OAAQ,MACRP,cAAe,iBCqCRod,GA9BM,SAAC,GAAoE,IAAlE9N,EAAiE,EAAjEA,WAAYrK,EAAqD,EAArDA,YAAavG,EAAwC,EAAxCA,KAAMmV,EAAkC,EAAlCA,QAC3CzS,EAAU7D,KAAV6D,MACAqD,EAA0BsB,IAA1BtB,sBAeR,OACI,mCACI,eAAC7F,EAAA,EAAD,WACI,cAAC+I,GAAA,EAAD,CAAY9I,UAAWuC,EAAvB,2BAGA,cAACic,GAAD,CAAYhO,aApBH,SAAC/L,GAClB,IAAMa,EAAKmL,EAAWpG,IACtBkM,GAAa9R,EAAQa,GAAIT,MAAK,SAACE,GACvBA,EAAKE,MACLW,EAAsBb,EAAKE,OACrBF,EAAKuF,SACX0K,EAAQnV,EAAKyL,KAAI,SAAA3L,GAAG,aAAIA,EAAI2F,KAAOmL,EAAWnL,GAAtB,6BAAgC3F,GAAhC,UAAwCoF,EAAKuF,eAA7C,aAAwC,EAAchC,QAAW3I,MACzFiG,EAAsB,yCACtBQ,KAEAR,EAAsB,wDAUkB6K,WAAYA,UC3BrD/R,GATGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFyC,QAAS1C,EAAM2C,QAAQ,IAE3BgB,MAAO,CACHjB,QAAS1C,EAAM2C,QAAQ,QC+ChBkd,GAxCM,SAAC,GAAgF,IAA9EhO,EAA6E,EAA7EA,WAAYiO,EAAiE,EAAjEA,wBAAyB7e,EAAwC,EAAxCA,KAAMmV,EAAkC,EAAlCA,QAC/D,EAAwBtW,KAAhB6D,EAAR,EAAQA,MAAO1D,EAAf,EAAeA,KACP+G,EAA0BsB,IAA1BtB,sBAqBR,OACI,mCACI,cAAC2C,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzI,UAAWnB,EAA9C,SACI,eAAC0J,GAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACI,GAAA,EAAD,CAAY9I,UAAWuC,EAAvB,wDAGA,eAACgG,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACpJ,eAAe,eAApC,UACI,cAAC,EAAD,CAAc0C,QAAQ,MAAMC,MAAM,OAAOC,QA3B1C,WACf,IAAMsD,EAAKmL,EAAWpG,IACtBmM,GAAalR,GAAIT,MAAK,SAACE,GACfA,EAAKE,MACLW,EAAsBb,EAAKE,OACpBF,EAAKuF,SACZ1E,EAAsB,yCACtB8Y,IACA1J,EAAQnV,EAAK0K,QAAO,SAAA5K,GAAG,OAAIA,EAAI2F,KAAOmL,EAAWnL,QAEjDM,EAAsB,0DAkBd,cAAC,EAAD,CAAc9D,QAAQ,KAAKC,MAAM,SAASC,QAb5C,WACd0c,kBC+COC,GAjEK,WAGhB,MAAwB5Y,oBAAkB,GAA1C,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAwBH,mBAAoB,IAA5C,mBAAOlG,EAAP,KAAamV,EAAb,KACA,EAAoCjP,qBAApC,mBAAO0K,EAAP,KAAmBvG,EAAnB,KACA,EAAwCnE,oBAAkB,GAA1D,mBACA,GADA,UACgDA,oBAAkB,IAAlE,mBAAO6Y,EAAP,KAAyBC,EAAzB,KACQjZ,EAA0BsB,IAA1BtB,sBACFyD,EAAUC,cACRzB,EAAaI,IAAbJ,SAERqD,qBAAU,WAeN,OAdAuL,KAAa5R,MAAK,SAACE,GACXA,EAAKE,MACLW,EAAsBb,EAAKE,OACrBF,EAAKuF,SACXvF,EAAKuF,QAAQyM,QAAQzL,KAAI,SAAChD,EAAQkD,GAC9BlD,EAAOhD,GAAKkG,EAAM,EAClB,IAAMC,EAAOnD,EAAOuH,UAAY,IAAI9F,KAAKzB,EAAOuH,WAAa,IAAI9F,KACjEzB,EAAOuH,UAAYnE,YAAOD,EAAM,uBAEpCuJ,EAAQjQ,EAAKuF,QAAQyM,UAErBnR,EAAsB,uDAGvB,WACHoP,EAAQ,OAEb,CAAC3L,IAEJ,IAAMmB,EAAkB,SAAC0G,GACrBhH,EAAcgH,EAAOvR,KACrBuG,GAAQ,IAENwE,EAAoB,SAACwG,GACvBhH,EAAcgH,EAAOvR,KACrBkf,GAAoB,IAGlBzY,EAAc,WAChBF,GAAQ,IAGNwY,EAA0B,WAC5BG,GAAqBD,IAGnB9e,EAAuB,QAAb+H,EnEs0BW,SAAC2C,EAAiBE,GAsD/C,MArDgB,CACd,CACEC,MAAO,OACPC,WAAY,aACZ9L,MAAO,KAET,CACE6L,MAAO,cACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,eACZ9L,MAAO,KAET,CACE6L,MAAO,OACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,OACND,QAAQ,OACRE,QAAS,kBAAMwI,EAAgBJ,QAKvC,CACEO,MAAO,SACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACErI,MAAM,SACND,QAAQ,SACRE,QAAS,kBAAM0I,EAAkBN,SmEt3BJ0U,CAAgBtU,EAAiBE,GnE+3BtC,SAACF,EAAiBE,GAsDpD,MArDgB,CACd,CACEC,MAAO,OACPC,WAAY,WACZ9L,MAAO,KAET,CACE6L,MAAO,cACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,UACZ9L,MAAO,KAET,CACE6L,MAAO,YACPC,WAAY,uBACZ9L,MAAO,KAET,CACE6L,MAAO,aACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACArI,MAAM,OACND,QAAQ,aACRE,QAAS,kBAAMwI,EAAgBJ,QAKrC,CACEO,MAAO,QACP7L,MAAO,IACP+L,WAAY,SAACT,GACX,OACE,cAAC,EAAD,CACArI,MAAM,SACND,QAAQ,QACRE,QAAS,kBAAM0I,EAAkBN,SmE/6BoD2U,CAAqBvU,EAAiBE,GACjI,OACI,mCACI,eAAC3K,EAAA,EAAD,WACI,cAACH,EAAD,CAAWC,KAAMA,EAAMC,QAASA,IAChC,cAAC,EAAD,CAAcmG,KAAMA,EAAMa,QAASV,EAAarE,MAAM,oBAAtD,SACI,cAAC,GAAD,CAAc0O,WAAYA,EAAYrK,YAAaA,EAAavG,KAAMA,EAAMmV,QAASA,MAEzF,cAAC,EAAD,CAAc/O,KAAM2Y,EAAkB9X,QAAS4X,EAAyB3c,MAAM,oBAA9E,SACI,cAAC,GAAD,CAAc0O,WAAYA,EAAYiO,wBAAyBA,EAAyB7e,KAAMA,EAAMmV,QAASA,YCrDlHtW,GAnBGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFoR,UAAW,SAEf1N,MAAO,CACHpB,cAAe,YACf3B,WAAY,IACZC,SAAU,GACVF,MAAO,UACPoC,aAAc,MACd6R,UAAW,UAGfwL,cAAe,CACX1f,gBAAiB,UACjBgC,QAAS1C,EAAM2C,QAAQ,QC8BhB0d,GAvCG,WACd,MAAuCvgB,KAA/BG,EAAR,EAAQA,KAAM0D,EAAd,EAAcA,MAAOyc,EAArB,EAAqBA,cACbpZ,EAA0BsB,IAA1BtB,sBACAiC,EAAaI,IAAbJ,SAsBR,OACI,mCACI,cAACU,GAAA,EAAD,CAAMC,WAAS,EAAC2K,UAAWC,KAAO3K,UAAU,SAASzI,UAAWnB,EAAMO,eAAe,SAASD,WAAW,SAAzG,SACI,eAACoJ,GAAA,EAAD,CAAMG,MAAI,EAAC1I,UAAWgf,EAAtB,UACI,cAAClW,GAAA,EAAD,CAAY9I,UAAWuC,EAAvB,SACmB,QAAbsF,EAAqB,aAAe,yBAE1C,cAAC2W,GAAD,CAAYhO,aA3BP,SAAC/L,GAClB6R,GAAW7R,GAAQI,MAAK,SAACE,GACjBA,EAAKE,MACLW,EAAsBb,EAAKE,OACrBF,EAAKuF,QACX1E,EAAsB,uCAEtBA,EAAsB,wDAoBsB6K,WAf7B,CACvB1H,KAAM,GACNE,YAAa,EACbhF,MAAO,GACPiF,UAAW,GACX2G,UAAW,cCPJnR,GArBGC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFoR,UAAW,QACX3Q,gBAAiB,WAGrB4f,KAAM,CACFhI,SAAU,IACV7P,UAAW,OACXjG,aAAc,GACdiL,OAAQ,YACR8S,SAAU,IACVngB,SAAU,WACVD,UAAW,MACX4C,aAAc,OAElBqd,cAAe,CACXhgB,SAAU,gB,8BCJZogB,GAAW,CACbC,gBAAiB,EACjBC,8BAA+B,GAG7BC,GAAe,CACjBC,UAAW,GACXC,wBAAyB,IAoGdC,GAjGI,WACf,MAAsChhB,KAA9BG,EAAR,EAAQA,KAAMqgB,EAAd,EAAcA,KAAMF,EAApB,EAAoBA,cACZnX,EAAaI,IAAbJ,SACR,EAAwB9B,mBAAgCqZ,IAAxD,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAgC7Z,mBAAcwZ,IAA9C,mBAAOM,EAAP,KAAiBC,EAAjB,KACQla,EAA0BsB,IAA1BtB,sBACFyD,EAAUC,cAEVyW,EAAqC,QAAblY,EChCd,CACZ,CACI8C,MAAO,WACPC,WAAY,WACZ9L,MAAO,KAEX,CACI6L,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAEX,CACI6L,MAAO,WACPC,WAAY,YACZ9L,MAAO,KAEX,CACI6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,KAEX,CACI6L,MAAO,KACPC,WAAY,KACZ9L,MAAO,KAEX,CACI6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAEX,CACI6L,MAAO,aACPC,WAAY,gBACZ9L,MAAO,MAOC,CACd,CACE6L,MAAO,WACPC,WAAY,QACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,gBACZ9L,MAAO,KAET,CACE6L,MAAO,WACPC,WAAY,mBACZ9L,MAAO,KAET,CACE6L,MAAO,OACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,KACPC,WAAY,SACZ9L,MAAO,KAET,CACE6L,MAAO,MACPC,WAAY,MACZ9L,MAAO,KAET,CACE6L,MAAO,aACPC,WAAY,aACZ9L,MAAO,MD1CLkhB,EAAgC,QAAbnY,ECiDT,CACZ,CACI8C,MAAO,eACPC,WAAY,WACZ9L,MAAO,KAEX,CACI6L,MAAO,YACPC,WAAY,aACZ9L,MAAO,KAEX,CACI6L,MAAO,WACPC,WAAY,YACZ9L,MAAO,KAEX,CACI6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAEX,CACI6L,MAAO,OACPC,WAAY,OACZ9L,MAAO,MAOC,CACd,CACE6L,MAAO,eACPC,WAAY,QACZ9L,MAAO,KAEX,CACI6L,MAAO,YACPC,WAAY,MACZ9L,MAAO,KAEX,CACI6L,MAAO,WACPC,WAAY,SACZ9L,MAAO,KAEX,CACI6L,MAAO,QACPC,WAAY,QACZ9L,MAAO,KAEX,CACI6L,MAAO,OACPC,WAAY,UACZ9L,MAAO,MDtGXoM,qBAAU,WACNkL,KAAUvR,MAAK,SAACE,GACRA,EAAKE,OACLkG,QAAQC,IAAIrG,EAAKE,OACjBW,EAAsBb,EAAKE,QACpBF,EAAKuF,QACZsV,EAAQ7a,EAAKuF,SAEb1E,EAAsB,yDAG/B,IAEHsF,qBAAU,WACNmL,KAAcxR,MAAK,SAACE,GACZA,EAAKE,OACLkG,QAAQC,IAAIrG,EAAKE,OACjBW,EAAsBb,EAAKE,QACpBF,EAAKuF,SACZa,QAAQC,IAAIrG,EAAKuF,SACjBvF,EAAKuF,QAAQmV,wBAAwBnU,KAAI,SAACC,EAAaC,GACnDD,EAAYjG,GAAKkG,EAAM,EACvBD,EAAY3I,SAAW2I,EAAYqE,OAAO1L,aAC1C,IAAMuH,EAAO,IAAI1B,KAAKwB,EAAYtI,cAClCsI,EAAYE,KAAOC,YAAOD,EAAM,uBAGpC1G,EAAKuF,QAAQkV,UAAUlU,KAAI,SAAC+C,EAAM7C,GAC9B6C,EAAK/I,GAAKkG,EAAM,KAEpBsU,EAAY/a,EAAKuF,UAEjB1E,EAAsB,yDAG/B,CAAC+Z,IAEJ,IAAMM,EAAQ,CACN,CACIC,QAAS,kEACT3d,MAAoB,QAAbsF,EAAqB,2BAA6B,kCACzDsY,QAAsB,QAAbtY,EAAqB,yCAA2C,gCACzEuY,OAAQT,EAAKL,8BACbxd,QAAS,OACT8b,YAAa,WAAOvU,EAAQkF,KAAK,+BAClC,CACC2R,QAAS,sDACT3d,MAAoB,QAAbsF,EAAqB,OAAS,UACrCsY,QAAsB,QAAbtY,EAAqB,yBAA2B,uCACzDuY,OAAQT,EAAKN,gBACbvd,QAAS,OACT8b,YAAa,WAAOvU,EAAQkF,KAAK,YAG7C,OACA,mCACI,eAAChG,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASzI,UAAWnB,EAA9C,UACI,cAAC0J,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACjH,QAAS,EAAGnC,eAAe,eAAeY,UAAWgf,EAA1E,SACKiB,EAAM3U,KAAI,gBAAG4U,EAAH,EAAGA,QAAS3d,EAAZ,EAAYA,MAAO4d,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,OAA5B,EAAoCte,QAApC,EAA6C8b,YAA7C,OACX,eAACyC,GAAA,EAAD,CAAMrgB,UAAWkf,EAAjB,UACI,cAACoB,GAAA,EAAD,CACInN,UAAU,MACVzT,OAAO,MACP6gB,MAAOL,EACP7I,IAAI,SAER,eAACmJ,GAAA,EAAD,CAAaze,MAAO,CAAEzC,gBAAgB,WAAtC,UACI,cAACwJ,GAAA,EAAD,CAAY2X,cAAY,EAACzX,QAAQ,KAAKmK,UAAU,MAAhD,SACK5Q,IAEL,cAACuG,GAAA,EAAD,CAAYE,QAAQ,QAApB,mBACQoX,EADR,YACkBD,gBAM9B,eAAC5X,GAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,EAACpJ,eAAe,WAAYD,WAAW,SAA3D,UACI,cAACS,EAAD,CAAWC,KAAMggB,EAASJ,wBAAyB3f,QAASigB,IAC5D,cAACngB,EAAD,CAAWC,KAAMggB,EAASL,UAAW1f,QAASkgB,aE5G/CU,GAPI,WACf,OACI,mCACI,qBAAK3e,MAAO,CAAEhD,UAAW,OAAzB,qCC8CG4hB,OA5Bf,WACI,OACI,cAAC,IAAD,UACI,cAAC,EAAD,UACI,cAAC,GAAD,UACI,eAAC,EAAD,WACI,cAAC,GAAD,IACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAS1N,UAAWkI,KACtC,cAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,eAAe1N,UAAWuM,KAC5C,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,eAAe1N,UAAWuN,KAC5C,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,eAAe1N,UAAW/J,KAC5C,cAAC,IAAD,CAAOwX,OAAK,EAACC,KAAK,WAAW1N,UAAWxE,KACxC,cAAC,IAAD,CAAOiS,OAAK,EAACC,KAAK,mBAAmB1N,UAAWH,KAChD,cAAC,IAAD,CAAO4N,OAAK,EAACC,KAAK,cAAc1N,UAAWuB,KAC3C,cAAC,IAAD,CAAOkM,OAAK,EAACC,KAAK,sBAAsB1N,UAAWyE,KACnD,cAAC,IAAD,CAAOgJ,OAAK,EAACC,KAAK,kBAAkB1N,UAAWiG,KAC/C,cAAC,IAAD,CAAOwH,OAAK,EAACC,KAAK,WAAW1N,UAAWwL,KACxC,cAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,cAAc1N,UAAW8L,KAC3C,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,WAAW1N,UAAW4B,kBCnCxE+L,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.51cb0b69.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        marginTop: '3em',\n        position: 'relative', \n        display: 'flex',\n        flexDirection: \"column\",\n        alignItems: 'center', \n        justifyContent: 'center'\n    },\n}));\n\nexport default useStyles;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    columnHeader: {\n        backgroundColor: '#FFFFFF',\n        color: '#000000',\n        fontWeight: 800,\n        fontSize: 16,\n        width: '100%',\n      },\n      root: {\n        backgroundColor: 'primary',\n        color: 'primary',\n        height: 700, \n        width: '100%'\n      },\n      row: {\n        '&.reservation': {\n          backgroundColor: '#CD5C5C',\n        },\n        '&.payment': {\n          backgroundColor: '#7FFFD4',\n        },\n        '&.client': {\n          // backgroundColor: '#9400D3',\n        },\n        '&.total': {\n          backgroundColor: '#2F4F4F',\n        },\n        \n      },\n\n}));\n\nexport default useStyles;","import useStyles from './useStyles';\nimport { DataGrid, GridColumns, GridRowData, GridToolbar } from '@material-ui/data-grid';\nimport { Box } from '@material-ui/core';\nimport { useState } from 'react';\nimport clsx from 'clsx';\n\ninterface Props {  \n    rows: GridRowData[];\n    columns: GridColumns;\n}\nexport default function DataTable({ rows, columns }: Props): JSX.Element {\n    const { root, row, columnHeader } = useStyles();\n    \n    return (\n      <Box className={root}>\n        <DataGrid\n            components={{ Toolbar: GridToolbar }}\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            rowHeight={100}\n            disableSelectionOnClick\n            disableColumnMenu={true}\n            disableDensitySelector={true}\n            getRowClassName={(params) => `${clsx(row, params.row.status)}`}\n            classes={{ columnHeader: columnHeader }}\n        />\n      </Box>\n    );\n  }\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    circularProgress: {\n        color: theme.palette.common.white,\n    },\n    button: {\n        textTransform: 'uppercase',\n        borderRadius: theme.shape.borderRadius,\n        fontSize: 12,\n        fontWeight: 600,\n        padding: theme.spacing(1),\n        '&.submit': {\n            backgroundColor: theme.palette.primary.main,\n            margin: theme.spacing(6, 2, 2),\n            width: 160,\n            height: 56,\n        },\n        '&.edit': {\n            backgroundColor: \"#006400\",\n            width: 75,\n            height: 40,\n        },\n        '&.dialogSubmit': {\n            backgroundColor: theme.palette.primary.main,\n            width: 75,\n            height: 40,\n        },\n        '&.delete': {\n            backgroundColor: '#8B0000',\n            width: 75,\n            height: 40,\n        },\n        '&.cancel': {\n            backgroundColor: '#8B0000',\n            width: 75,\n            height: 40,\n        },\n        '&.processed': {\n            backgroundColor: \"#006400\",\n            width: 100,\n            height: 10,\n            marginTop: 5\n        },\n        '&.unprocessed': {\n            backgroundColor: '#8B0000',\n            width: 100,\n            height: 10,\n            marginTop: 5\n        },\n        '&.showResDetails': {\n            backgroundColor: '#FF8C00',\n            width: 100,\n            height: 10,\n            marginBottom: 5\n        },\n        '&.addPayment': {\n            backgroundColor: '#006400',\n            width: 100,\n            height: 40,\n        },\n        '&.allPayments': {\n            backgroundColor: '#006400',\n            width: 100,\n            height: 40,\n        },\n        '&.details': {\n            backgroundColor: '#006400',\n            width: 100,\n            height: 40,\n        },\n        '&.driverDetails': {\n            backgroundColor: '#0000FF',\n            width: 100,\n            height: 40,\n        },\n        '&.confirm': {\n            backgroundColor: '#483D8B',\n            width: 100,\n            height: 10,\n        },\n        '&.confirmed': {\n            backgroundColor: '#A9A9A9',\n            width: 100,\n            height: 10,\n        },\n        '&.yes': {\n            backgroundColor: \"#006400\",\n            width: 75,\n            height: 40,\n            marginRight: '1em'\n        },\n        '&.no': {\n            backgroundColor: '#8B0000',\n            width: 75,\n            height: 40,\n        },\n        '&.searchButton': {\n            backgroundColor: \"#006400\",\n            width: 75,\n            height: 40,\n            marginTop: '0.5em'\n        },\n\n    },\n}));\n\nexport default useStyles;","import { Button } from '@material-ui/core';\nimport useStyles from './useStyles';\nimport clsx from 'clsx';\n\ninterface Props {\n    btnText: string;\n    isSubmitBtn?: boolean;\n    style?: string;\n    cssStyle?: React.CSSProperties;\n    onClick?: () => void;\n    disabled?: boolean\n    \n}\n\nfunction CustomButton({ btnText, style, onClick, isSubmitBtn, disabled }: Props): JSX.Element {\n    const { button } = useStyles();\n    const btnStyle = clsx(button, style)\n\n    return (\n        <Button\n            disabled={disabled}\n            className={btnStyle}\n            onClick={onClick}\n            type=\"submit\"\n        >\n            {btnText}\n        </Button>\n                       \n    )\n}\n\nexport default CustomButton;","import { Box } from '@material-ui/core';\nimport CustomButton from '../components/Button/CustomButton';\n\nexport const NewReservationDictionary = {\n    engPage: {\n        title: 'add reservation',\n        form: {\n            type: 'type',\n            from: 'from',\n            to: 'to',\n            pax: 'pax',\n            property: 'property',\n            fullName: 'full name',\n            passenger: 'passenger',\n            driverNote: 'driver note',\n            flightNo: 'flight no',\n            selectedDate: 'date and time of arrivale'\n        }\n    },\n    turkishPage: {\n        title: 'rezervasyon ekle',\n        form: {\n            type: 'tip',\n            from: 'nerden',\n            to: 'nereye',\n            pax: 'pax',\n            property: 'emlak',\n            fullName: 'ad soyad',\n            passenger: 'yolcu',\n            driverNote: 'sürücü notu',\n            flightNo: 'uçuş no',\n            selectedDate: 'variş tarihi ve saatı'\n        }\n    }\n};\n\nexport const tabsDictionary = {\n    englishTabs : [\n        // { label: 'Home', to: '/client-home' },\n        { label: 'new reservation', to: '/new-reservation' },\n        { label: 'reservations', to: '/reservation' },\n        { label: 'payments', to: '/payment' }\n    ],\n    turkishTabs : [\n        // { label: 'Home', to: '/client-home' },\n        { label: 'yeni rezervasyon', to: '/new-reservation' },\n        { label: 'rezervasyonlar', to: '/reservation' },\n        { label: 'finans', to: '/payment' }\n    ]\n};\n\nexport const clientPaymentDictionary = {\n    engColumns:  [\n        { \n          field: 'createdAt', \n          headerName: 'Date', \n          width: 150 \n        },\n        {\n          field: 'type',\n          headerName: 'Type',\n          width: 150,\n        },\n        {\n          field: 'paid',\n          headerName: 'Paid',\n          width: 150,\n        },\n        {\n          field: 'currency',\n          headerName: 'Currency',\n          width: 150,\n        },\n        {\n          field: 'paidInTL',\n          headerName: 'Paid In TL',\n          width: 150,\n        },\n        { \n          field: 'time', \n          headerName: 'Time', \n          width: 150,\n        },\n        {\n          field: 'debt',\n          headerName: 'Debt',\n          width: 150,\n        },\n        {\n          field: 'note',\n          headerName: 'Note',\n          width: 400,\n        },\n    ],\n    \n    turksihColumns: [\n      { \n        field: 'createdAt', \n        headerName: 'Tarih', \n        width: 150 \n      },\n      {\n        field: 'type',\n        headerName: 'Tip',\n        width: 150,\n      },\n      {\n        field: 'paid',\n        headerName: 'Ödenen para ',\n        width: 150,\n      },\n      {\n        field: 'currency',\n        headerName: 'Parabirimi',\n        width: 150,\n      },\n      {\n        field: 'paidInTL',\n        headerName: 'TL Olarak',\n        width: 150,\n      },\n      {\n        field: 'debt',\n        headerName: 'Borç',\n        width: 150,\n      },\n      {\n        field: 'note',\n        headerName: 'Note',\n        width: 400,\n      },\n    ]\n};\n\nexport const engColumn = (handleEditClick, handleCancelClick, handleDriverDetails) => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Date and Time', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Flight No',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'From',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'To',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/property',\n      width: 150,\n    },\n    {\n      field: 'cost',\n      headerName: 'Cost',\n      width: 150,\n    },\n    {\n      field: \"Driver\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={!cellValues.row.confirmed}\n            style=\"driverDetails\"\n            btnText=\"Details\"\n            onClick={() => handleDriverDetails(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Edit\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"edit\"\n            btnText=\"edit\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Cancel\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"delete\"\n            btnText=\"Cancel\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const turksihColumns = (handleEditClick, handleCancelClick, handleDriverDetails) => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Traih va Saat', \n      width: 200 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Uçuş No ',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'Nerden',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'Nereye',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/Emlak',\n      width: 150,\n    },\n    {\n      field: 'cost',\n      headerName: 'Ücret',\n      width: 150,\n    },\n    {\n      field: \"Sürücü\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={!cellValues.row.confirmed}\n            style=\"driverDetails\"\n            btnText=\"Detay\"\n            onClick={() => handleDriverDetails(cellValues)}\n        />\n        );\n      }\n    },\n    {\n      field: \"Düzenle\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"edit\"\n            btnText=\"Düzenle\"\n            onClick={() => handleEditClick(cellValues)}\n        />\n        );\n      }\n    },\n    {\n      field: \"Iptal\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"delete\"\n            btnText=\"Iptal\"\n            onClick={() => handleCancelClick(cellValues)}\n        />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const agencyPaymentEngColumns = (handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) => {\n  const columns = [\n    {\n      field: 'propertyName',\n      headerName: 'Property',\n      width: 200,\n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 275,\n    },\n    {\n      field: 'debt',\n      headerName: 'Debt in TL',\n      width: 150,\n    },\n    {\n      field: \"Add Payment\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"addPayment\"\n            btnText=\"add payment\"\n            onClick={() => handleAddPaymentClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"All Payments\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"allPayments\"\n            btnText=\"all payments\"\n            onClick={() => handleAllPaymentsClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Details\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"details\"\n            btnText=\"details\"\n            onClick={() => handleDetailsClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const agencyPaymentTurkishColumns = (handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 200,\n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 275,\n    },\n    {\n      field: 'debt',\n      headerName: 'Borç TL olarak',\n      width: 150,\n    },\n    {\n      field: \"Ödeme Ekle\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"addPayment\"\n            btnText=\"Ödeme ekle\"\n            onClick={() => handleAddPaymentClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Ödemeler\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"allPayments\"\n            btnText=\"Ödemeler\"\n            onClick={() => handleAllPaymentsClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Detaylar\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"details\"\n            btnText=\"detaylar\"\n            onClick={() => handleDetailsClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const agencyPaymentPage = {\n  engPage : {\n    title: 'add payment',\n    form: {\n      type: 'type',\n      paid: 'paid',\n      currency: 'currency',\n      note: 'note',\n      exchangeRate: 'exchange rate',\n      paidInTL: 'paid in TL'\n    }\n  },\n  turkishPage: {\n    title: 'ödeme ekle ',\n    form: {\n      type: 'tip',\n      paid: 'ödenmiş',\n      currency: 'para birimi',\n      note: 'not',\n      exchangeRate: 'Döviz kuru',\n      paidInTL: 'TL olarak ödendi'\n    }\n  }\n};\n\nexport const agencyListPaymentEngColumns = (handleCancelClick) => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Property',\n      width: 200,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Date of Payment',\n      width: 275,\n    },\n    {\n      field: 'paid',\n      headerName: 'Paid',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Currency',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Exchange Rate',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'Paid in TL',\n      width: 150,\n    },\n    {\n      field: \"Cancel\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Cancel\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const agencyListPaymentTurkishColumns = (handleCancelClick) => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 200,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'ödeme Tarihi',\n      width: 275,\n    },\n    {\n      field: 'paid',\n      headerName: 'ödeme',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi ',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Döviz Kuru',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'TL Olarak ödenen',\n      width: 150,\n    },\n    {\n      field: \"Iptal\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Iptal\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const reservationDetailsEngColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Date and Time', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Flight No',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'From',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'To',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/property',\n      width: 200,\n    },\n    {\n      field: 'property',\n      headerName: 'Property',\n      width: 225,\n    },\n  ];\n  return columns;\n};\n\nexport const reservationDetailsTurksihColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Traih va Saat', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Uçuş No ',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'Nerden',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'Nereye',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/Emlak',\n      width: 200,\n    },\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 225,\n    },\n  ];\n  return columns;\n};\n\nexport const detailsEngColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Date and Time', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Flight No',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'From',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'To',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/property',\n      width: 200,\n    },\n    {\n      field: 'cost',\n      headerName: 'Cost',\n      width: 225,\n    },\n    {\n      field: 'paid',\n      headerName: 'Paid',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Currency',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Exchange Rate',\n      width: 150,\n    },\n    {\n      field: 'totalReservationsCost',\n      headerName: 'Total Cost',\n      width: 150,\n    },\n    {\n      field: 'paymentTotal',\n      headerName: 'Paid in TL',\n      width: 150,\n    },\n    {\n      field: 'debt',\n      headerName: 'Remaining Amount In TL',\n      width: 150,\n    },\n  ];\n  return columns;\n};\n\nexport const detailsTurksihColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Traih va Saat', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Uçuş No ',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'Nerden',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'Nereye',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/Emlak',\n      width: 200,\n    },\n    {\n      field: 'cost',\n      headerName: 'Ucret',\n      width: 225,\n    },\n    {\n      field: 'paid',\n      headerName: 'ödeme',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi ',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Döviz Kuru',\n      width: 150,\n    },\n    {\n      field: 'totalReservationsCost',\n      headerName: 'Toplam Tutar ',\n      width: 150,\n    },\n    {\n      field: 'paymentTotal',\n      headerName: 'TL Olarak ödendi',\n      width: 150,\n    },\n    {\n      field: 'debt',\n      headerName: 'Borç',\n      width: 150,\n    },\n  ];\n  return columns;\n};\n\nexport const paymentDetailsEngColumns = () => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Property',\n      width: 300,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Date of Payment',\n      width: 350,\n    },\n    {\n      field: 'paid',\n      headerName: 'Paid',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Currency',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Exchange Rate',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'Paid in TL',\n      width: 190,\n    },\n  ];\n  return columns;\n};\n\nexport const paymentDetailsTurkishColumns = () => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 300,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'ödeme Tarihi',\n      width: 350,\n    },\n    {\n      field: 'paid',\n      headerName: 'ödeme',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi ',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Döviz Kuru',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'TL Olarak ödenen',\n      width: 190,\n    },\n  ];\n  return columns;\n};\n\n\nexport const totalDetailsEngColumns = () => {\n  const columns = [\n    {\n      field: 'reservationTotal',\n      headerName: 'Total Amount Of Reservations',\n      width: 350,\n    },\n    {\n      field: 'paymentTotal',\n      headerName: 'Total Amount Paid',\n      width: 350,\n    },\n    {\n      field: 'currency',\n      headerName: 'currency',\n      width: 240,\n    },\n    {\n      field: 'debt',\n      headerName: 'Remaining Amount In TL',\n      width: 350,\n    },\n  ];\n  return columns;\n};\n\nexport const totalDetailsTurkishColumns = () => {\n  const columns = [\n    {\n      field: 'reservationsTotal',\n      headerName: 'Toplam Rezervasyon Tutarı',\n      width: 350,\n    },\n    {\n      field: 'paymentsTotal',\n      headerName: 'Toplamda ödenen miktar ',\n      width: 350,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi',\n      width: 240,\n    },\n    {\n      field: 'debt',\n      headerName: 'TL Olarak Kalan Tutar  ',\n      width: 350,\n    },\n  ];\n  return columns;\n};\n\nexport const engTabs =\n  [\n    { label: 'Confirmed', value: '1' },\n    { label: 'Pending Confirmation', value: '2' }\n  ]\n  export const turkishTabs = \n  [ \n    { label: 'Onaylanmış', value: '1' },\n    { label: 'Onay Bekleniyor ', value: '2' }\n  ]\n\nexport const engDriverColumn = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'name', \n      headerName: 'First Name', \n      width: 150 \n    },\n    { \n      field: 'phoneNumber',\n      headerName: 'Cep', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 300,\n    },\n    {\n      field: 'carNumber',\n      headerName: 'Car No',\n      width: 150,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Joining Date',\n      width: 200,\n    },\n    {\n      field: \"Edit\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"edit\"\n            btnText=\"edit\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Cancel\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Cancel\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const turksihDriverColumns = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'name', \n      headerName: 'Adı', \n      width: 150 \n    },\n    { \n      field: 'phoneNumber', \n      headerName: 'Cep', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 300,\n    },\n    {\n      field: 'carNumner',\n      headerName: 'Arac No',\n      width: 150,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Katılma Tarihi ',\n      width: 200,\n    },\n    {\n      field: \"Düzenle\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n          style=\"edit\"\n          btnText=\"Düzenle\"\n          onClick={() => handleEditClick(cellValues)}\n        />\n        );\n      }\n    },\n    {\n      field: \"Iptal\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n          style=\"delete\"\n          btnText=\"Iptal\"\n          onClick={() => handleCancelClick(cellValues)}\n        />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\n\nexport const engClientColumn = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'propertyName', \n      headerName: 'Property', \n      width: 150 \n    },\n    { \n      field: 'businessType',\n      headerName: 'Type', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 250,\n    },\n    {\n      field: 'address',\n      headerName: 'Address',\n      width: 250,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Joining Date',\n      width: 200,\n    },\n    {\n      field: \"Edit\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"edit\"\n            btnText=\"edit\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Delete\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Delete\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const turkishClientColumn = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'propertyName', \n      headerName: 'Emlak', \n      width: 150 \n    },\n    { \n      field: 'businessType',\n      headerName: 'Tip', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 250,\n    },\n    {\n      field: 'address',\n      headerName: 'Address',\n      width: 250,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Katılma Tarihi',\n      width: 200,\n    },\n    {\n      field: \"Düzenle\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"edit\"\n            btnText=\"Düzenle\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Sil\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Sil\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const addClientFormlanguage = {\n  eng: {\n      firstName: 'FirstName',\n      lastName: 'lastName',\n      email: 'Email',\n      propertyName: 'Property Name',\n      businessType: 'Business Type',\n      address: 'Address',\n      istCostTitle: 'ist airport cost in TL',\n      sawCostTitle: 'Saw airport cost in TL'\n  },\n  turkish: {\n      firstName: 'Isim',\n      lastName: 'Soyisim',\n      email: 'Email',\n      propertyName: 'Emlak Adı',\n      businessType: 'İşyeri Tipi',\n      address: 'Address',\n      istCostTitle: 'ist airport maliyeti TL olarak',\n      sawCostTitle: 'SAW airport maliyeti TL olarak'\n      \n  }\n};","import axios from 'axios';\nimport { GetReservationPaymentApiData } from '../../interface/agencyReservation';\nimport { FormValues, ReservationApiData, GetReservationApiData } from '../../interface/Reservation';\n\nexport const postReservation = async (inputs: FormValues): Promise<ReservationApiData> => {\n    return await axios.post('/reservation/', inputs)\n        .then((res) => res.data)\n        .catch((error) => ({\n            error: { message: 'error! please try again later' }\n        })\n    );\n};\n\nexport const updateReservation = async (id: string, inputs: FormValues): Promise<ReservationApiData> => {\n    return await axios.patch(`/reservation/${id}`, inputs)\n        .then((res) => res.data)\n        .catch((error) => ({\n            error: { message: 'error! please try again later' }\n        })\n    );\n};\n\nexport const getReservations = async (): Promise<GetReservationApiData> => {\n    return await axios.get('/reservation/')\n        .then((res) => res.data)\n        .catch(() => ({\n            error: { message: 'error! please try again later' }\n        })\n    );\n};\n\nexport const deleteReservation = async (id: string): Promise<ReservationApiData> => {\n    return await axios.delete(`/reservation/${id}`)\n        .then((res) => res.data)\n        .catch(() => ({\n            error: { message: 'error! please try again later' }\n        })\n    );\n};\n// get Client reservations and payments stat.\nexport const getMyDetailsStat = async (id: string | undefined, from: Date, to: Date): Promise<GetReservationPaymentApiData> => {\n    return await axios.get(`/reservation/stat/${id}`, {\n        params: {\n            from,\n            to\n        }\n    })\n    .then((res) => res.data)\n    .catch((error) => error.response.data);\n};\n","import { useState, useContext, createContext, FunctionComponent, SyntheticEvent, useCallback } from 'react';\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface ISnackBarContext {\n  updateSnackBarMessage: (message: string) => void;\n}\n\nexport const SnackBarContext = createContext<ISnackBarContext>({\n  updateSnackBarMessage: () => null,\n});\n\nexport const SnackBarProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [message, setMessage] = useState<string | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const updateSnackBarMessage = useCallback((message: string) => {\n    setMessage(message);\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const snackbarHandleClose = useCallback((event: SyntheticEvent, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  }, []);\n\n  return (\n    <SnackBarContext.Provider value={{ updateSnackBarMessage }}>\n      {children}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={snackbarHandleClose}\n        message={message}\n        action={\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n      />\n    </SnackBarContext.Provider>\n  );\n};\n\nexport function useSnackBar(): ISnackBarContext {\n  return useContext(SnackBarContext);\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        '&.updateReservation': {\n            maxHeight:\"1000px\",\n        },\n        '&.addPayment': {\n            maxHeight:\"1000px\",\n        }\n    }\n}));\n\nexport default useStyles;","import Dialog from '@material-ui/core/Dialog';\nimport clsx from 'clsx';\nimport useStyles from './useStyles';\n\ninterface Props {\n    children: React.ReactNode;\n    open: boolean;\n    style?: string;\n    cssStyle?: React.CSSProperties;\n    isFullScreen?: boolean\n    onClose: () => void;\n  }\n\nconst CustomDialog = ({ open, onClose, style, cssStyle, children, isFullScreen }: Props): JSX.Element => {\n    const { dialog } = useStyles();\n    const dialogStyle = clsx(dialog, style);\n    return (\n        <Dialog \n            open={open} \n            fullScreen={isFullScreen}\n            onClose={onClose}\n            className={dialogStyle}\n            style={cssStyle}\n        >\n            {children}\n        </Dialog>\n    )\n};\n\nexport default CustomDialog;","import { createContext, FunctionComponent, useCallback, useContext, useState } from \"react\"\nimport { Language } from '../interface/Language';\n\ninterface ILanguageContext {\n    language: Language;\n    updateLanguage: (language: Language) => void;\n  }\n\nexport const LanguageContext = createContext<ILanguageContext>({\n    language: 'eng',\n    updateLanguage: () => null,\n  });\n\nexport const LanguageProvider: FunctionComponent = ({ children }): JSX.Element => {\n    const [language, setLanguage] = useState<Language>('tr');\n\n    const updateLanguage = useCallback((language: Language) => {\n        setLanguage(language);\n      }, []);\n    \n    return (\n        <LanguageContext.Provider value={{ language, updateLanguage }}>{children}</LanguageContext.Provider>\n    )\n}\n\nexport function useLanguage(): ILanguageContext {\n    return useContext(LanguageContext);\n  }\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(9),\n        monHieght: '50vn'\n    },\n    avatar: {\n        height: 80, \n        width: 80\n    },\n    title: {\n        fontSize: 25,\n        fontWeight: 800,\n        color: theme.palette.common.black\n    }\n}));\n\nexport default useStyles;","import { Grid, Avatar, Typography } from \"@material-ui/core\";\nimport { Driver } from \"../../../../interface/Driver\";\nimport useStyles from './useStyles';\n\ninterface Props {\n    driver: Driver;\n};\n\nconst DriverDetail = ({ driver }: Props): JSX.Element => {\n    const { root, avatar, title } = useStyles();\n\n    return (\n        <>\n            <Grid container direction='column' className={root} justifyContent=\"center\" alignItems=\"center\">\n                <Grid item>\n                    <Avatar className={avatar} src={driver.img} />\n                </Grid>\n                    <Typography className={title}>{`${driver.name}`}</Typography>\n                    <Typography variant=\"body2\">{`Cep: ${driver.phoneNumber}`}</Typography>\n                    <Typography variant=\"body2\">{`Car No: ${driver.carNumber}`}</Typography>\n            </Grid>\n        </>\n    )\n};\n\nexport default DriverDetail;","import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Box, Tab } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport CustomDialog from '../../components/CustomDialog/CustomDialog';\nimport { useHistory } from 'react-router-dom';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport { turkishTabs, engTabs } from '../../utils/dictionary';\nimport DriverDetail from '../Agency/Drivers/DriverDetail/DriverDetail';\nimport { Driver } from '../../interface/Driver';\n\nconst driverInitValue = {\n    name: '',\n    img: '',\n    carNumber: '',\n    phoneNumber: 0,\n    email: ''\n};\n\nfunction ListReservations(): JSX.Element{\n    const { root } = useStyles();\n    const history = useHistory();\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n\n    const [confirmedReservations, setConfirmedReservations] = useState<any>([]);\n    const [unConfirmedReservations, setUnConfirmedReservations] = useState<any>([]);\n    const [open, setOpen] = useState<boolean>(false);\n    const [openDetailDialog, setOpenDetailDialog] = useState<boolean>(false);\n    const [driver, setDriver] = useState<Driver>(driverInitValue);\n    const [value, setValue] = useState('1');\n    const [initValues, setInitValues] = useState( {\n        type: 0,\n        from: 0,\n        to: 0,\n        property: '',\n        pax: 5,\n        flightNo: '',\n        driverNote: '',\n        selectedDate: new Date(),\n        timezone: 0,\n        passengers: []\n        });\n\n    const handleDialogClose = () => {\n        setOpen(false)\n    };\n\n    const handleCacelClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        deleteReservation(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation deleted!');\n                setConfirmedReservations(confirmedReservations.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n        \n    };\n    const handleEditClick = (cellValues: any) => {\n        setInitValues(cellValues.row)\n        setOpen(true)\n    };\n\n    const handleChange = (event:  any, newValue: string) => {\n        setValue(newValue);\n    };\n\n    const handleDriverDetails = (cellValues: any) => {\n        setDriver(cellValues.row.driver);\n        setOpenDetailDialog(true);\n    };\n\n    const onDetailDialogClose = () => {\n        setOpenDetailDialog(false);\n    };\n\n    const columns = language === 'tr' ? turksihColumns(handleEditClick, handleCacelClick, handleDriverDetails)\n                                      : engColumn(handleEditClick, handleCacelClick, handleDriverDetails);\n    const tabs = language === 'tr' ? turkishTabs : engTabs\n\n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log(data.error)\n            } else if (data.success) {\n                data.success.reservations.confirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.status = 'reservation';\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setConfirmedReservations(data.success.reservations.confirmedReservations);\n                data.success.reservations.unConfirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setUnConfirmedReservations(data.success.reservations.unConfirmedReservations);\n            } else {\n                console.log('External error')\n            }\n        })\n        return () => {\n            setConfirmedReservations([]);\n            setUnConfirmedReservations([]);\n        }\n    }, [history, open]);\n\n    \n    \n    return (\n        <>\n            <Box sx={{ width: '100%' }} className={root}>\n                <TabContext value={value}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n                            {tabs.map(({label, value}, idx) => (\n                                <Tab key={idx} label={label} value={value} />\n                            ))}\n                        </TabList>\n                    </Box>\n                    <TabPanel value=\"1\" style={{ width: '100%' }}><DataTable rows={confirmedReservations} columns={columns} /></TabPanel>\n                    <TabPanel value=\"2\" style={{ width: '100%' }}><DataTable rows={unConfirmedReservations} columns={columns} /></TabPanel>\n                </TabContext>\n                <CustomDialog open={openDetailDialog} onClose={onDetailDialogClose} style='updateReservation'>\n                    <DriverDetail driver={driver}/>\n                </CustomDialog>\n            </Box>\n        </>\n    )\n}\n\nexport default ListReservations;","import { alpha, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        fontSize: 12,\n        fontWeight: 800,\n        color: theme.palette.common.black,\n        textTransform: 'uppercase'\n    },\n    select: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: theme.spacing(2),\n        marginTop: '0.5em',\n        width: 150,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n    },\n    inputs: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        height: '100%',\n        padding: theme.spacing(2),\n        marginBottom: '2em',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:cfous': {\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n          borderColor: theme.palette.primary.main,\n        },\n        marginRight: '1em'\n    },\n    inputLabel: {\n        fontSize: 12,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        color: theme.palette.common.black,\n        padding: theme.spacing(1)\n\n    },\n    itemContainer: {\n        margin: '1em 0 1em 0',\n    },\n}));\n\nexport default useStyles;","import { Grid, InputLabel } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport CustomButton from '../Button/CustomButton';\nimport useStyles from './useStyles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker\n  } from '@material-ui/pickers';\n\ninterface Props {\n    from: Date;\n    to: Date;\n    setFrom: (from: Date) => void;\n    setTo: (to: Date) => void;\n    invokeUseEffect: () => void\n};\n\nconst Search = ({ from, to, setFrom, setTo, invokeUseEffect }: Props): JSX.Element => {\n    const { itemContainer,  inputLabel, inputs } = useStyles();\n\n    const onSearchClick = () => {\n        invokeUseEffect();\n    };\n\n    return (\n        <>\n            <Grid item container className={itemContainer} spacing={6} justifyContent='center'>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid item >\n                        <InputLabel className={inputLabel}>\n                            From\n                        </InputLabel>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                InputProps= {{\n                                    classes: { input: inputs },\n                                    disableUnderline: true\n                                }}\n                                value={from}\n                                onChange={(date: any) => setFrom(date)}\n                        />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item >\n                        <InputLabel className={inputLabel}>\n                            to\n                        </InputLabel>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                InputProps= {{\n                                    classes: { input: inputs },\n                                    disableUnderline: true\n                                }}\n                                value={to}\n                                onChange={(date: any) => setTo(date) }\n                        />\n                        </MuiPickersUtilsProvider>\n                        <CustomButton btnText='Search' style='searchButton' onClick={onSearchClick} />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n            </Grid>\n        </>\n    );\n};\n\nexport default Search;","import { AuthApiData } from '../../interface/AuthApiData';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nconst loginWithCookies = async (): Promise<AuthApiData> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    credentials: 'include',\n  };\n  return await fetch(`/auth/user`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport default loginWithCookies;","import { AuthApiData } from '../../interface/AuthApiData';\nimport { FetchOptions } from '../../interface/FetchOptions';\n\nconst logout = async (): Promise<AuthApiData> => {\n  const fetchOptions: FetchOptions = {\n    method: 'GET',\n    credentials: 'include',\n  };\n  return await fetch(`/auth/logout`, fetchOptions)\n    .then((res) => res.json())\n    .catch(() => ({\n      error: { message: 'Unable to connect to server. Please try again' },\n    }));\n};\n\nexport default logout;\n","import { useState, useContext, createContext, FunctionComponent, useEffect, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthApiData, AuthApiDataSuccess } from '../interface/AuthApiData';\nimport { User } from '../interface/User';\nimport loginWithCookies from '../helpers/APICalls/loginWithCookies';\nimport logoutAPI from '../helpers/APICalls/logout';\n\ninterface IAuthContext {\n  loggedInUser: User | null | undefined;\n  updateLoginContext: (data: AuthApiDataSuccess) => void;\n  logout: () => void;\n}\n\nexport const AuthContext = createContext<IAuthContext>({\n  loggedInUser: undefined,\n  updateLoginContext: () => null,\n  logout: () => null,\n});\n\nexport const AuthProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [loggedInUser, setLoggedInUser] = useState<User | null | undefined>();\n  const history = useHistory();\n\n  const updateLoginContext = useCallback(\n    (data: AuthApiDataSuccess) => {\n      setLoggedInUser(data.user);\n      data.user.role === 'client' ? history.push('/reservation') : history.push('/agency-home');\n    },\n    [history],\n  );\n\n  const logout = useCallback(async () => {\n    await logoutAPI()\n      .then(() => {\n        history.push('/login');\n        setLoggedInUser(null);\n      })\n      .catch((error: any) => console.error(error));\n  }, [history]);\n\n  useEffect(() => {\n    const checkLoginWithCookies = async () => {\n      await loginWithCookies().then((data: AuthApiData) => {\n        if (data.success) {\n          updateLoginContext(data.success);\n          data.success.user.role === 'client' ? history.push('/reservation') : history.push('/agency-home');\n        } else {\n          setLoggedInUser(null);\n          history.push('/login');\n        }\n      });\n    };\n    checkLoginWithCookies();\n  }, [updateLoginContext, history]);\n\n  return <AuthContext.Provider value={{ loggedInUser, updateLoginContext, logout }}>{children}</AuthContext.Provider>;\n};\n\nexport function useAuth(): IAuthContext {\n  return useContext(AuthContext);\n}\n","import {  Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport { format } from 'date-fns';\nimport { detailsEngColumns, detailsTurksihColumns } from '../../utils/dictionary';\nimport Search from '../../components/Search/Search';\nimport { getMyDetailsStat } from '../../helpers/APICalls/reservation';\nimport { useAuth } from '../../context/useAuthContext';\n\ninterface Props {\n    clientId: string;\n    debt: number;\n};\n\ninterface Total {\n    id: number;\n    totalReservationsCost?: number;\n    paymentTotal?: number;\n    currency?: string;\n    debt: number;\n    status?: string;\n}\n\nfunction ClientPayment({ clientId, debt }: Props): JSX.Element {\n    const { language } = useLanguage();\n    const { loggedInUser } = useAuth();\n    const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n    const [detailsRows, setDetailsRows] = useState<any>([]);\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [from, setFrom] = useState(new Date());\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n\n    const totalReservationsCost = useRef(0);\n    const paymentTotal = useRef(0);\n    const totalsRows = useRef<Total[]>([{id: 10000200, totalReservationsCost: 0, paymentTotal: 0, debt: debt, status: 'total'}]); \n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    useEffect(() => {\n        const clientId = loggedInUser?.id;\n        getMyDetailsStat(clientId, from, to).then((data) => {\n                let idx = 0;\n                if (data.error) {\n                    console.log(data.error)\n                } else if (data.success) {\n                    data.success.reservations.map((reservation) => {\n                        reservation.id = idx + 1;\n                        reservation.status = 'reservation'\n                        const date = new Date(reservation.selectedDate);\n                        reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        totalReservationsCost.current +=  (reservation.cost ? reservation.cost : 0);\n                        idx ++;\n                        });\n                    data.success.payments.map((item) => {\n                        item.id = idx + 1;\n                        item.property = item.client?.property;\n                        item.status = 'payment'\n                        const date = new Date(item.createdAt ? item.createdAt : new Date());\n                        item.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        paymentTotal.current += item.paidInTL;\n                        idx++\n                    });\n                    totalsRows.current[0].totalReservationsCost = totalReservationsCost.current;\n                    totalsRows.current[0].paymentTotal = paymentTotal.current;\n                    totalsRows.current[0].debt = totalReservationsCost.current - paymentTotal.current;  \n                    setDetailsRows([...data.success.reservations, ...data.success.payments, ...totalsRows.current]\n                    .sort(function(a, b) {return parseFloat(a.date) - parseFloat(b.date)}));                    \n                 \n                } else {\n                    console.log('External Error, please try again Later!')\n                }\n            });\n            return () => {\n                totalReservationsCost.current = 0;\n                paymentTotal.current = 0;\n                setDetailsRows([]);\n            }\n    }, [useEffectTrigger]);\n    \n    return (\n        <>  \n            <Box display='flex' flexDirection='column'>\n                <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n                <DataTable rows={detailsRows} columns={detailsColumns} />\n            </Box>\n        </>\n    )\n}\nexport default ClientPayment","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        minHeight:\"100vh\",\n        marginTop: '2em'\n    },\n    title: {\n        textTransform: 'uppercase',\n        fontSize: 20,\n        fontWeight: 800\n    }\n}));\n\nexport default useStyles;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        backgroundColor: '#E0E0E0',\n        '& .MuiFormControl-root': {\n            marginTop: theme.spacing(1),\n        },\n    },\n    inputs: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        borderColor: 'blue',\n        fontSize: 16,\n        height: '100%',\n        padding: theme.spacing(2),\n        marginTop: 0,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:cfous': {\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n          borderColor: theme.palette.primary.main,\n        },\n    },\n    inputLabel: {\n        fontSize: 12,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        color: theme.palette.common.black,\n        // color: 'blue'\n    },\n    fieldInputLabel:  {\n        fontSize: 12,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        color: theme.palette.common.black,\n        marginTop: '0.5em'\n    },\n    select: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        borderColor: 'blue',\n        fontSize: 16,\n        padding: theme.spacing(2),\n        marginTop: '0.5em',\n        width: 200,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n    },\n    circularProgress: {\n        color: theme.palette.common.white,\n    },\n    submit: {\n        textTransform: 'uppercase',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.primary.main,\n        margin: theme.spacing(6, 2, 2),\n        padding: theme.spacing(1),\n        width: 160,\n        height: 56,\n        fontSize: 12,\n        fontWeight: 600,\n    },\n    itemContainer: {\n        margin: '1em 0 1em 0',\n    },\n    menuItem: {\n        width: \"100px\"\n    }\n}));\n\nexport default useStyles;\n","import { Formik, FieldArray, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\nimport { FormValues, FormLabels } from '../../../../interface/Reservation';\nimport CustomButton from '../../../../components/Button/CustomButton';\n\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n    MuiPickersUtilsProvider,\n    DateTimePicker\n  } from '@material-ui/pickers';\n\nimport { \n        Box, \n        InputLabel, \n        TextField, \n        Grid, \n        Select, \n        MenuItem,  \n        FormHelperText } from '@material-ui/core';\n\nconst airports = [\n    { value: 'IST airport', name: 'Istanbul Airport' }, \n    { value: 'SAW airport', name:'Sabiha Airport' },\n ];\nconst resorts = [\n    { value: 'SultanAhmet', name: 'SultanAhmet' },\n    { value: 'Sirkeci', name: 'Sirkeci' },\n    { value: 'Taksim', name: 'Taksim' },\n    { value: 'Fatih', name: 'Fatih' },\n    { value: 'Laleli', name: 'Laleli' }\n];\n\ninterface Props {\n    form: FormLabels,\n    handleSubmit: (values: FormValues) => void\n    initValues: FormValues;\n}\n\nfunction AddReservationForm({ form, handleSubmit, initValues } : Props): JSX.Element {\n    const classes = useStyles();\n    const  { type, from, to, pax, property, driverNote, flightNo, selectedDate } = form;\n\n    return (\n        <>\n            <Box>\n                <Formik\n                    initialValues={{\n                        type: initValues.type,\n                        from: initValues.from,\n                        to: initValues.to,\n                        property: initValues.property,\n                        pax: initValues.pax,\n                        flightNo: initValues.flightNo,\n                        driverNote: initValues.driverNote,\n                        selectedDate: initValues.selectedDate,\n                        timezone: initValues.timezone,\n                        passengers: initValues.passengers,\n                    }}\n                    validationSchema={Yup.object().shape({ \n                        type: Yup.string().required('This Field is required'),\n                        from:  Yup.string().required('This Field is required'),\n                        to: Yup.string().required('This Field is required'),\n                        property: Yup.string().required('This Field is required'),\n                        flightNo: Yup.string().required('This Field is required'),\n                        driverNote: Yup.string(),\n                        selectedDate: Yup.date().required('This Field is required'),\n                        pax: Yup.number().min(1).max(10).default(1),\n                    })}\n                    onSubmit={(values) => {handleSubmit(values)}}\n                >   \n                    {({ handleSubmit, handleChange, values, touched, errors, isSubmitting, setFieldValue }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={1}>Airport to Resort</MenuItem>\n                                            <MenuItem value={2}>Resort to Airport</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item> \n                                        <InputLabel className={classes.inputLabel}>\n                                            {pax}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"pax\"\n                                            name=\"pax\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.pax}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {\n                                                Array(10).fill(0).map((_, idx) => (\n                                                <MenuItem className={classes.menuItem} value={idx+1}>{idx+1}</MenuItem>\n                                            ))}\n                                            \n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.pax)}>{errors.pax}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {from}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"from\"\n                                            name=\"from\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.from}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                            >\n                                            {values.type === 1 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.from)}>{errors.from}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {to}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"to\"\n                                            name=\"to\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.to}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {values.type === 2 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.to)}>{errors.to}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={6}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {property}\n                                        </InputLabel>\n                                        <TextField \n                                            id='property'\n                                            name='property'\n                                            error={Boolean(errors.property)}\n                                            helperText={errors.property}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.property}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {flightNo}\n                                        </InputLabel>\n                                        <TextField \n                                            id='flightNo'\n                                            name='flightNo'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.flightNo}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={6}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <Grid item >\n                                            <InputLabel className={classes.inputLabel}>\n                                                {selectedDate}\n                                            </InputLabel>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <DateTimePicker\n                                                    InputProps= {{\n                                                        classes: { input: classes.inputs },\n                                                        disableUnderline: true\n                                                    }}\n                                                    value={values.selectedDate}\n                                                    onChange={(date: any) => setFieldValue('selectedDate', date)}\n                                            />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid>\n                                    </MuiPickersUtilsProvider>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.inputLabel}>\n                                    {driverNote}\n                                </InputLabel>\n                                <TextField \n                                    id='driverNote'\n                                    name='driverNote'\n                                    multiline\n                                    rows={4}\n                                    InputProps= {{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                    value={values.driverNote}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item lg={6}>\n                                <Grid item container className={classes.itemContainer} spacing={4} >\n                                    <FieldArray name=\"passengers\">\n                                        {\n                                            (fieldArrayProps ) => {\n                                                const { form } = fieldArrayProps;\n                                                const { values } = form;\n                                                const { pax } = values;\n                                                let allPassengers = new Array(pax).fill('');\n                                                return ( \n                                                    <Form>\n                                                        {\n                                                            allPassengers.map((passenger: any, index: number) => (\n                                                                <Box>\n                                                                    <InputLabel className={classes.fieldInputLabel}>\n                                                                        passenger {index + 1} full name \n                                                                    </InputLabel>\n                                                                    <Field\n                                                                        id={`passengers[${index}]`}\n                                                                        name={`passengers[${index}]`}\n                                                                        className={classes.select}\n                                                                        style={{ position: 'relative' }}\n                                                                        \n                                                                    />\n                                                                </Box>\n                                                            ))\n                                                        }\n                                                    </Form>\n                                                )   \n                                            }\n                                        }\n                                    </FieldArray>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <CustomButton style=\"submit\" btnText=\"submit\" />\n                            </Grid>\n                        </Grid>\n                    </form>\n                    )}\n                </Formik>\n            </Box>\n        </>\n    )\n}\nexport default AddReservationForm;\n","import { Box, Grid, Paper, Typography } from '@material-ui/core';\nimport {  useEffect, useRef, useState } from 'react';\nimport useStyles from './useStyles';\nimport AddReservationForm from './AddReservationForm/AddReservationForm';\nimport { useHistory } from 'react-router-dom';\nimport { NewReservationDictionary } from '../../../utils/dictionary';\nimport { Page, FormValues } from '../../../interface/Reservation';\nimport { postReservation } from '../../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { useLanguage } from '../../../context/useLanguageContext';\n\nconst { turkishPage, engPage } = NewReservationDictionary;\n\nfunction AddReservation(): JSX.Element {\n    const classes = useStyles();\n    const [page, setPage] = useState<Page>({title: '', form: engPage.form});\n    const history = useHistory();\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n    const initValues = useRef(\n        {\n            type: 0,\n            from: 0,\n            to: 0,\n            property: '',\n            pax: 0,\n            flightNo: '',\n            driverNote: '',\n            selectedDate: new Date(),\n            timezone: 0,\n            passengers: []\n        }\n    );\n\n    const handleSubmit = (values: FormValues) => {\n        postReservation(values).then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                updateSnackBarMessage('reservation has been created successfully');\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    };\n\n    useEffect(() => { \n        if (language === 'tr') {\n            setPage(turkishPage); \n        } else setPage(engPage);\n    }, [history, language])\n\n    return (\n        <>\n            <Grid container component={Paper} className={classes.root} alignItems='center'>\n                <Grid item xs={12} sm={12} md={12} lg={12} >\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        minHeight=\"100vh\"\n                    >\n                        <Box>\n                            <Typography variant=\"h2\" color=\"primary\" className={classes.title}>\n                                { page.title} \n                            </Typography>\n                            <AddReservationForm form={page.form} handleSubmit={handleSubmit} initValues={initValues.current}/>\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default AddReservation;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(5),\n    },\n    title: {\n        textTransform: 'uppercase',\n        fontWeight: 800,\n        fontSize: 24,\n        color: 'primary',\n        marginBottom: '2em',\n        textAlign: 'center',\n        paddingTop: theme.spacing(3),\n    }\n}));\n\nexport default useStyles;","import { alpha, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        '& .MuiFormControl-root': {\n            marginTop: theme.spacing(1),\n        },\n    },\n    inputs: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        height: '100%',\n        padding: theme.spacing(2),\n        marginBottom: '2em',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:cfous': {\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n          borderColor: theme.palette.primary.main,\n        },\n    },\n    label: {\n        fontSize: 12,\n        fontWeight: 800,\n        color: theme.palette.common.black,\n        textTransform: 'uppercase'\n    },\n    select: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: theme.spacing(2),\n        marginTop: '0.5em',\n        width: 200,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n    },\n    typography: {\n        fontSize: 20,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        margin: '1em 0 1em 0'\n    }\n}));\n\nexport default useStyles;","import { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport { Grid, InputLabel, TextField, Select, MenuItem, Typography } from '@material-ui/core';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport { Client } from '../../../../interface/Client';\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\nimport { addClientFormlanguage } from '../../../../utils/dictionary';\n\ninterface Props {\n    handleSubmit: (inputs: Client) => void;\n    values: Client\n}\n\nfunction AddClientForm( { handleSubmit, values } : Props): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n\n    const { firstName, lastName, email, propertyName, businessType, address, istCostTitle, sawCostTitle } =  \n        language === 'tr' ? addClientFormlanguage.turkish : addClientFormlanguage.eng;\n\n\n    return (\n       <>\n        <Formik\n            initialValues={{\n                email: values.email,\n                firstName: values.firstName,\n                lastName: values.lastName,\n                businessType: values.businessType,\n                address: values.address,\n                role: 'client',\n                propertyName: values.propertyName,\n                IstAirportMaxFourPaxCost: values.IstAirportMaxFourPaxCost,\n                IstAirportMaxSixPaxCost: values.IstAirportMaxSixPaxCost,\n                IstAirportMaxTenPaxCost: values.IstAirportMaxTenPaxCost,\n                SawAirportMaxFourPaxCost: values.SawAirportMaxFourPaxCost,\n                SawAirportMaxSixPaxCost: values.SawAirportMaxSixPaxCost,\n                SawAirportMaxTenPaxCost: values.SawAirportMaxTenPaxCost,\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Invalid Email Address').required('Please Enter Email Address'),\n                firstName: Yup.string().required('This field can not be blank'),\n                lastName: Yup.string().required('This field can not be blank'),\n                propertyName: Yup.string().required('This field can not be blank'),\n                address: Yup.string().required('This field can not be blank'),\n                role: Yup.string(),\n                businessType: Yup.string().required('This field can not be blank'),\n                IstAirportMaxFourPaxCost: Yup.number().min(0).required('Please enter the cost for (1 - 4) Pax'),\n                IstAirportMaxSixPaxCost: Yup.number().min(0).required('Please enter the cost for (4 - 6) Pax'),\n                IstAirportMaxTenPaxCost: Yup.number().min(0).required('Please enter the cost for (6 - 10) Pax'),\n                SawAirportMaxFourPaxCost: Yup.number().min(0).required('Please enter the cost for (1 - 4) Pax'),\n                SawAirportMaxSixPaxCost: Yup.number().min(0).required('Please enter the cost for (4 - 6) Pax'),\n                SawAirportMaxTenPaxCost: Yup.number().min(0).required('Please enter the cost for (6 - 10) Pax'),\n            })} \n            onSubmit={(values) => {handleSubmit(values)}}\n\n        >\n            {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <Form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {firstName}\n                                </InputLabel>\n                                <TextField\n                                    id=\"firstName\"\n                                    name=\"firstName\"\n                                    value={values.firstName}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.firstName)}\n                                    helperText={errors.firstName}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {lastName}\n                                </InputLabel>\n                                <TextField\n                                    id=\"lastName\"\n                                    name=\"lastName\"\n                                    value={values.lastName}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.lastName)}\n                                    helperText={errors.lastName}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }} \n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {email}\n                                </InputLabel>\n                                <TextField\n                                    id=\"email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.email)}\n                                    helperText={errors.email}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {businessType}\n                                </InputLabel>\n                                <Select\n                                    id=\"businessType\"\n                                    name=\"businessType\"\n                                    autoWidth\n                                    MenuProps={{\n                                        anchorOrigin: {\n                                            vertical: \"bottom\",\n                                            horizontal: \"left\"\n                                        },\n                                        transformOrigin: {\n                                            vertical: \"top\",\n                                            horizontal: \"left\"\n                                        },\n                                        getContentAnchorEl: null\n                                    }}\n                                    value={values.businessType}\n                                    onChange={handleChange}\n                                    classes={{ select: classes.select }}\n                                >\n                                    <MenuItem value={'hotel'}>Hotel</MenuItem>\n                                    <MenuItem value={'restaurant'}>Restaurant</MenuItem>\n                                    <MenuItem value={'other'}>Other</MenuItem>\n                                </Select>\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\">\n                        <Grid item>\n                                <InputLabel className={classes.label}>\n                                        {propertyName}\n                                </InputLabel>\n                                <TextField\n                                    id=\"propertyName\"\n                                    name=\"propertyName\"\n                                    value={values.propertyName}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.propertyName)}\n                                    fullWidth\n                                    helperText={errors.propertyName}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                        {address}\n                                </InputLabel>\n                                <TextField\n                                    id=\"address\"\n                                    name=\"address\"\n                                    value={values.address}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.address)}\n                                    fullWidth\n                                    helperText={errors.address}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Typography align=\"center\" className={classes.typography}>\n                            {istCostTitle}\n                        </Typography>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                     (1-4) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"IstAirportMaxFourPaxCost\"\n                                    name=\"IstAirportMaxFourPaxCost\"\n                                    value={values.IstAirportMaxFourPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.IstAirportMaxFourPaxCost)}\n                                    helperText={errors.IstAirportMaxFourPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (4-6) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"IstAirportMaxSixPaxCost\"\n                                    name=\"IstAirportMaxSixPaxCost\"\n                                    value={values.IstAirportMaxSixPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.IstAirportMaxSixPaxCost)}\n                                    helperText={errors.IstAirportMaxSixPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (6-10) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"IstAirportMaxTenPaxCost\"\n                                    name=\"IstAirportMaxTenPaxCost\"\n                                    value={values.IstAirportMaxTenPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.IstAirportMaxTenPaxCost)}\n                                    helperText={errors.IstAirportMaxTenPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Typography align=\"center\" className={classes.typography}>\n                            {sawCostTitle}\n                        </Typography>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                     (1-4) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"SawAirportMaxFourPaxCost\"\n                                    name=\"SawAirportMaxFourPaxCost\"\n                                    value={values.SawAirportMaxFourPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.SawAirportMaxFourPaxCost)}\n                                    helperText={errors.SawAirportMaxFourPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (4-6) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"SawAirportMaxSixPaxCost\"\n                                    name=\"SawAirportMaxSixPaxCost\"\n                                    value={values.SawAirportMaxSixPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.SawAirportMaxSixPaxCost)}\n                                    helperText={errors.SawAirportMaxSixPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (6-10) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"SawAirportMaxTenPaxCost\"\n                                    name=\"SawAirportMaxTenPaxCost\"\n                                    value={values.SawAirportMaxTenPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.SawAirportMaxTenPaxCost)}\n                                    helperText={errors.SawAirportMaxTenPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justifyContent='center'>\n                            <CustomButton style=\"submit\" btnText='submit'/>\n                        </Grid>\n                    </Grid>\n                </Form> \n            )}\n        </Formik>\n       </>\n    )\n};\n\nexport default AddClientForm;\n\n","import axios from 'axios';\nimport { AuthApiData, GetClientsApiData } from '../../interface/AuthApiData';\nimport { Client } from '../../interface/Client';\n\nexport const postClient = async (inputs: Client): Promise<AuthApiData> => {\n    return await axios.post('/users/', inputs)\n            .then((res) => res.data)\n            .catch(() => ({\n                error: {message: 'Unable to connect to server. Please try again'}\n            }))\n};\n\nexport const getClients = async (): Promise<GetClientsApiData> => {\n    return await axios.get('/users/')\n            .then((res) => res.data)\n            .catch(() => ({\n                error: {message: 'Unable to connect to server. Please try again'}\n            }))\n};\n\nexport const deleteClient = async (id: string | undefined) => {\n    return await axios.delete(`/users/${id}`)\n        .then((res) => res.data)\n        .catch(() => ({\n            error: {message: 'Unable to connect to server. Please try again'}\n        }));\n};\n\nexport const patchClient = async (inputs: Client, id: string | undefined) => {\n    return await axios.patch(`/users/${id}`, inputs)\n        .then((res) => res.data)\n        .catch(() => ({\n            error: {message: 'Unable to connect to server. Please try again'}\n        }));\n};\n","import useStyles from \"./useStyles\";\nimport AddClientForm from './AddClientForm/AddClientForm';\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { postClient } from '../../../helpers/APICalls/user';\nimport { Client } from '../../../interface/Client';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { useLanguage } from '../../../context/useLanguageContext';\n\nfunction AddClient(): JSX.Element {\n    const classes = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n\n    const initialValues={\n        email: '',\n        firstName: '',\n        lastName: '',\n        businessType: '',\n        address: '',\n        propertyName: '',\n        IstAirportMaxFourPaxCost: 0,\n        IstAirportMaxSixPaxCost: 0,\n        IstAirportMaxTenPaxCost: 0,\n        SawAirportMaxFourPaxCost: 0,\n        SawAirportMaxSixPaxCost: 0,\n        SawAirportMaxTenPaxCost: 0,\n    };\n    \n    const handleSubmit = (inputs: Client) => {\n        postClient(inputs).then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                console.log(data.success);\n                updateSnackBarMessage('Client has been added successfully!')\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n    return (\n        <>\n            <Grid container direction=\"column\" alignItems=\"center\" component={Paper} spacing={2} className={classes.root}>\n                <Grid item style={{ backgroundColor: '#D3D3D3' }}>\n                    <Typography variant='h2' className={classes.title}>\n                        { language === 'tr' ? 'müşteri ekle' : 'add client' }\n                    </Typography>\n                    <AddClientForm handleSubmit={handleSubmit} values={initialValues}/>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default AddClient;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    mainBox: {\n        padding: theme.spacing(3)\n\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        marginBottom: 20\n    }\n}));\n\nexport default useStyles;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(5),\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        marginBottom: 50\n    }\n}));\n\nexport default useStyles;","import { Grid, Typography } from \"@material-ui/core\";\nimport { Client } from \"../../../interface/Client\";\nimport AddClientFrom from '../AddClient/AddClientForm/AddClientForm';\nimport useStyles from \"./useStyles\";\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { patchClient } from \"../../../helpers/APICalls/user\";\n\ninterface Props {\n    values: Client,\n    handleUpdatedClientSuccess: (rowValue: Client, client: Client) => void\n};\n\nconst UpdateClient = ({ values, handleUpdatedClientSuccess }: Props): JSX.Element => {\n    const { root, title } = useStyles();\n    const { updateSnackBarMessage } =  useSnackBar();\n\n    const handleSubmit = (formValues: Client) => {\n        const id = values._id;\n        patchClient(formValues, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                handleUpdatedClientSuccess(values, data.success.client);\n                updateSnackBarMessage('Client has been updated successfully!');\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    };\n\n    return (\n        <>\n            <Grid container direction=\"column\" className={root} justify=\"center\">\n                    <Typography className={title}>\n                        Update Client\n                    </Typography>\n                <Grid item>\n                    <AddClientFrom handleSubmit={handleSubmit} values={values}/>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default UpdateClient;","import { useState, useEffect } from 'react';\nimport DataTable from \"../../../components/DataTable/DataTable\";\nimport { turkishClientColumn, engClientColumn } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { deleteClient, getClients } from '../../../helpers/APICalls/user';\nimport { format } from 'date-fns';\nimport { Client } from '../../../interface/Client';\nimport { useHistory } from 'react-router-dom';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport { Box, Typography } from '@material-ui/core';\nimport CustomButton from '../../../components/Button/CustomButton';\nimport useStyles from './useStyles';\nimport UpdateClient from '../UpdateClient/UpdateClient';\n\nconst initialValues={\n    email: '',\n    firstName: '',\n    lastName: '',\n    businessType: '',\n    address: '',\n    propertyName: '',\n    IstAirportMaxFourPaxCost: 0,\n    IstAirportMaxSixPaxCost: 0,\n    IstAirportMaxTenPaxCost: 0,\n    SawAirportMaxFourPaxCost: 0,\n    SawAirportMaxSixPaxCost: 0,\n    SawAirportMaxTenPaxCost: 0,\n};\n\nconst ListClients = (): JSX.Element => {\n    const { mainBox, title } = useStyles();\n    const { language } = useLanguage();\n    const [rows, setRows] = useState<Client []>([]);\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\n    const [openUpdateClient, setOpenUpdateClient] = useState<boolean>(false);\n    const [cellValue, setCellValue] = useState<Client>(initialValues);\n\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory();\n\n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                    const date = new Date(client.createdAt ? client.createdAt : Date.now());\n                    client.createdAt = format(date, 'dd-MM-yyyy kk:mm')\n                });\n                setRows(data.success.clients);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, [history]);\n\n    const handleEditClick = (values: any) => {\n        setOpenUpdateClient(true);\n        setCellValue(values.row);\n    };\n\n    const handleCancelClick = (values: any) => {\n        setOpenDialog(true);\n        setCellValue(values.row);\n    };\n\n    const handleUpdateClientClose = () => {\n        setOpenUpdateClient(false);\n    };\n\n    const onYesClick = () => {\n        const id = cellValue?._id;\n        deleteClient(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('Client has been deleted successfully!');\n                setRows(rows.filter(row => row.id !== cellValue?.id));\n                setOpenDialog(false);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n\n    const handleCloseDialog = () => {\n        setOpenDialog(false);\n    };\n\n    const handleUpdatedClientSuccess = (rowValue: Client, client: Client) => {\n        setRows(rows.map(row => row._id === rowValue._id ? {...row, ...client} : row));\n        setOpenUpdateClient(false);\n    }\n\n    const dialog = language === 'tr' ? { \n                                            text: 'Bu müşteriyi silmek istediğinizden emin misiniz?',\n                                            yes: 'Evet',\n                                            no: 'Hayır ' \n                                        } : \n                                        {\n                                            text: 'Are you sure you want to delete this client?',\n                                            yes: 'Yes',\n                                            no: 'No '\n                                        }\n\n    const columns = language === 'tr' ? turkishClientColumn(handleEditClick, handleCancelClick) \n                                        : engClientColumn(handleEditClick, handleCancelClick);\n\n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog open={openDialog} onClose={handleCloseDialog}>\n                <>\n                    <Box display='flex' alignItems='center' flexDirection=\"column\" className={mainBox}>\n                            <Typography className={title}>\n                                {dialog.text}\n                            </Typography>\n                            <Box justifyContent='center' m={2} pt={3}>\n                                <CustomButton btnText={dialog.yes} style='yes' onClick={onYesClick} />\n                                <CustomButton btnText={dialog.no} style='no' onClick={handleCloseDialog} />\n                            </Box>\n                    </Box>\n                </>\n            </CustomDialog>\n            <CustomDialog open={openUpdateClient} onClose={handleUpdateClientClose}>\n                <UpdateClient values={cellValue} handleUpdatedClientSuccess={handleUpdatedClientSuccess} />\n            </CustomDialog>\n        </>\n    )\n};\n\nexport default ListClients;","import axios from 'axios';\nimport { GetReservationApiData, \n        GetReservationPaymentApiData, \n        GetStatApiData,\n        GetStatInfoApiData } from '../../interface/agencyReservation';\n\ninterface Inputs {\n    status?: string;\n    confirmed?: boolean;\n    driver?: string\n}\n\nexport const updateReservation = (inputs: Inputs, id: string): Promise<GetReservationApiData> => {\n    return axios.patch(`/agency-reservation/${id}`, inputs)\n            .then((res) => res.data)\n            .catch(error => error.response.data);\n};\n\nexport const deleteReservation = async (id: string): Promise<GetReservationApiData> => {\n    return await axios.delete(`/reservation/${id}`)\n                    .then((res) => res.data)\n                    .catch(error => error.response.data);\n};\n\nexport const getClientReservation = async (id: string): Promise<GetReservationApiData> => {\n    return await axios.get(`/agency-reservation/${id}`)\n                    .then((res) => res.data)\n                    .catch((error) => error.response.data);\n};\n\nexport const getClientReservationPaymentStat = async (id: string, from: Date, to: Date): Promise<GetReservationPaymentApiData> => {\n    return await axios.get(`/agency-reservation/stat/${id}`, {\n        params: {\n            from,\n            to\n        }\n    })\n    .then((res) => res.data)\n    .catch((error) => error.response.data);\n};\n\nexport const getReservations = async (from: Date, to: Date): Promise<GetReservationApiData> => {\n    return await axios.get(`/agency-reservation`, {\n        params: {\n            from: from,\n            to: to\n        }\n    })\n    .then((res) => res.data)\n    .catch((error) => error.response.data);\n};\n\nexport const getStat = async (): Promise<GetStatApiData> => {\n    return await axios.get(`/agency-reservation/stat/`)\n    .then((res) => res.data)\n    .catch((error) => error.response.data);\n};\n\nexport const getstatInfo = async (): Promise<GetStatInfoApiData> => {\n    return await axios.get(`/agency-reservation/statinfo/`)\n    .then((res) => res.data)\n    .catch((error) => error.response.data);\n};","import axios from 'axios';\nimport { Driver, DriverApiData, GetDriversApiData } from '../../interface/Driver';\n\nexport const postDriver = async (inputs: Driver):Promise<DriverApiData> => {\n    return await axios.post('/driver', inputs)\n        .then((res) => res.data)\n        .catch((error) => error.response.data);\n};\n\nexport const updateDriver = async (inputs: Driver, id: string | undefined):Promise<DriverApiData> => {\n    return await axios.patch(`/driver/${id}`, inputs)\n        .then((res) => res.data)\n        .catch((error) => error.response.data);\n};\n\nexport const deleteDriver = async (id: string | undefined):Promise<DriverApiData> => {\n    return await axios.delete(`/driver/${id}`)\n        .then((res) => res.data)\n        .catch((error) => error.response.data);\n};\n\nexport const getDrivers = async (): Promise<GetDriversApiData> => {\n    return await axios.get('/driver/all')\n        .then((res) => res.data)\n        .catch((error) => error.response.data);\n};\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        minHeight: '100vh',\n        width: '50vh'\n    },\n    listItem: {\n        '&:hover': {\n            cursor: 'pointer',\n            opacity: 0.5,\n            backgroundColor: '#D3D3D3'\n        },\n        '&.selected': {\n            backgroundColor: '#A9A9A9'\n        }\n    },\n}));\n\nexport default useStyles;","import { Grid, List, Typography, ListItem, ListItemAvatar, Avatar, ListItemText, Divider, Select } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';  \nimport { Driver } from '../../../../interface/Driver';\nimport clsx from 'clsx';\nimport CustomButton from '../../../../components/Button/CustomButton';\nimport { updateReservation } from '../../../../helpers/APICalls/agencyReservation';\nimport { Reservation } from '../../../../interface/agencyReservation';\n\ninterface Props {\n    reservation: any;\n    invokeUseEffect: () => void;\n    handleClose: () => void;\n}\n\nconst AssignDriver = ({ reservation, invokeUseEffect, handleClose }: Props): JSX.Element => {\n    const { root, listItem } = useStyles();\n    const selected = clsx(listItem, 'selected');\n\n    const [value, setValue] = useState<string | undefined>();\n    const [drivers, setDrivers] = useState<Driver []>([]);\n\n    const { updateSnackBarMessage } = useSnackBar();\n\n    useEffect(() => {\n        getDrivers().then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                setDrivers(data.success.drivers);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n        return () => {\n            setDrivers([]);\n        }\n    }, []);\n\n    const handleSubmit = () => {\n        if (value === undefined) {\n            updateSnackBarMessage('Please select a driver');\n            return\n        };\n        const id = reservation._id;\n        const inputs = { confirmed: true, driver: value };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been confirmed successfully!');\n                invokeUseEffect();\n                \n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" className={root} >\n                <Grid item>\n                    <Typography>\n                        Please Select Driver\n                    </Typography>\n                        <List style={{ width: '100%', maxWidth: 360, backgroundColor: 'background.paper' }}>\n                            {drivers.map((driver, idx) => (\n                                <>\n                                    <ListItem alignItems=\"flex-start\" className={value !== driver._id ? listItem : selected} onClick={() => {setValue(driver._id)}}>\n                                        <ListItemAvatar>\n                                            <Avatar alt={`${driver.name}`} src=\"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\" />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${driver.name}`}\n                                            secondary={\n                                                <>\n                                                <Typography\n                                                    style={{ display: 'inline' }}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                >\n                                                    {`Car N0: ${driver.carNumber}`} <br /> {`Cep: ${driver.phoneNumber}`}\n                                                </Typography>\n                                                \n                                                </>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                </>\n                            ))}\n                        </List>\n                </Grid>\n                <Grid item container justifyContent='space-evenly' style={{ marginTop: '2em' }}>\n                    <CustomButton btnText=\"Submit\" style='dialogSubmit' onClick={handleSubmit} />\n                    <CustomButton btnText=\"Cancel\" style='cancel' onClick={handleClose} />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AssignDriver;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    passengerTitle: {\n        textTransform: 'uppercase',\n        fontSize: 18,\n        fontWeight: 800,\n    },\n    passengerRoot: {\n        padding: theme.spacing(5)\n    },\n}));\n\nexport default useStyles;","import { List, ListItem, ListItemText, Typography, Divider, Box } from \"@material-ui/core\";\nimport useStyles from './useStyles';\n\ninterface Props {\n    passengers: string [];\n}\n\nconst ListPassengers = ({ passengers }: Props) => {\n    const { passengerRoot, passengerTitle } = useStyles();\n\n    return (\n        <>\n            <Box className={passengerRoot}>\n                <Typography className={passengerTitle}>Passengers</Typography>\n                <Divider />\n                <List>\n                    {passengers.map((passenger, idx) => (\n                    <ListItem key={idx}>\n                        <ListItemText primary={`${idx + 1} ${passenger}`} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Box>\n        </>\n    )\n};\n\nexport default ListPassengers;","import { useEffect, useState } from \"react\";\nimport { format } from 'date-fns';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { Box } from \"@material-ui/core\";\nimport { agencyTurksihColumns, agencyEngColumns } from '../../../utils/dictionary/listAgencyReservation';\nimport { getReservations, updateReservation } from '../../../helpers/APICalls/agencyReservation';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport CustomDialog from \"../../../components/CustomDialog/CustomDialog\";\nimport AssignDriver from \"../Drivers/AssignDriver/AssignDriver\";\nimport { Reservation } from '../../../interface/agencyReservation';\nimport Search from \"../../../components/Search/Search\";\nimport ListPassengers from \"./ListPassengers\";\n\nfunction ListAgencyReservations(): JSX.Element {\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n    const [rows, setRows] = useState<any>([]);\n    const [open, setOpen] = useState<boolean>(false)\n    const [openShowDialog, setOpenShowDialog] = useState<boolean>(false)\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [reservation, setReservation] = useState<Reservation>()\n    const [from, setFrom] = useState(new Date());\n    const [passengers, setPassengers] = useState<string[]>([]);\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n    const handleProcessedClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        const inputs = { status: 'processed' };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been processed successfully!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n\n    const handleUnprocessedClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        const inputs = { status: 'unprocessed' };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been unprocessed successfully!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    };\n\n    const handleConfirmClick = (cellValues: any) => {\n        setReservation(cellValues.row);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    const handleShowClick = (cellValues: any) => {\n        setPassengers(cellValues.row.passengers);\n        setOpenShowDialog(true);\n    };\n\n    const handleShowDialogClose = () => {\n        setOpenShowDialog(false);\n    };\n\n    useEffect(() => {\n        getReservations(from, to).then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                console.log(data.success)\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.status = 'reservation';\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                    reservation.property = reservation.client?.propertyName;\n                });\n                setRows(data.success.reservations);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n\n        });\n        return () => {\n            setRows([]);\n        }\n    }, [useEffectTrigger]);\n\n    const columns = language === 'eng' ? agencyEngColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) \n                                       : agencyTurksihColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick);\n\n    return (\n        <Box>\n            <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog open={open} onClose={handleClose}>\n                <AssignDriver reservation={reservation} invokeUseEffect={invokeUseEffect} handleClose={handleClose} />\n            </CustomDialog>\n            <CustomDialog open={openShowDialog} onClose={handleShowDialogClose}>\n                <ListPassengers passengers={passengers} />\n            </CustomDialog>\n        </Box>\n    )\n};\n\nexport default ListAgencyReservations;","import { Box } from '@material-ui/core';\nimport CustomButton from '../../components/Button/CustomButton';\n\nexport const agencyEngColumns = (handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) => {\n    const columns = [\n      { \n        field: 'date', \n        headerName: 'Date and Time', \n        width: 300 \n      },\n      {\n        field: 'flightNo',\n        headerName: 'Flight No',\n        width: 150,\n      },\n      {\n        field: 'from',\n        headerName: 'From',\n        width: 150,\n      },\n      {\n        field: 'to',\n        headerName: 'To',\n        width: 150,\n      },\n      {\n        field: 'pax',\n        headerName: 'Pax',\n        width: 120,\n      },\n      {\n        field: 'driverNote',\n        headerName: 'Note/property',\n        width: 150,\n      },\n      {\n        field: 'property',\n        headerName: 'Property',\n        width: 150,\n      },\n      {\n        field: \"Action\",\n        width: 150,\n        renderCell: (cellValues) => {\n          return (\n            <>\n              <Box style={{ display: 'flex', flexDirection: 'column'}}>\n              <CustomButton\n                  style=\"showResDetails\"\n                  btnText=\"Show\"\n                  onClick={() => handleShowClick(cellValues)} />\n                <CustomButton\n                  disabled={cellValues.row.confirmed}\n                  style={!cellValues.row.confirmed ? \"confirm\" : \"confirmed\"}\n                  btnText={!cellValues.row.confirmed ? \"confirm\" : \"confirmed\"}\n                  onClick={() => handleConfirmClick(cellValues)} />\n                <CustomButton\n                  style=\"processed\"\n                  btnText=\"processed\"\n                  onClick={() => handleProcessedClick(cellValues)} />\n                <CustomButton\n                  style=\"unprocessed\"\n                  btnText=\"unprocessed\"\n                  onClick={() => handleUnprocessedClick(cellValues)} />\n              </Box>\n            </>\n          );\n        }\n      },\n    ];\n    return columns;\n  };\n  \n  export const agencyTurksihColumns = (handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) => {\n    const columns = [\n      { \n        field: 'date', \n        headerName: 'Traih va Saat', \n        width: 300 \n      },\n      {\n        field: 'flightNo',\n        headerName: 'Uçuş No ',\n        width: 150,\n      },\n      {\n        field: 'from',\n        headerName: 'Nerden',\n        width: 150,\n      },\n      {\n        field: 'to',\n        headerName: 'Nereye',\n        width: 150,\n      },\n      {\n        field: 'pax',\n        headerName: 'Pax',\n        width: 120,\n      },\n      {\n        field: 'driverNote',\n        headerName: 'Note/Emlak',\n        width: 150,\n      },\n      {\n        field: 'property',\n        headerName: 'Emlak',\n        width: 150,\n      },\n      {\n        field: \"Onay\",\n        width: 150,\n        renderCell: (cellValues) => {\n          return (\n            <>\n              <Box style={{ display: 'flex', flexDirection: 'column'}}>\n              <CustomButton\n                  style=\"showResDetails\"\n                  btnText=\"göster\"\n                  onClick={() => handleShowClick(cellValues)} />\n                <CustomButton\n                  disabled={cellValues.row.confirmed}\n                  style={!cellValues.row.confirmed ? \"confirm\" : \"confirmed\"}\n                  btnText={!cellValues.row.confirmed ? \"onay\" : \"onaylandi\"}\n                  onClick={() => handleConfirmClick(cellValues)}\n                />\n                <CustomButton\n                  style=\"processed\"\n                  btnText=\"işlenmiş\"\n                  onClick={() => handleProcessedClick(cellValues)}\n                />\n                <CustomButton\n                  style=\"unprocessed\"\n                  btnText=\"işlenmemiş\"\n                  onClick={() => handleUnprocessedClick(cellValues)}\n                />\n              </Box>\n            </>\n          );\n        }\n      },\n    ];\n    return columns;\n  };","import { alpha, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        backgroundColor: '#D3D3D3',\n        '& .MuiFormControl-root': {\n            marginTop: theme.spacing(1),\n        },\n    },\n    inputs: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        borderColor: 'blue',\n        fontSize: 16,\n        height: '100%',\n        padding: theme.spacing(2),\n        marginTop: 0,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:cfous': {\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n          borderColor: theme.palette.primary.main,\n        },\n    },\n    inputLabel: {\n        fontSize: 12,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        color: theme.palette.common.black,\n        // color: 'blue'\n    },\n    fieldInputLabel:  {\n        fontSize: 12,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        color: theme.palette.common.black,\n        marginTop: '0.5em'\n    },\n    select: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        borderColor: 'blue',\n        fontSize: 16,\n        padding: theme.spacing(2),\n        marginTop: '0.5em',\n        width: 200,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n    },\n    circularProgress: {\n        color: theme.palette.common.white,\n    },\n    submit: {\n        textTransform: 'uppercase',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.primary.main,\n        margin: theme.spacing(6, 2, 2),\n        padding: theme.spacing(1),\n        width: 160,\n        height: 56,\n        fontSize: 12,\n        fontWeight: 600,\n    },\n    itemContainer: {\n        margin: '1em 0 1em 0',\n    },\n    menuItem: {\n        width: \"100px\"\n    }\n}));\n\nexport default useStyles;\n","import { Formik } from \"formik\";\nimport { Grid, InputLabel, Select, MenuItem, FormHelperText, TextField } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport CustomButton from '../../../../../components/Button/CustomButton';\nimport { Payment } from '../../../../../interface/AgencyPayment';\n\nconst currencies = [\n    {\n        value: 'TL',\n        label: 'TL',\n    },\n    {\n      value: 'USD',\n      label: '$',\n    },\n    {\n      value: 'EUR',\n      label: '€',\n    },\n  ];\n\ninterface Props {\n    form: {\n        type: string;\n        paid: string;\n        currency: string;\n        note: string;\n        exchangeRate: string;\n        paidInTL: string;\n    },\n    handleSubmit: (inputs: Payment) => void;\n    clientId: string;\n};\n\nfunction AddPaymentForm({ form, handleSubmit, clientId }: Props): JSX.Element {\n    const { type, note, paid, currency, exchangeRate, paidInTL } = form;\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    clientId: clientId, \n                    type: '',\n                    paid: 0,\n                    currency: 'TL',\n                    exchangeRate: 0,\n                    paidInTL: 0,\n                    note: ''\n                 }}\n                 validationSchema={Yup.object().shape({ \n                    type: Yup.string().required('This Field is required'),\n                    paid: Yup.number().min(1).default(0),\n                    currency: Yup.string().required('This Field is required'),\n                    exchangeRate: Yup.number().min(1).default(1),\n                    paidInTL: Yup.number().min(1).default(1),\n                    note: Yup.string(),                    \n                })}\n                onSubmit={(values) => {handleSubmit(values)}}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors, isSubmitting, }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={'cash'}>cash</MenuItem>\n                                            <MenuItem value={'credit card'}>credit card</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {note}\n                                        </InputLabel>\n                                        <TextField \n                                            id='note'\n                                            name='note'\n                                            error={Boolean(errors.note)}\n                                            helperText={errors.note}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.note}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paid}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paid'\n                                            name='paid'\n                                            error={Boolean(errors.paid)}\n                                            helperText={errors.paid}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paid}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {currency}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"currency\"\n                                            name=\"currency\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.currency}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {currencies.map(({ value, label }) => (\n                                                <MenuItem key={label} value={value}>{label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.currency)}>{errors.currency}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {exchangeRate}\n                                        </InputLabel>\n                                        <TextField \n                                            id='exchangeRate'\n                                            name='exchangeRate'\n                                            error={Boolean(errors.exchangeRate)}\n                                            helperText={errors.exchangeRate}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.currency === 'TL' ?  values.exchangeRate = 1 : values.exchangeRate}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paidInTL}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paidInTL'\n                                            name='paidInTL'\n                                            error={Boolean(errors.paidInTL)}\n                                            helperText={errors.paidInTL}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paidInTL = values.paid * values.exchangeRate}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <CustomButton style=\"submit\" btnText=\"submit\" />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )}\n\n            </Formik>\n        </>\n    )\n}\nexport default AddPaymentForm;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '100vh',\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: '2em',\n        padding: theme.spacing(2)\n    },\n    title: {\n        textTransform: 'uppercase',\n    },\n}));\n\nexport default useStyles;","import axios from 'axios';\nimport { PaymentApiData, Payment } from '../../interface/AgencyPayment';\n\nexport const postPayment = async(inputs: Payment): Promise<PaymentApiData> => {\n    return await axios.post('/agency-payment/', inputs)\n            .then((res) => res.data)\n            .catch(() => ({\n                error: {message: 'Unable to connect to server. Please try again'}\n            }));\n};\n\nexport const getClientPayments = async (id: String): Promise<PaymentApiData> => {\n    return await axios.get(`/agency-payment/${id}`)\n            .then((res) => res.data)\n            .catch(() => ({\n                error: {message: 'Unable to connect to server. Please try again'}\n            }));\n};\n\ninterface Status {\n    status: String;\n    clientId: String;\n}\n\nexport const updatePayment = async (inputs: Status, id: string) => {\n    return await axios.patch(`/agency-payment/${id}`, inputs)\n            .then((res) => res.data)\n            .catch(() => ({\n                error: {message: 'Unable to connect to server. Please try again'}\n            }));\n};\n\nexport const getmyPayments = async () => {\n    return await axios.get('/agency-payment')\n        .then((res) => res.data)\n        .catch((error) => error.response.data);\n};   ","import { Box, Typography, Grid, Paper } from \"@material-ui/core\";\nimport AddPaymentForm from \"./AddPaymentForm/AddPaymentForm\";\nimport useStyles from \"./useStyles\";\nimport { agencyPaymentPage } from '../../../../utils/dictionary';\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\nimport { postPayment } from '../../../../helpers/APICalls/agencyPayment';\nimport { Payment } from '../../../../interface/AgencyPayment';\nimport { useSnackBar } from \"../../../../context/useSnackbarContext\";\n\nconst { engPage, turkishPage } = agencyPaymentPage;\n\ninterface Props {\n    clientId: string;\n}\n\nfunction AddPayment( { clientId } : Props): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n    const page = language === 'eng' ? engPage : turkishPage;\n\n\n    const handleSubmit = (inputs: Payment) => {\n        postPayment(inputs).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message)\n            } else if (data.success) {\n                updateSnackBarMessage('Payment has been saved successfully ')\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !')\n            }\n        })    \n    };\n    \n    return (\n        <Grid container component={Paper} className={classes.root} alignItems='center'>\n            <Grid item xs={12} sm={12} md={12} lg={12} >\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    minHeight=\"100vh\"\n                    width=\"100%\"\n                >\n                    <Box>\n                        <Typography variant=\"h4\" color=\"primary\" className={classes.title}>\n                            { page.title} \n                        </Typography>\n                        <AddPaymentForm form={page.form} handleSubmit={handleSubmit} clientId={clientId} />\n                    </Box>\n                </Box>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AddPayment;","import { useEffect, useState } from \"react\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { getClientPayments, updatePayment } from '../../../../helpers/APICalls/agencyPayment';\nimport { format } from 'date-fns';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport { \n        agencyListPaymentEngColumns, \n        agencyListPaymentTurkishColumns \n       } from '../../../../utils/dictionary';\n\nimport { useLanguage } from '../../../../context/useLanguageContext';\n\ninterface Props {\n    clientId: String;\n}\n\nfunction ListPayments({ clientId }: Props): JSX.Element {\n    const [rows, setRows] = useState<any>([]);\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n\n    const handleCancelClick = (cellValues: any) => {\n        const paymentId = cellValues.row._id;\n        const inputs = { status: 'canceled', clientId };\n        updatePayment(inputs, paymentId).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message)\n            } else if (data.success) {\n                updateSnackBarMessage('Payment has been canceled successfully');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n    const columns = language === 'eng' ? agencyListPaymentEngColumns(handleCancelClick) : agencyListPaymentTurkishColumns(handleCancelClick);\n    useEffect(() => {\n        getClientPayments(clientId).then((data) => {\n            if (data.error){\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.payment.map((item, idx) => {\n                    item.id = idx + 1;\n                    item.status = 'payment';\n                    item.property = item.client?.property;\n                    item.email = item.client?.email;\n                    const date = item.createdAt ? new Date(item.createdAt): new Date();\n                    item.createdAt = format(date, \"dd-MM-yyyy kk:mm\")\n                })\n                setRows(data.success.payment);\n            } else {\n                console.log('External Error!');\n            }\n        });\n        }, [])\n    return (\n        <DataTable rows={rows} columns={columns} />\n    )\n};\n\nexport default ListPayments;","import {  Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservationPaymentStat } from '../../../../helpers/APICalls/agencyReservation';\nimport { format } from 'date-fns';\n\nimport { detailsEngColumns, detailsTurksihColumns } from '../../../../utils/dictionary';\nimport Search from '../../../../components/Search/Search';\n\ninterface Props {\n    clientId: string;\n    debt: number;\n};\n\ninterface Total {\n    id: number;\n    totalReservationsCost?: number;\n    paymentTotal?: number;\n    currency?: string;\n    debt: number;\n    status?: string;\n}\n\nfunction Details({ clientId, debt }: Props): JSX.Element {\n    const { language } = useLanguage();\n    const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n    \n    const [detailsRows, setDetailsRows] = useState<any>([]);\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [from, setFrom] = useState(new Date());\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n\n    const totalReservationsCost = useRef(0);\n    const paymentTotal = useRef(0);\n    const totalsRows = useRef<Total[]>([{id: 10000200, totalReservationsCost: 0, paymentTotal: 0, debt: debt, status: 'total'}]); \n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    useEffect(() => {\n        getClientReservationPaymentStat(clientId, from, to).then((data) => {\n                let idx = 0;\n                if (data.error) {\n                    console.log(data.error)\n                } else if (data.success) {\n                    data.success.reservations.map((reservation) => {\n                        reservation.id = idx + 1;\n                        reservation.status = 'reservation'\n                        const date = new Date(reservation.selectedDate);\n                        reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        totalReservationsCost.current +=  (reservation.cost ? reservation.cost : 0);\n                        idx ++;\n                        });\n                    data.success.payments.map((item) => {\n                        item.id = idx + 1;\n                        item.property = item.client?.property;\n                        item.status = 'payment'\n                        const date = new Date(item.createdAt ? item.createdAt : new Date());\n                        item.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        paymentTotal.current += item.paidInTL;\n                        idx++\n                    });\n                    totalsRows.current[0].totalReservationsCost = totalReservationsCost.current;\n                    totalsRows.current[0].paymentTotal = paymentTotal.current;\n                    totalsRows.current[0].debt = totalReservationsCost.current - paymentTotal.current;  \n                    setDetailsRows([...data.success.reservations, ...data.success.payments, ...totalsRows.current]\n                    .sort(function(a, b) {return parseFloat(a.date) - parseFloat(b.date)}));                    \n                 \n                } else {\n                    console.log('External Error, please try again Later!')\n                }\n            });\n            return () => {\n                totalReservationsCost.current = 0;\n                paymentTotal.current = 0;\n                setDetailsRows([]);\n            }\n    }, [useEffectTrigger]);\n    \n    return (\n        <>  \n            <Box display='flex' flexDirection='column'>\n                <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n                <DataTable rows={detailsRows} columns={detailsColumns} />\n            </Box>\n        </>\n    )\n}\nexport default Details","import { useEffect, useState } from 'react';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport ListPayments from './ListPayments/ListPayments';\nimport Details from './Details/Details';\nimport { IconButton, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nfunction AgencyPayments(): JSX.Element {\n    const { language } = useLanguage();\n    const history = useHistory();\n\n    const [openAddPayment, setOpenAddPayment] = useState<boolean>(false);\n    const [openAllPayments, setOpenAllPayments] = useState<boolean>(false);\n    const [details, setDetails] = useState<boolean>(false);\n\n    const [rows, setRows] = useState<any>([]);\n    const [clientId, setClientId] = useState<string>('');\n    const [debt, setDebt] = useState<number>(0)\n\n    const handleAddPaymentClick = (cellValues: any) => {\n        setClientId(cellValues.row._id)\n        setOpenAddPayment(true)\n    };\n\n    const handleAddPaymentClose = () => {\n        setOpenAddPayment(false)\n    }\n\n    const handleAllPaymentsClick = (cellValues: any) => {\n        setClientId(cellValues.row._id);\n        setOpenAllPayments(true)\n    };\n\n    const handleAllPaymentsClose = () => {\n        setOpenAllPayments(false)\n    };\n\n    const handleDetailsClick = (cellValues: any) => {\n        setDebt(cellValues.row.debt)\n        setClientId(cellValues.row._id);\n        setDetails(true);\n    };\n\n    const handleDetailsClose = () => {\n        setDetails(false)\n    };\n\n    const columns = language === 'eng'  \n                                    ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) \n                                    : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n    \n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log('data error')\n            } else if (data.success) {\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                    client.status = 'client'\n                });\n                setRows(data.success.clients);\n            } else {\n                console.log('external error')\n            }\n        });\n        return () => {\n            setRows([])\n        };\n    }, [history, openAllPayments, openAddPayment])\n    \n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog \n                open={openAddPayment} \n                onClose={handleAddPaymentClose}\n                style={'addPayment'}\n            >\n                <AddPayment clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={openAllPayments} \n                onClose={handleAllPaymentsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleAllPaymentsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            All Payments\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <ListPayments clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={details} \n                onClose={handleDetailsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleDetailsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            Reservations and Payments details\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Details clientId={clientId} debt={debt}/>\n            </CustomDialog>\n        </>\n        \n    )\n}\n\nexport default AgencyPayments;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '100vh',\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: '2em'\n    },\n    welcome: {\n        paddingTop: theme.spacing(10),\n        paddingBottom: 20,\n        color: theme.palette.common.black,\n        fontWeight: 700,\n        textAlign: 'center',\n        width: '95%',\n    },\n    signinImage: {\n        height: \"100%\",\n        [theme.breakpoints.down('md')]: {\n            \n            width: '100%'\n        }\n    }\n}));\n\nexport default useStyles;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        '& .MuiFormControl-root': {\n            marginTop: theme.spacing(1),\n        },\n    },\n    label: {\n        marginTop: theme.spacing(2),\n        textTransform: 'uppercase',\n        color: theme.palette.common.black,\n        fontSize: 12,\n        fontWeight: 800,\n\n    },\n    inputs: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        height: '100%',\n        padding: theme.spacing(2),\n        marginTop: 0,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:cfous': {\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n          borderColor: theme.palette.primary.main,\n        },\n    },\n    submit: {\n        textTransform: 'uppercase',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: theme.palette.primary.main,\n        margin: theme.spacing(6, 2, 2),\n        padding: theme.spacing(1),\n        width: 160,\n        height: 56,\n        fontSize: 12,\n        fontWeight: 600,\n    },\n    circularProgress: {\n        color: theme.palette.common.white,\n    },\n}));\n\nexport default useStyles;\n","import { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport { CircularProgress, InputLabel, TextField, Button, Grid } from '@material-ui/core';\nimport useStyles from './useStyles';\n\ninterface Props {\n    handleSubmit: (\n      {\n        username,\n        password,\n      }: {\n        username: string;\n        password: string;\n      },\n      {\n        setStatus,\n        setSubmitting,\n      }: FormikHelpers<{\n        username: string;\n        password: string;\n      }>,\n    ) => void;\n  }\n\nfunction LoginForm ({ handleSubmit }: Props): JSX.Element { \n    const classes = useStyles();\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    username: '',\n                    password: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    username: Yup.string().required('Username is reqeuired!').min(3, 'Username is too short'),\n                    password: Yup.string().required('Password is requried!').min(5, 'Password is too short!')\n                })}\n                onSubmit={handleSubmit}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Grid container direction='column' justifyContent='center' alignItems='center'>\n                        <Grid item>\n                            <InputLabel className={classes.label}>\n                                username\n                            </InputLabel>\n                            <TextField\n                                id='username'\n                                name='username'\n                                error={Boolean(errors.username)}\n                                helperText={errors.username}\n                                value={values.username}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    classes: { input: classes.inputs },\n                                    disableUnderline: true\n                                }}\n\n                            />\n                            <InputLabel className={classes.label}>\n                                password\n                            </InputLabel>\n                            <TextField\n                                id='password'\n                                name='password'\n                                type='password'\n                                error={Boolean(errors.password)}\n                                helperText={errors.password}\n                                value={values.password}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    classes: { input: classes.inputs },\n                                    disableUnderline: true\n                                }}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            {isSubmitting ? <CircularProgress className={classes.circularProgress} /> : 'Login'} \n                            </Button>\n                        </Grid>\n                    </Grid> \n                </form>\n                )}   \n            </Formik>\n        </>\n    )\n}\nexport default LoginForm;\n","import axios from 'axios';\nimport { AuthApiData } from '../../interface/AuthApiData';\n\nconst login = async (username: string, password: string): Promise<AuthApiData> => {\n    const fetchData = { username, password };\n    return await axios.post('/auth/login', fetchData)\n        .then((res) => res.data)\n        .catch(() => ({\n            error: {message: 'Unable to connect to server. Please try again'}\n        }))\n};\n\ninterface Password {\n    oldPassword: string;\n    newPassword: string\n}\n\nexport const changePasswordApi = async (passwordInputs: Password ) => {\n    return await axios.patch('/auth/change-password', passwordInputs)\n        .then((res) => res.data)\n        .catch((error) => error.response.data);\n};\n\nexport default login;\n\n  ","import { Box, Grid, Typography, Paper } from '@material-ui/core';\nimport { FormikHelpers } from 'formik';\nimport useStyles from './useStyles';\nimport LoginForm from './LoginForm/LoginForm';\nimport login from '../../helpers/APICalls/login';\nimport { useAuth } from '../../context/useAuthContext';\nimport { useSnackBar } from '../../context/useSnackbarContext';\n\n\nfunction Login(): JSX.Element {\n    const classes = useStyles();\n    const { updateLoginContext } = useAuth();\n    const { updateSnackBarMessage } = useSnackBar();\n\n\n    const handleSubmit = (\n        { username, password }: { username: string; password: string }, \n        { setSubmitting }: FormikHelpers<{ username: string; password: string }>,\n        ) => {\n            login(username, password).then((data) => {\n                if (data.error) {\n                    setSubmitting(false);\n                    updateSnackBarMessage(data.error.message);\n                } else if (data.success){\n                    updateLoginContext(data.success);\n                } else {\n                    setSubmitting(false);\n                    updateSnackBarMessage('An unexpected error occurred. Please try again !');\n                }\n            });\n        }\n\n    return (\n        <>\n            <Grid container component=\"main\" className={classes.root} spacing={2}>\n                <Grid item xs={6} sm={6} md={6} lg={8} >\n                    <img src=\"https://airportshuttle0.s3.amazonaws.com/airportShuttle03.jpg\" alt='sign in' className={classes.signinImage} />\n                </Grid>\n                <Grid item component={Paper} xs={6} sm={6} md={6} lg={4}>\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        minHeight=\"100vh\"\n                    >\n                        <Box>\n                            <Typography variant=\"h2\" className={classes.welcome}>Sign in</Typography>\n                        </Box>\n                        <LoginForm handleSubmit={handleSubmit} />\n                    </Box>\n                </Grid>\n            </Grid>\n        </>\n    )\n  }\n\nexport default  Login;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    tabs: {\n        textTransform: 'uppercase',\n        fontWeight: 800,\n        fontSize: 12\n    },\n    gridItem: {\n        position: 'absolute',\n        right: 150\n    },\n}));\n\nexport default useStyles;\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 136,\n    },\n    menu: {\n        backgroundColor: '#808080',\n        color: theme.palette.common.white,\n        marginLeft: '1em',\n        marginTop: \"3em\",\n        opacity: 0.7,\n        \"&:hover\": {\n            opacity: 1\n        },\n    },\n    menuItem: {\n        opacity: 0.7,\n        \"&:hover\": {\n            opacity: 1\n        },\n        \n    },\n    tabStyle: {\n        fontWeight: 'bold'\n    }\n}));\n\nexport default useStyles;","import { Box, MenuItem, Tab, Tabs, Select, InputLabel, Menu } from \"@material-ui/core\";\nimport { SetStateAction, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { Language } from '../../../interface/Language';\n\nfunction LanguageTab(): JSX.Element {\n    const { updateLanguage, language } = useLanguage();\n    const [value, setValue] = useState('eng');\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [open, setOpen] = useState(false);\n    const { menu, menuItem, root, tabStyle } = useStyles();\n\n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false);\n    }\n\n\n    const handleMenuItemClick = (lenguage: Language) => {\n        updateLanguage(lenguage);\n        handleClose();\n    }\n\n    return (\n        <Box className={root}>\n            <Tabs \n                value={value} \n                TabIndicatorProps={{\n                style: {\n                    display: \"none\",\n                },\n                }} \n            >\n                    <Tab\n                        aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                        aria-haspopup={anchorEl ? true : undefined}\n                        onClick={(event: any) => handleClick(event)}\n                        className={tabStyle}\n                        label={language === 'eng' ? \"Language\" : \"Dil\"} \n                    />\n            </Tabs>\n            <Menu \n                    id=\"simple-menu\"\n                    anchorEl={anchorEl} \n                    open={open} \n                    onClose={handleClose}\n                    classes={{paper: menu}}\n                    MenuListProps={{onMouseLeave: handleClose}}\n                    elevation={0}\n                >\n                    <MenuItem classes={{root: menuItem}}  onClick={() => { handleMenuItemClick('eng')}}>ENG-Enlish</MenuItem>\n                    <MenuItem classes={{root: menuItem}}  onClick={() => { handleMenuItemClick('tr')}}>TR-Turkish</MenuItem>\n                </Menu>\n        </Box>\n    )\n}\n\nexport default LanguageTab;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 136,\n    },\n    menu: {\n        backgroundColor: '#808080',\n        color: theme.palette.common.white,\n        marginLeft: '1em',\n        marginTop: \"3em\",\n        opacity: 0.7,\n        \"&:hover\": {\n            opacity: 1\n        },\n    },\n    menuItem: {\n        opacity: 0.7,\n        \"&:hover\": {\n            opacity: 1\n        },\n        \n    },\n    tabStyle: {\n        fontWeight: 'bold'\n    }\n}));\n\nexport default useStyles;","import { alpha, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(10),\n        backgroundColor: '#D0D0D0'\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        marginBottom: '1em'\n    },\n    inputs: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        height: '100%',\n        padding: theme.spacing(2),\n        marginBottom: '2em',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:cfous': {\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n          borderColor: theme.palette.primary.main,\n        },\n    },\n    label: {\n        fontSize: 12,\n        fontWeight: 800,\n        color: theme.palette.common.black,\n        textTransform: 'uppercase'\n    },\n\n}));\n\nexport default useStyles;","import { Box, InputLabel, TextField, Typography, Divider } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CustomButton from \"../../Button/CustomButton\";\nimport useStyles from './useStyles';\nimport { changePasswordApi } from '../../../helpers/APICalls/login';\nimport { useSnackBar } from \"../../../context/useSnackbarContext\";\nimport { useLanguage } from \"../../../context/useLanguageContext\";\n\ninterface Props {\n    handleDialogClose: () => void;\n}\n\nconst ChangePassword = ({ handleDialogClose }: Props): JSX.Element => {\n    const { root, title, inputs, label } = useStyles();\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n    \n    const changePassword = (passwordType: string, event: any) => {\n        switch(passwordType) {\n            case 'oldPassword':\n                setOldPassword(event.target.value);\n                break;\n            case 'newPassword':\n                setNewPassword(event.target.value);\n                break;\n            }\n    }\n\n    const handleSubmit = ()  => {\n        const passwordInputs = { oldPassword, newPassword };\n        changePasswordApi(passwordInputs).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('Password has been updated successfully');\n                handleDialogClose();\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        }) \n    };\n\n    return (\n        <Box className={root}>\n            <Typography className={title}>\n                { language === 'eng' ? 'Change Password' : 'Şifre Değiştir ' }\n            </Typography>\n            <InputLabel>\n                { language === 'eng' ? 'Old Password' : 'Eski Şifre' }\n            </InputLabel>\n            <TextField\n                type={\"password\"}                \n                value={oldPassword}\n                onChange={(event) => {changePassword('oldPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}                \n            />\n            <InputLabel>\n                { language === 'eng' ? 'New Password' : 'Yeni Şifre' }\n            </InputLabel>\n            <TextField\n                type=\"password\"\n                value={newPassword}\n                onChange={(event) => {changePassword('newPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}\n            />\n            <Box />\n                <CustomButton style='submit' btnText='Submit' onClick={handleSubmit} />\n        </Box>\n    )\n};\n\nexport default ChangePassword;","import { Menu, MenuItem } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { useAuth } from '../../../context/useAuthContext';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from \"../../CustomDialog/CustomDialog\";\nimport ChangePassword from \"../ChangePassword/ChangePassword\";\n\n\nconst Profile = (): JSX.Element => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const { menu, menuItem, root, tabStyle } = useStyles();\n    const { logout } = useAuth();\n    const { language } = useLanguage();\n    \n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false);\n    }\n\n    const handleLogout = () => {\n        logout();\n    };\n\n    const handleDialogClose = () => {\n        setOpenDialog(!openDialog);\n    }\n\n    return (\n        <>\n            <IconButton aria-label=\"fingerprint\" onClick={handleClick}>\n                <PersonIcon />\n            </IconButton>\n            <Menu \n                id=\"simple-menu\"\n                anchorEl={anchorEl} \n                open={open} \n                onClose={handleClose}\n                classes={{paper: menu}}\n                MenuListProps={{onMouseLeave: handleClose}}\n                elevation={0}\n            >\n                <MenuItem classes={{root: menuItem}} onClick={() => {setOpenDialog(true)}} >{ language === 'eng' ? 'Change Password' : 'Şifre Değiştir ' }</MenuItem>\n                <MenuItem classes={{root: menuItem}}  onClick={handleLogout}>{ language === 'eng' ? 'Logout' : 'Çikiş' }</MenuItem>\n            </Menu>\n            <CustomDialog open={openDialog} onClose={handleDialogClose}>\n                <ChangePassword handleDialogClose={handleDialogClose}/>\n            </CustomDialog>\n    </>\n    )\n}\n\nexport default Profile;","import useStyles from './useStyles';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Grid } from '@material-ui/core';\nimport { tabsDictionary } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport LanguageTab from '../LanguageTab/LanguageTab';\nimport Profile from '../Profile/Profile';\n\nconst { englishTabs,  turkishTabs } = tabsDictionary;\n\n\nfunction ClientHeader(): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n    let tabs = [];\n    \n    function tabFormation() {\n        if (language === 'tr') tabs = turkishTabs;\n        else tabs = englishTabs;\n        return tabs.map(({ label, to }, idx) => (\n            <Tab\n                key={idx}\n                label={label}\n                component={Link}\n                to={to}\n                className={classes.tabs}\n            />\n        ));\n    };\n\n    return (\n        <Grid container className={classes.root}>\n            <Grid item>\n                <Tabs\n                    aria-label=\"wrapped label tabs example\"\n                    TabIndicatorProps={{\n                        style: {\n                            display: \"none\",\n                        },\n                    }}\n                >\n                    {tabFormation()}\n                </Tabs>\n            </Grid>\n            <Grid item className={classes.gridItem}>\n                <Grid container>\n                    <LanguageTab />\n                    <Profile />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default ClientHeader;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    gridItem: {\n        position: 'absolute',\n        right: 150\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%'\n    },\n    tabs: {\n        textTransform: 'uppercase',\n        fontWeight: 800,\n        fontSize: 12\n    },\n    menu: {\n        backgroundColor: '#808080',\n        color: theme.palette.common.white,\n        marginTop: \"2em\",\n        opacity: 0.7,\n        \"&:hover\": {\n            opacity: 1\n        }\n    }\n    \n}));\n\nexport default useStyles;\n\n","import { useState } from 'react';  \nimport useStyles from './useStyles';\nimport { Tabs, Tab, Grid, Menu, MenuItem, Button } from '@material-ui/core';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';  \nimport LanguageTab from '../LanguageTab/LanguageTab';\nimport Profile from '../Profile/Profile';\n\nfunction AgencyHeader(): JSX.Element {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [anchorCleitnEl, setAnchorCleitnEl] = useState<null | HTMLElement>(null);\n    const [open, setOpen] = useState<boolean>(false);\n    const [openClient, setOpenClient] = useState<boolean>(false);\n    \n    const { language } = useLanguage();\n    const history = useHistory();\n\n    let tabs = [];\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false)\n    };\n\n    const handleClientClose = () => {\n        setAnchorCleitnEl(null);\n        setOpenClient(false);\n    };\n\n    const handleClick = (event: any, url: string) => {\n        history.push(url);\n        setOpen(false);\n        setOpenClient(false);\n    };\n\n    const handleClickMenu = (event: any, setAnchorFunc: (event: any) => void, setOpenFunc: (value: boolean) => void) => {\n        setAnchorFunc(event.currentTarget);\n        setOpenFunc(true)\n    };\n\n    const AgencyTabsDictionary = {\n        englishTabs : [\n            { label: 'Home', handleClick: (event: any) => handleClick(event, '/agency-home') },\n            { label: 'clients ', handleClick: (event: any) => handleClickMenu(event, setAnchorCleitnEl, setOpenClient) },\n            { label: 'reservations', handleClick: (event: any) => handleClick(event, '/agency-reservation') },\n            { label: 'payments', handleClick: (event: any) => handleClick(event, '/agency-payment') },\n            { label: 'dirvers',  handleClick: (event: any) => handleClickMenu(event, setAnchorEl, setOpen) }\n        ],\n        turkishTabs : [\n            { label: 'Home', handleClick: (event: any) => handleClick(event, '/agency-home') },\n            { label: 'müşteriler ', handleClick: (event: any) => handleClickMenu(event, setAnchorCleitnEl, setOpenClient) },\n            { label: 'rezervasyonlar', handleClick: (event: any) => handleClick(event, '/agency-reservation') },\n            { label: 'finans', handleClick: (event: any) => handleClick(event, '/agency-payment') },\n            { label: 'sürücüler', handleClick: (event: any) => handleClickMenu(event, setAnchorEl, setOpen)}\n        ]\n      };\n\n    const menus = [\n        {\n            anchorEl: anchorEl, open: open, onClose: handleClose, \n            options: [\n                { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', handleClick: (event: any) => handleClick(event, 'drivers') },\n                { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', handleClick: (event: any) => handleClick(event, 'add-driver') }\n            ]\n        },\n        {\n            anchorEl: anchorCleitnEl, open: openClient, onClose: handleClientClose, \n            options: [\n                { label: language === 'eng' ? 'All Clients' : 'Müşteriler', handleClick: (event: any) => handleClick(event, 'clients')},\n                { label: language === 'eng' ? 'Add Client' : 'Müşteri Ekle', handleClick: (event: any) => handleClick(event, 'add-client') }\n            ],\n        }  \n    ];\n\n    const { englishTabs,  turkishTabs } = AgencyTabsDictionary;\n    \n    function tabFormation() {\n        if (language === 'tr') tabs = turkishTabs;\n        else tabs = englishTabs;\n        return tabs.map(({ label, handleClick }, idx) => (\n            <Tab\n                key={idx}\n                label={label}\n                onClick={handleClick}\n                className={classes.tabs}\n            />\n        ));\n    };\n\n    return (\n        <Grid container className={classes.root} >\n            <Grid item>\n                <Tabs\n                    aria-label=\"wrapped label tabs example\"\n                    TabIndicatorProps={{\n                        style: {\n                            display: \"none\",\n                        },\n                    }}\n                >\n                    {tabFormation()}\n                </Tabs>\n                {\n                    menus.map(({ anchorEl, open, onClose, options }) => (\n                        <>\n                            <Menu\n                                id=\"lock-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={onClose}\n                                classes={{ paper: classes.menu }}\n                                MenuListProps={{\n                                'aria-labelledby': 'lock-button',\n                                role: 'listbox',\n                                }}\n                            >\n                                {options.map(({label, handleClick}, idx) => (\n                                <MenuItem\n                                    key={idx}\n                                    onClick={handleClick}\n                                >\n                                    {label}\n                                </MenuItem>\n                                ))}\n                            </Menu>\n                        </>\n                    ))\n                }\n            </Grid>\n            <Grid item className={classes.gridItem}>\n                <Grid container>\n                    <LanguageTab />\n                    <Profile />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AgencyHeader;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#808080',\n        color: '#000000',\n        width: '100%'\n    }\n}));\n\nexport default useStyles;","import ClientHeader from './ClientHeader/ClientHeader';\nimport AgencyHeader from './AgencyHeader/AgencyHeader';\nimport useStyles from './useStyles';\nimport { useAuth } from '../../context/useAuthContext';\nimport { AppBar, Box, Toolbar } from '@material-ui/core';\nimport LanguageTab from './LanguageTab/LanguageTab';\n\n\nfunction Header(): JSX.Element {\n    const { loggedInUser } = useAuth();\n    const classes = useStyles();\n\n    return (\n        <Box> \n            <AppBar position=\"static\" className={classes.root}>\n                <Toolbar>\n                    {!loggedInUser ? null\n                    :loggedInUser?.role === 'client' ?\n                        <Box>\n                            <ClientHeader />  \n                        </Box>\n                    :\n                        <Box>\n                            <AgencyHeader />  \n                        </Box>\n                    }\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header;","import { alpha, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        '& .MuiFormControl-root': {\n            marginTop: theme.spacing(1),\n        },\n    },\n    inputs: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        height: '100%',\n        padding: theme.spacing(2),\n        marginBottom: '2em',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:cfous': {\n          boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\n          borderColor: theme.palette.primary.main,\n        },\n    },\n    label: {\n        fontSize: 12,\n        fontWeight: 800,\n        color: theme.palette.common.black,\n        textTransform: 'uppercase'\n    },\n    select: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: theme.spacing(2),\n        marginTop: '0.5em',\n        width: 200,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n    },\n    typography: {\n        fontSize: 20,\n        fontWeight: 800,\n        textTransform: 'uppercase',\n        margin: '1em 0 1em 0'\n    }\n}));\n\nexport default useStyles;","import { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport { Grid, InputLabel, TextField, Select, MenuItem, Typography } from '@material-ui/core';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport { Driver } from '../../../../interface/Driver';\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\n\nconst engDriverForm = {\n    name: 'Name',\n    phoneNumber: 'Cep',\n    email: 'Email',\n    carNumber: 'Vehicle No'\n};\n\nconst turkishDriverForm = {\n    name: 'Isim',\n    phoneNumber: 'Cep',\n    email: 'Email',\n    carNumber: 'Araç No'\n};\n\ninterface Props {\n    handleSubmit: (inputs: Driver) => void;\n    initValues: Driver\n}\n\nfunction AddClientForm( { handleSubmit, initValues } : Props): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n    const { name, phoneNumber, email, carNumber } = language === 'tr' ? turkishDriverForm : engDriverForm\n\n    return (\n       <>\n        <Formik\n            initialValues={{\n                email: initValues.email,\n                name: initValues.name,\n                phoneNumber: initValues.phoneNumber,\n                carNumber: initValues.carNumber\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Invalid Email Address').required('Please Enter Email Address'),\n                name: Yup.string().required('This field can not be blank'),\n                phoneNumber: Yup.number().required('This field can not be blank'),\n                carNumber: Yup.string().required('This field can not be blank'),\n            })} \n            onSubmit={(values) => {handleSubmit(values)}}\n\n        >\n            {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <Form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item container justify=\"space-evenly\" spacing={2}>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {name}\n                                </InputLabel>\n                                <TextField\n                                    id=\"name\"\n                                    name=\"name\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.name)}\n                                    helperText={errors.name}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {phoneNumber}\n                                </InputLabel>\n                                <TextField\n                                    id=\"phoneNumber\"\n                                    name=\"phoneNumber\"\n                                    value={values.phoneNumber}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.phoneNumber)}\n                                    helperText={Boolean(errors.phoneNumber) ? 'please enter a valid number': null}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }} \n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\" spacing={2}>\n                        <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {email}\n                                </InputLabel>\n                                <TextField\n                                    id=\"email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.email)}\n                                    helperText={errors.email}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {carNumber}\n                                </InputLabel>\n                                <TextField\n                                    id=\"carNumber\"\n                                    name=\"carNumber\"\n                                    value={values.carNumber}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.carNumber)}\n                                    helperText={errors.carNumber}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justifyContent='center'>\n                            <CustomButton btnText='submit' style=\"submit\" />\n                        </Grid>\n                    </Grid>\n                </Form> \n            )}\n        </Formik>\n       </>\n    )\n};\n\nexport default AddClientForm;\n\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        fontSize: 30,\n        fontWeight: 800,\n        color: theme.palette.common.black,\n        margin: '3em',\n        textTransform: 'uppercase'\n    }\n}));\n\nexport default useStyles;\n","import CustomDialog from \"../../../../components/CustomDialog/CustomDialog\";\nimport DriverForm from \"../DriverForm/DriverForm\";\nimport { Driver } from '../../../../interface/Driver';\nimport { Box, Typography } from \"@material-ui/core\";\nimport useStyles from \"./useStyles\";\nimport { updateDriver } from \"../../../../helpers/APICalls/driver\";\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\n\ninterface Props {\n    initValues: Driver;\n    handleClose: () => void;\n    rows: Driver [];\n    setRows: any;\n}\n\nconst UpdateDriver = ({ initValues, handleClose, rows, setRows }: Props): JSX.Element => {\n    const { title } = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n    const handleSubmit = (inputs: Driver) => {\n        const id = initValues._id;\n        updateDriver(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            }else if (data.success) {\n                setRows(rows.map(row => row.id === initValues.id ? { ...row, ...data.success?.driver } : row));\n                updateSnackBarMessage('Driver has been updated successfully!');\n                handleClose();\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n    return (\n        <>\n            <Box>\n                <Typography className={title}>\n                    update driver\n                </Typography>\n                <DriverForm handleSubmit={handleSubmit} initValues={initValues} />\n            </Box>\n        </>\n        \n    )\n};\n\nexport default UpdateDriver;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3)\n    },\n    title: {\n        padding: theme.spacing(3)\n    }\n}));\n\nexport default useStyles;","import { Typography, Grid, Box } from '@material-ui/core';\nimport CustomButton from '../../../../components/Button/CustomButton';\nimport { deleteDriver } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext'; \nimport { Driver } from '../../../../interface/Driver';\n\ninterface Props {\n    initValues: Driver;\n    handleDeleteDialogClose: () => void;\n    rows: Driver [];\n    setRows: any;\n}\n\nconst DeleteDriver = ({ initValues, handleDeleteDialogClose, rows, setRows }: Props): JSX.Element => {\n    const { title, root } = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n\n    const onYesClick = () => {\n        const id = initValues._id;\n        deleteDriver(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                updateSnackBarMessage('Client has been deleted successfully!');\n                handleDeleteDialogClose();\n                setRows(rows.filter(row => row.id !== initValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n\n    const onNoClick = () => {\n        handleDeleteDialogClose();\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" className={root}>\n                <Grid item>\n                    <Typography className={title}>\n                        Are you sure you want to delete the driver\n                    </Typography>\n                    <Grid item container justifyContent=\"space-around\">\n                        <CustomButton btnText=\"Yes\" style=\"edit\" onClick={onYesClick} />\n                        <CustomButton btnText=\"No\" style=\"delete\" onClick={onNoClick}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default DeleteDriver;","import { useEffect, useState } from 'react'; \nimport { Box, Typography } from \"@material-ui/core\";\nimport CustomDialog from \"../../../../components/CustomDialog/CustomDialog\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\nimport { engDriverColumn, turksihDriverColumns } from \"../../../../utils/dictionary\";\nimport UpdateDriver from \"../UpdateDriver/UpdateDriver\";\nimport { Driver } from '../../../../interface/Driver';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport { useHistory } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport DeleteDriver from '../DeleteDriver/DeleteDriver';\n\n\nconst ListDrivers = (): JSX.Element => {\n    // const initRows = [{id: 1, firstName: 'abood', lastName: 'shiha', email: 'abood@gmail.com', carNumber: '656'} ]\n\n    const [open, setOpen] = useState<boolean>(false);\n    const [rows, setRows] = useState<Driver []>([]);\n    const [initValues, setInitValues] = useState<any>();\n    const [dialogUpdate, setDialogUpdate] = useState<boolean>(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n    const { updateSnackBarMessage } = useSnackBar(); \n    const history = useHistory();\n    const { language } = useLanguage();\n\n    useEffect(() => {\n        getDrivers().then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error)\n            }else if (data.success) {\n                data.success.drivers.map((driver, idx) => {\n                    driver.id = idx + 1;\n                    const date = driver.createdAt ? new Date(driver.createdAt) : new Date();\n                    driver.createdAt = format(date, 'dd-MM-yyyy kk:mm')\n                });\n                setRows(data.success.drivers);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n        return () => {\n            setRows([]);\n        };\n    }, [history])\n\n    const handleEditClick = (values: any) => {\n        setInitValues(values.row)\n        setOpen(true);\n    }\n    const handleCancelClick = (values: any) => {\n        setInitValues(values.row);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n    const handleDeleteDialogClose = () => {\n        setOpenDeleteDialog(!openDeleteDialog)\n    }\n\n    const columns = language === 'eng' ? engDriverColumn(handleEditClick, handleCancelClick) : turksihDriverColumns(handleEditClick, handleCancelClick)\n    return (\n        <>\n            <Box>\n                <DataTable rows={rows} columns={columns} />\n                <CustomDialog open={open} onClose={handleClose} style=\"updateReservation\">\n                    <UpdateDriver initValues={initValues} handleClose={handleClose} rows={rows} setRows={setRows} />\n                </CustomDialog>\n                <CustomDialog open={openDeleteDialog} onClose={handleDeleteDialogClose} style=\"updateReservation\">\n                    <DeleteDriver initValues={initValues} handleDeleteDialogClose={handleDeleteDialogClose} rows={rows} setRows={setRows}/>\n                </CustomDialog>\n            </Box>\n        </>\n    )\n};\n\nexport default ListDrivers;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '100vh',\n    },\n    title: {\n        textTransform: 'uppercase',\n        fontWeight: 800,\n        fontSize: 24,\n        color: 'primary',\n        marginBottom: '3em',\n        textAlign: \"center\",\n\n    },\n    itemContaienr: {\n        backgroundColor: '#D0D0D0', \n        padding: theme.spacing(4)\n    }\n}));\n\nexport default useStyles;","import { Grid, Typography, Paper } from '@material-ui/core';\nimport { Driver } from '../../../../interface/Driver';\nimport DriverForm from '../DriverForm/DriverForm';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport { postDriver } from '../../../../helpers/APICalls/driver';\nimport { useLanguage } from '../../../../context/useLanguageContext';\n \nconst AddDriver = (): JSX.Element => {\n    const { root, title, itemContaienr } = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n    \n    const handleSubmit = (inputs: Driver) => {\n        postDriver(inputs).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error)\n            }else if (data.success) {\n                updateSnackBarMessage('Driver has been added successfully!')\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    };\n\n    const initValues: Driver = {\n        name: '',\n        phoneNumber: 0,\n        email: '',\n        carNumber: '',\n        createdAt: ''\n    }\n\n    return (\n        <>\n            <Grid container component={Paper} direction=\"column\" className={root} justifyContent=\"center\" alignItems=\"center\">\n                <Grid item className={itemContaienr}>\n                    <Typography className={title}>\n                        { language === 'eng' ? 'Add Driver' : 'sürücü Ekle'}\n                    </Typography>\n                    <DriverForm handleSubmit={handleSubmit} initValues={initValues}/>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default AddDriver;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '100vh',\n        backgroundColor: '#D3D3D3',\n        \n    },\n    card: {\n        maxWidth: 345,\n        maxHeight: '35vh',\n        borderRadius: 25,\n        border: '2px solid',\n        minWidth: 325,\n        position: 'relative',\n        marginTop: '2em',\n        marginBottom: '2em'\n    },\n    itemContaienr: {\n        position: 'relative'\n    }\n}));\n\nexport default useStyles;","import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button, Grid } from '@material-ui/core';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';\nimport { getStat, getstatInfo } from '../../../helpers/APICalls/agencyReservation';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { GetStatApiDataSuccess, GetStatInfoApiDataSuccess } from '../../../interface/agencyReservation';\nimport { engUnconfirmedResColumns, \n          turkishUnconfirmedResColumns,\n          engOwedUsersColumns,\n          turkishOwedUsersColumns } from '../../../utils/dictionary/home';\n\nconst initStat = {\n    owedUsersNumber: 0,\n    unconfirmedReservationsNumber: 0\n};\n\nconst initStatInfo = {\n    owedUsers: [],\n    unconfirmedReservations: []\n};\n\nconst AgencyHome = (): JSX.Element => {\n    const { root, card, itemContaienr } = useStyles();\n    const { language } = useLanguage();\n    const [stat, setStat] = useState<GetStatApiDataSuccess>(initStat);\n    const [statInfo, setStatInfo] = useState<any>(initStatInfo);\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory()\n    \n    const unconfirmedResColumns = language === 'eng' ? engUnconfirmedResColumns() : turkishUnconfirmedResColumns();\n    const owedUsersColumns = language === 'eng' ? engOwedUsersColumns() : turkishOwedUsersColumns();\n \n    useEffect(() => {\n        getStat().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                setStat(data.success);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        getstatInfo().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                console.log(data.success)\n                data.success.unconfirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.property = reservation.client.propertyName;\n                    const date = new Date(reservation.selectedDate);\n                    reservation.date = format(date, 'dd-MM-yyyy kk:hh')\n                    \n                })\n                data.success.owedUsers.map((user, idx) => {\n                    user.id = idx + 1;\n                })\n                setStatInfo(data.success);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, [stat]);\n\n    const cards = [\n            {\n                cardImg: 'https://airportshuttle0.s3.amazonaws.com/airport-shuttle02.jpeg',\n                title: language === 'eng' ? 'Unconfirmed Reservations' : 'Onaylanmamış Rezer...',\n                content: language === 'eng' ? 'Reservations waiting for confirmation!' : 'Onay bekleyen rezervasyonlar!',\n                number: stat.unconfirmedReservationsNumber,\n                btnText: 'Show',\n                handleClick: () => {history.push('/unconfirmed-reservations')}\n            }, {\n                cardImg: 'https://airportshuttle0.s3.amazonaws.com/money.jpeg',\n                title: language === 'eng' ? 'Debt' : 'Borç',\n                content: language === 'eng' ? 'clients owe you money!' : 'Müşterilerin sana borcu var!',\n                number: stat.owedUsersNumber,\n                btnText: 'Show',\n                handleClick: () => {history.push('/debt')}\n            }\n        ]\n    return (\n    <>\n        <Grid container direction=\"column\" className={root}>\n            <Grid item container spacing={3} justifyContent=\"space-evenly\" className={itemContaienr}>\n                {cards.map(({ cardImg, title, content, number, btnText, handleClick }) => (\n                <Card className={card}>\n                    <CardMedia\n                        component=\"img\"\n                        height=\"140\"\n                        image={cardImg}\n                        alt=\"Debt\"\n                    />\n                    <CardContent style={{ backgroundColor:'#2F4F4F' }}>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            {`${number} ${content}`}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                ))}\n            </Grid>\n            <Grid item container justifyContent='flex-end'  alignItems='center'>\n                <DataTable rows={statInfo.unconfirmedReservations} columns={unconfirmedResColumns} />\n                <DataTable rows={statInfo.owedUsers} columns={owedUsersColumns} />\n            </Grid>\n        </Grid>\n    </>\n    );\n};\n\nexport default AgencyHome;","export const engUnconfirmedResColumns = () => {\n    const columns = [\n        {\n            field: 'property',\n            headerName: 'Property',\n            width: 150,\n        },\n        { \n            field: 'date', \n            headerName: 'Date and Time', \n            width: 150 \n        },\n        {\n            field: 'flightNo',\n            headerName: 'Flight No',\n            width: 150,\n        },\n        {\n            field: 'from',\n            headerName: 'From',\n            width: 150,\n        },\n        {\n            field: 'to',\n            headerName: 'To',\n            width: 150,\n        },\n        {\n            field: 'pax',\n            headerName: 'Pax',\n            width: 120,\n        },\n        {\n            field: 'driverNote',\n            headerName: 'Note/property',\n            width: 150,\n        },\n    ];\n    return columns;\n  };\n  \n  export const turkishUnconfirmedResColumns = (handleProcessedClick, handleUnprocessedClick, handleConfirmClick) => {\n    const columns = [\n      {\n        field: 'property',\n        headerName: 'Emlak',\n        width: 150,\n      },\n      { \n        field: 'date', \n        headerName: 'Traih va Saat', \n        width: 150 \n      },\n      {\n        field: 'flightNo',\n        headerName: 'Uçuş No ',\n        width: 150,\n      },\n      {\n        field: 'from',\n        headerName: 'Nerden',\n        width: 150,\n      },\n      {\n        field: 'to',\n        headerName: 'Nereye',\n        width: 150,\n      },\n      {\n        field: 'pax',\n        headerName: 'Pax',\n        width: 120,\n      },\n      {\n        field: 'driverNote',\n        headerName: 'Note/Emlak',\n        width: 150,\n      },\n    ];\n    return columns;\n  };\n\n  export const engOwedUsersColumns = () => {\n    const columns = [\n        {\n            field: 'propertyName',\n            headerName: 'Property',\n            width: 150,\n        },\n        {\n            field: 'firstName',\n            headerName: 'First Name',\n            width: 150,\n        },\n        {\n            field: 'lastName',\n            headerName: 'Last Name',\n            width: 150,\n        },\n        {\n            field: 'email',\n            headerName: 'Email',\n            width: 150,\n        },\n        {\n            field: 'debt',\n            headerName: 'Debt',\n            width: 150,\n        },\n    ];\n    return columns;\n  };\n  \n  export const turkishOwedUsersColumns = (handleProcessedClick, handleUnprocessedClick, handleConfirmClick) => {\n    const columns = [\n      {\n        field: 'propertyName',\n        headerName: 'Emlak',\n        width: 150,\n    },\n    {\n        field: 'firstName',\n        headerName: 'Adi',\n        width: 150,\n    },\n    {\n        field: 'lastName',\n        headerName: 'Soyadi',\n        width: 150,\n    },\n    {\n        field: 'email',\n        headerName: 'Email',\n        width: 150,\n    },\n    {\n        field: 'debt',\n        headerName: 'Borç',\n        width: 150,\n    },\n    ];\n    return columns;\n  };","const ClientHome = (): JSX.Element => {\n    return (\n        <>\n            <div style={{ marginTop: '5em' }}>ClientHome component</div>\n        </>)\n};\n\nexport default ClientHome;","import { MuiThemeProvider } from '@material-ui/core';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ListReservations from './pages/ClientReservations/ListReservations';\nimport ClientPayment from './pages/ClientPayment/ClientPayment';\nimport AddReservation from './pages/ClientReservations/AddReservation/AddReservation';\nimport { AuthProvider } from './context/useAuthContext';\nimport AddClient from './pages/Agency/AddClient/AddClient';\nimport ListClients from './pages/Agency/ListClients/ListClients';\nimport { SnackBarProvider } from './context/useSnackbarContext';\nimport { LanguageProvider } from './context/useLanguageContext';\nimport ListAgencyReservations from './pages/Agency/Reservation/ListAgencyReservations';\nimport AgencyPayments from './pages/Agency/Payments/AgencyPayments';\n\nimport './App.css';\nimport Login from './pages/Login/Login';\nimport Header from './components/Header/Header';\nimport ListDrivers from './pages/Agency/Drivers/ListDrivers/ListDrivers';\nimport AddDriver from './pages/Agency/Drivers/AddDriver/AddDriver';\nimport AgencyHome from './pages/Home/AgencyHome/AgencyHome';\nimport ClientHome from './pages/Home/ClientHome/ClientHome';\n\nfunction App (): JSX.Element {\n    return (\n        <BrowserRouter>\n            <SnackBarProvider>\n                <AuthProvider>\n                    <LanguageProvider>\n                        <Header />\n                            <Switch>\n                                <Route exact path=\"/login\" component={Login} />\n                                <Route exact path=\"/agency-home\" component={AgencyHome} />\n                                <Route exact path=\"/client-home\" component={ClientHome} />\n                                <Route exact path=\"/reservation\" component={ListReservations} />\n                                <Route exact path=\"/payment\" component={ClientPayment} />\n                                <Route exact path=\"/new-reservation\" component={AddReservation} />\n                                <Route exact path=\"/add-client\" component={AddClient} />\n                                <Route exact path=\"/agency-reservation\" component={ListAgencyReservations} />\n                                <Route exact path=\"/agency-payment\" component={AgencyPayments} />\n                                <Route exact path=\"/drivers\" component={ListDrivers} />\n                                <Route exact path=\"/add-driver\" component={AddDriver} />\n                                <Route exact path=\"/clients\" component={ListClients} />\n                            </Switch>\n                        </LanguageProvider>\n                </AuthProvider>\n            </SnackBarProvider>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}