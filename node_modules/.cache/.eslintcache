[{"/home/cisco/airport-shuttle/app/client/src/index.js":"1","/home/cisco/airport-shuttle/app/client/src/App.tsx":"2","/home/cisco/airport-shuttle/app/client/src/pages/Login.tsx":"3","/home/cisco/airport-shuttle/app/client/src/pages/useStyles.ts":"4","/home/cisco/airport-shuttle/app/client/src/pages/LoginForm/LoginForm.tsx":"5","/home/cisco/airport-shuttle/app/client/src/pages/LoginForm/useStyles.ts":"6","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/index.js":"7","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/App.tsx":"8","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx":"9","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/Header.tsx":"10","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/useStyles.ts":"11","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/DataTable/DataTable.tsx":"12","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ClientHeader/ClientHeader.tsx":"13","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/DataTable/useStyles.ts":"14","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ClientHeader/useStyles.ts":"15","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/Login.tsx":"16","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/useStyles.ts":"17","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/LoginForm/LoginForm.tsx":"18","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/LoginForm/useStyles.ts":"19","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/utils/dictionary.js":"20","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/context/useAuthContext.tsx":"21","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/loginWithCookies.ts":"22","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/logout.ts":"23","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/login.ts":"24","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx":"25","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/useStyles.ts":"26","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/AddClient.tsx":"27","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/AddClientForm.tsx":"28","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/useStyles.ts":"29","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/useStyles.ts":"30","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Button/CustomButton.tsx":"31","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Button/useStyles.ts":"32","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/useStyles.ts":"33","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/user.ts":"34","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/context/useSnackbarContext.tsx":"35","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/reservation.ts":"36","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservation.tsx":"37","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/useStyles.ts":"38","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/AddReservationForm.tsx":"39","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/useStyles.ts":"40","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx":"41","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/UpdateReservation/UpdateReservation.tsx":"42","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/CustomDialog/CustomDialog.tsx":"43","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/UpdateReservation/useStyles.ts":"44","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/CustomDialog/useStyles.ts":"45","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/LanguageTab/LanguageTab.tsx":"46","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/LanguageTab/useStyles.ts":"47","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/context/useLanguageContext.tsx":"48","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx":"49","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/agencyReservation.ts":"50","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx":"51","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPayment.tsx":"52","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/useStyles.ts":"53","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx":"54","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/useStyles.ts":"55","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/agencyPayment.ts":"56","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx":"57","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx":"58","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/ListDrivers/ListDrivers.tsx":"59","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/AddDriver.tsx":"60","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/useStyles.ts":"61","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/DriverForm.tsx":"62","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/useStyles.ts":"63","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/UpdateDriver.tsx":"64","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/useStyles.ts":"65","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/driver.ts":"66","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/DeleteDriver.tsx":"67","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/useStyles.ts":"68","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx":"69","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/useStyles.ts":"70","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/DriverDetail.tsx":"71","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/useStyles.ts":"72","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx":"73","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/useStyles.ts":"74","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/UpdateClient/UpdateClient.tsx":"75","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/UpdateClient/useStyles.ts":"76","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Search/Search.tsx":"77","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Search/useStyles.ts":"78","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/utils/dictionary/home.js":"79","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/ClientHome/ClientHome.tsx":"80","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/AgencyHome/AgencyHome.tsx":"81","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/AgencyHome/useStyles.ts":"82","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/Profile/Profile.tsx":"83","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/Profile/useStyles.ts":"84","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx":"85","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/useStyles.ts":"86","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/utils/dictionary/listAgencyReservation.js":"87","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListPassengers.tsx":"88","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/useStyles.ts":"89","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/index.js":"90","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/App.tsx":"91","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useAuthContext.tsx":"92","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useSnackbarContext.tsx":"93","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useLanguageContext.tsx":"94","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx":"95","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx":"96","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservation.tsx":"97","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/Login.tsx":"98","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx":"99","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/AddClient.tsx":"100","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx":"101","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx":"102","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/Header.tsx":"103","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/AddDriver.tsx":"104","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/ListDrivers/ListDrivers.tsx":"105","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Home/AgencyHome/AgencyHome.tsx":"106","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Home/ClientHome/ClientHome.tsx":"107","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/utils/dictionary/listAgencyReservation.js":"108","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/utils/dictionary.js":"109","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/utils/dictionary/home.js":"110","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/useStyles.ts":"111","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/useStyles.ts":"112","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/useStyles.ts":"113","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/ListClients/useStyles.ts":"114","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/useStyles.ts":"115","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/loginWithCookies.ts":"116","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/logout.ts":"117","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/reservation.ts":"118","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/user.ts":"119","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/login.ts":"120","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/agencyReservation.ts":"121","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Home/AgencyHome/useStyles.ts":"122","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/driver.ts":"123","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/useStyles.ts":"124","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/useStyles.ts":"125","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Reservation/ListPassengers.tsx":"126","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/DataTable/DataTable.tsx":"127","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/CustomDialog/CustomDialog.tsx":"128","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/DriverDetail.tsx":"129","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Search/Search.tsx":"130","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/AddReservationForm.tsx":"131","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/LoginForm/LoginForm.tsx":"132","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Button/CustomButton.tsx":"133","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/UpdateClient/UpdateClient.tsx":"134","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/AddClientForm.tsx":"135","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx":"136","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPayment.tsx":"137","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ClientHeader/ClientHeader.tsx":"138","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/DeleteDriver.tsx":"139","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/UpdateDriver.tsx":"140","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/DriverForm.tsx":"141","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx":"142","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx":"143","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx":"144","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Reservation/useStyles.ts":"145","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/DataTable/useStyles.ts":"146","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/CustomDialog/useStyles.ts":"147","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/useStyles.ts":"148","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Search/useStyles.ts":"149","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ClientHeader/useStyles.ts":"150","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/agencyPayment.ts":"151","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/useStyles.ts":"152","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/useStyles.ts":"153","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/useStyles.ts":"154","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/UpdateClient/useStyles.ts":"155","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Button/useStyles.ts":"156","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/LoginForm/useStyles.ts":"157","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/useStyles.ts":"158","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/useStyles.ts":"159","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/useStyles.ts":"160","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/useStyles.ts":"161","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/Profile/Profile.tsx":"162","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/LanguageTab/LanguageTab.tsx":"163","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx":"164","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/LanguageTab/useStyles.ts":"165","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/useStyles.ts":"166","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/Profile/useStyles.ts":"167","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx":"168","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ChangePassword/useStyles.ts":"169","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/AgencyHeader/useStyles.ts":"170","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/axiosConfig.ts":"171","/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Theme.js":"172"},{"size":167,"mtime":1636891292429,"results":"173","hashOfConfig":"174"},{"size":403,"mtime":1636896110839,"results":"175","hashOfConfig":"174"},{"size":1206,"mtime":1637008513287,"results":"176","hashOfConfig":"174"},{"size":591,"mtime":1637007759924,"results":"177","hashOfConfig":"174"},{"size":3489,"mtime":1637008609197,"results":"178","hashOfConfig":"174"},{"size":1393,"mtime":1636997309877,"results":"179","hashOfConfig":"174"},{"size":167,"mtime":1637011457066,"results":"180","hashOfConfig":"181"},{"size":2743,"mtime":1644348412247,"results":"182","hashOfConfig":"181"},{"size":4046,"mtime":1644870550769,"results":"183","hashOfConfig":"181"},{"size":995,"mtime":1645544305742,"results":"184","hashOfConfig":"181"},{"size":352,"mtime":1643199646555,"results":"185","hashOfConfig":"181"},{"size":931,"mtime":1646197568504,"results":"186","hashOfConfig":"181"},{"size":1605,"mtime":1645549422096,"results":"187","hashOfConfig":"181"},{"size":744,"mtime":1646197069360,"results":"188","hashOfConfig":"181"},{"size":405,"mtime":1644686327763,"results":"189","hashOfConfig":"181"},{"size":2146,"mtime":1637784933071,"results":"190","hashOfConfig":"181"},{"size":616,"mtime":1637225094592,"results":"191","hashOfConfig":"181"},{"size":3807,"mtime":1637598721625,"results":"192","hashOfConfig":"181"},{"size":1393,"mtime":1637224651165,"results":"193","hashOfConfig":"181"},{"size":22675,"mtime":1646198071263,"results":"194","hashOfConfig":"181"},{"size":2030,"mtime":1644743823393,"results":"195","hashOfConfig":"181"},{"size":493,"mtime":1637549274676,"results":"196","hashOfConfig":"181"},{"size":476,"mtime":1637548853625,"results":"197","hashOfConfig":"181"},{"size":747,"mtime":1645562269558,"results":"198","hashOfConfig":"181"},{"size":5667,"mtime":1645549460216,"results":"199","hashOfConfig":"181"},{"size":609,"mtime":1645543163251,"results":"200","hashOfConfig":"181"},{"size":2064,"mtime":1643718951157,"results":"201","hashOfConfig":"181"},{"size":16691,"mtime":1643714198450,"results":"202","hashOfConfig":"181"},{"size":408,"mtime":1643718981565,"results":"203","hashOfConfig":"181"},{"size":1452,"mtime":1637692874527,"results":"204","hashOfConfig":"181"},{"size":721,"mtime":1645547622573,"results":"205","hashOfConfig":"181"},{"size":2700,"mtime":1646197547056,"results":"206","hashOfConfig":"181"},{"size":232,"mtime":1644579994226,"results":"207","hashOfConfig":"181"},{"size":1263,"mtime":1645562281278,"results":"208","hashOfConfig":"181"},{"size":1697,"mtime":1637784759907,"results":"209","hashOfConfig":"181"},{"size":1736,"mtime":1644870319457,"results":"210","hashOfConfig":"181"},{"size":2726,"mtime":1643432850745,"results":"211","hashOfConfig":"181"},{"size":391,"mtime":1637895826185,"results":"212","hashOfConfig":"181"},{"size":18626,"mtime":1638448813097,"results":"213","hashOfConfig":"181"},{"size":2116,"mtime":1641661873327,"results":"214","hashOfConfig":"181"},{"size":5764,"mtime":1644161174838,"results":"215","hashOfConfig":"181"},{"size":1754,"mtime":1638180885235,"results":"216","hashOfConfig":"217"},{"size":756,"mtime":1646020936011,"results":"218","hashOfConfig":"181"},{"size":172,"mtime":1638131133311,"results":"219","hashOfConfig":"217"},{"size":294,"mtime":1638547456091,"results":"220","hashOfConfig":"181"},{"size":2217,"mtime":1645543213512,"results":"221","hashOfConfig":"181"},{"size":555,"mtime":1644686861091,"results":"222","hashOfConfig":"181"},{"size":863,"mtime":1644687563652,"results":"223","hashOfConfig":"181"},{"size":5128,"mtime":1646231317806,"results":"224","hashOfConfig":"181"},{"size":2082,"mtime":1644248427608,"results":"225","hashOfConfig":"181"},{"size":4946,"mtime":1644089814297,"results":"226","hashOfConfig":"181"},{"size":2076,"mtime":1644165836519,"results":"227","hashOfConfig":"181"},{"size":359,"mtime":1644165833495,"results":"228","hashOfConfig":"181"},{"size":11025,"mtime":1638564055427,"results":"229","hashOfConfig":"181"},{"size":2116,"mtime":1644166054824,"results":"230","hashOfConfig":"181"},{"size":1245,"mtime":1644868995788,"results":"231","hashOfConfig":"181"},{"size":2430,"mtime":1644005794390,"results":"232","hashOfConfig":"181"},{"size":3967,"mtime":1644235508065,"results":"233","hashOfConfig":"181"},{"size":3434,"mtime":1643296947969,"results":"234","hashOfConfig":"181"},{"size":1730,"mtime":1645544268170,"results":"235","hashOfConfig":"181"},{"size":463,"mtime":1645543727772,"results":"236","hashOfConfig":"181"},{"size":6145,"mtime":1644162205255,"results":"237","hashOfConfig":"181"},{"size":1452,"mtime":1644162381835,"results":"238","hashOfConfig":"181"},{"size":1636,"mtime":1643297196962,"results":"239","hashOfConfig":"181"},{"size":298,"mtime":1643227440204,"results":"240","hashOfConfig":"181"},{"size":976,"mtime":1643290699467,"results":"241","hashOfConfig":"181"},{"size":1963,"mtime":1643294128987,"results":"242","hashOfConfig":"181"},{"size":236,"mtime":1643288709367,"results":"243","hashOfConfig":"181"},{"size":4699,"mtime":1644161033894,"results":"244","hashOfConfig":"181"},{"size":458,"mtime":1643358877386,"results":"245","hashOfConfig":"181"},{"size":895,"mtime":1644161109946,"results":"246","hashOfConfig":"181"},{"size":378,"mtime":1643431316064,"results":"247","hashOfConfig":"181"},{"size":5426,"mtime":1644005754093,"results":"248","hashOfConfig":"181"},{"size":314,"mtime":1643621986482,"results":"249","hashOfConfig":"181"},{"size":1636,"mtime":1643663485471,"results":"250","hashOfConfig":"181"},{"size":374,"mtime":1643660178423,"results":"251","hashOfConfig":"181"},{"size":2487,"mtime":1643885538435,"results":"252","hashOfConfig":"181"},{"size":1420,"mtime":1643882349782,"results":"253","hashOfConfig":"181"},{"size":2965,"mtime":1644250603643,"results":"254","hashOfConfig":"181"},{"size":180,"mtime":1644347871247,"results":"255","hashOfConfig":"181"},{"size":5239,"mtime":1645564051064,"results":"256","hashOfConfig":"181"},{"size":509,"mtime":1644348267822,"results":"257","hashOfConfig":"181"},{"size":2136,"mtime":1645562629336,"results":"258","hashOfConfig":"181"},{"size":555,"mtime":1645548937917,"results":"259","hashOfConfig":"181"},{"size":2995,"mtime":1645562996698,"results":"260","hashOfConfig":"181"},{"size":1021,"mtime":1645560708925,"results":"261","hashOfConfig":"181"},{"size":4016,"mtime":1646230996801,"results":"262","hashOfConfig":"181"},{"size":815,"mtime":1646232289422,"results":"263","hashOfConfig":"181"},{"size":304,"mtime":1646232272122,"results":"264","hashOfConfig":"181"},{"size":167,"mtime":1647260435895,"results":"265","hashOfConfig":"266"},{"size":2743,"mtime":1647260435843,"results":"267","hashOfConfig":"266"},{"size":2030,"mtime":1647316847405,"results":"268","hashOfConfig":"266"},{"size":1697,"mtime":1647260442311,"results":"269","hashOfConfig":"266"},{"size":863,"mtime":1647260442439,"results":"270","hashOfConfig":"266"},{"size":5764,"mtime":1647260436083,"results":"271","hashOfConfig":"266"},{"size":4046,"mtime":1647260435983,"results":"272","hashOfConfig":"266"},{"size":2726,"mtime":1647260436011,"results":"273","hashOfConfig":"266"},{"size":2146,"mtime":1647260435907,"results":"274","hashOfConfig":"266"},{"size":5426,"mtime":1647260441979,"results":"275","hashOfConfig":"266"},{"size":2064,"mtime":1647260439963,"results":"276","hashOfConfig":"266"},{"size":5128,"mtime":1647260436275,"results":"277","hashOfConfig":"266"},{"size":4946,"mtime":1647260441079,"results":"278","hashOfConfig":"266"},{"size":995,"mtime":1647260445375,"results":"279","hashOfConfig":"266"},{"size":1730,"mtime":1647260436347,"results":"280","hashOfConfig":"266"},{"size":3434,"mtime":1647260438719,"results":"281","hashOfConfig":"266"},{"size":5239,"mtime":1647260436183,"results":"282","hashOfConfig":"266"},{"size":180,"mtime":1647260436235,"results":"283","hashOfConfig":"266"},{"size":4016,"mtime":1647260435879,"results":"284","hashOfConfig":"266"},{"size":22675,"mtime":1647260435863,"results":"285","hashOfConfig":"266"},{"size":2965,"mtime":1647260435895,"results":"286","hashOfConfig":"266"},{"size":352,"mtime":1647260436099,"results":"287","hashOfConfig":"266"},{"size":391,"mtime":1647260436067,"results":"288","hashOfConfig":"266"},{"size":616,"mtime":1647260435919,"results":"289","hashOfConfig":"266"},{"size":314,"mtime":1647260442011,"results":"290","hashOfConfig":"266"},{"size":408,"mtime":1647260439967,"results":"291","hashOfConfig":"266"},{"size":497,"mtime":1647350730528,"results":"292","hashOfConfig":"266"},{"size":340,"mtime":1647350738812,"results":"293","hashOfConfig":"266"},{"size":1756,"mtime":1647350757220,"results":"294","hashOfConfig":"266"},{"size":1279,"mtime":1647350778824,"results":"295","hashOfConfig":"266"},{"size":742,"mtime":1647406243539,"results":"296","hashOfConfig":"266"},{"size":2116,"mtime":1647350618412,"results":"297","hashOfConfig":"266"},{"size":509,"mtime":1647260436199,"results":"298","hashOfConfig":"266"},{"size":992,"mtime":1647350640432,"results":"299","hashOfConfig":"266"},{"size":463,"mtime":1647260436363,"results":"300","hashOfConfig":"266"},{"size":232,"mtime":1647260445415,"results":"301","hashOfConfig":"266"},{"size":815,"mtime":1647260436307,"results":"302","hashOfConfig":"266"},{"size":931,"mtime":1647260444535,"results":"303","hashOfConfig":"266"},{"size":756,"mtime":1647260446107,"results":"304","hashOfConfig":"266"},{"size":895,"mtime":1647260437471,"results":"305","hashOfConfig":"266"},{"size":2487,"mtime":1647260445995,"results":"306","hashOfConfig":"266"},{"size":18626,"mtime":1647260436039,"results":"307","hashOfConfig":"266"},{"size":3807,"mtime":1647260435967,"results":"308","hashOfConfig":"266"},{"size":721,"mtime":1647260445883,"results":"309","hashOfConfig":"266"},{"size":1636,"mtime":1647260442103,"results":"310","hashOfConfig":"266"},{"size":16691,"mtime":1647260440795,"results":"311","hashOfConfig":"266"},{"size":4699,"mtime":1647260436471,"results":"312","hashOfConfig":"266"},{"size":2076,"mtime":1647260441331,"results":"313","hashOfConfig":"266"},{"size":3928,"mtime":1647405972066,"results":"314","hashOfConfig":"266"},{"size":1963,"mtime":1647260437983,"results":"315","hashOfConfig":"266"},{"size":1636,"mtime":1647260436399,"results":"316","hashOfConfig":"266"},{"size":6145,"mtime":1647260439627,"results":"317","hashOfConfig":"266"},{"size":8221,"mtime":1647358719313,"results":"318","hashOfConfig":"266"},{"size":3967,"mtime":1647260441867,"results":"319","hashOfConfig":"266"},{"size":2430,"mtime":1647260441635,"results":"320","hashOfConfig":"266"},{"size":304,"mtime":1647260436295,"results":"321","hashOfConfig":"266"},{"size":744,"mtime":1647260444683,"results":"322","hashOfConfig":"266"},{"size":294,"mtime":1647260446163,"results":"323","hashOfConfig":"266"},{"size":378,"mtime":1647260437611,"results":"324","hashOfConfig":"266"},{"size":1420,"mtime":1647260446023,"results":"325","hashOfConfig":"266"},{"size":996,"mtime":1647405180670,"results":"326","hashOfConfig":"266"},{"size":1261,"mtime":1647350550763,"results":"327","hashOfConfig":"266"},{"size":359,"mtime":1647260441403,"results":"328","hashOfConfig":"266"},{"size":458,"mtime":1647260436607,"results":"329","hashOfConfig":"266"},{"size":1452,"mtime":1647260440939,"results":"330","hashOfConfig":"266"},{"size":374,"mtime":1647260442163,"results":"331","hashOfConfig":"266"},{"size":2700,"mtime":1647260445911,"results":"332","hashOfConfig":"266"},{"size":1393,"mtime":1647260435947,"results":"333","hashOfConfig":"266"},{"size":2116,"mtime":1647260436055,"results":"334","hashOfConfig":"266"},{"size":236,"mtime":1647260438219,"results":"335","hashOfConfig":"266"},{"size":298,"mtime":1647260436415,"results":"336","hashOfConfig":"266"},{"size":1452,"mtime":1647260439711,"results":"337","hashOfConfig":"266"},{"size":2136,"mtime":1647260445747,"results":"338","hashOfConfig":"266"},{"size":2217,"mtime":1647260445491,"results":"339","hashOfConfig":"266"},{"size":11025,"mtime":1647260441487,"results":"340","hashOfConfig":"266"},{"size":555,"mtime":1647260445543,"results":"341","hashOfConfig":"266"},{"size":2116,"mtime":1647260441495,"results":"342","hashOfConfig":"266"},{"size":555,"mtime":1647260445787,"results":"343","hashOfConfig":"266"},{"size":2995,"mtime":1647260445623,"results":"344","hashOfConfig":"266"},{"size":1021,"mtime":1647260445659,"results":"345","hashOfConfig":"266"},{"size":1201,"mtime":1647358204499,"results":"346","hashOfConfig":"266"},{"size":123,"mtime":1647316390622,"results":"347","hashOfConfig":"266"},{"size":166,"mtime":1647358094341,"results":"348","hashOfConfig":"266"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"351"},"1xoiu5h",{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"355"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},"12d6ikr",{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"370"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"370"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"370"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"370"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"366"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"370"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"370"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"370"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"370"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"447"},"1br8hon",{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"447"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"370"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"370"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"370"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"370"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"370"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"370"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"370"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"370"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"370"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"370"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"370"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"370"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"366"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"370"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"370"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"370"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"370"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"561"},"15da64k",{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"564"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"564"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"564"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"564"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"564"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"564"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"564"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"564"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"564"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"561"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"561"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"561"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"564"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"564"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"564"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"564"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"564"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"564"},{"filePath":"661","messages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"564"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"564"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"564"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"564"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"703","messages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"564"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"564"},{"filePath":"709","messages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"564"},{"filePath":"711","messages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"564"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"564"},{"filePath":"723","messages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"725"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"561"},"/home/cisco/airport-shuttle/app/client/src/index.js",[],["728","729"],"/home/cisco/airport-shuttle/app/client/src/App.tsx",["730"],"import { MuiThemeProvider } from '@material-ui/core';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\n\nfunction App (): JSX.Element {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/login\" component={Login} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default App;",["731","732"],"/home/cisco/airport-shuttle/app/client/src/pages/Login.tsx",[],"/home/cisco/airport-shuttle/app/client/src/pages/useStyles.ts",[],"/home/cisco/airport-shuttle/app/client/src/pages/LoginForm/LoginForm.tsx",["733"],"/home/cisco/airport-shuttle/app/client/src/pages/LoginForm/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/index.js",[],["734","735"],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/App.tsx",["736"],"import { MuiThemeProvider } from '@material-ui/core';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ListReservations from './pages/ClientReservations/ListReservations';\nimport ClientPayment from './pages/ClientPayment/ClientPayment';\nimport AddReservation from './pages/ClientReservations/AddReservation/AddReservation';\nimport { AuthProvider } from './context/useAuthContext';\nimport AddClient from './pages/Agency/AddClient/AddClient';\nimport ListClients from './pages/Agency/ListClients/ListClients';\nimport { SnackBarProvider } from './context/useSnackbarContext';\nimport { LanguageProvider } from './context/useLanguageContext';\nimport ListAgencyReservations from './pages/Agency/Reservation/ListAgencyReservations';\nimport AgencyPayments from './pages/Agency/Payments/AgencyPayments';\n\nimport './App.css';\nimport Login from './pages/Login/Login';\nimport Header from './components/Header/Header';\nimport ListDrivers from './pages/Agency/Drivers/ListDrivers/ListDrivers';\nimport AddDriver from './pages/Agency/Drivers/AddDriver/AddDriver';\nimport AgencyHome from './pages/Home/AgencyHome/AgencyHome';\nimport ClientHome from './pages/Home/ClientHome/ClientHome';\n\nfunction App (): JSX.Element {\n    return (\n        <BrowserRouter>\n            <SnackBarProvider>\n                <AuthProvider>\n                    <LanguageProvider>\n                        <Header />\n                            <Switch>\n                                <Route exact path=\"/login\" component={Login} />\n                                <Route exact path=\"/agency-home\" component={AgencyHome} />\n                                <Route exact path=\"/client-home\" component={ClientHome} />\n                                <Route exact path=\"/reservation\" component={ListReservations} />\n                                <Route exact path=\"/payment\" component={ClientPayment} />\n                                <Route exact path=\"/new-reservation\" component={AddReservation} />\n                                <Route exact path=\"/add-client\" component={AddClient} />\n                                <Route exact path=\"/agency-reservation\" component={ListAgencyReservations} />\n                                <Route exact path=\"/agency-payment\" component={AgencyPayments} />\n                                <Route exact path=\"/drivers\" component={ListDrivers} />\n                                <Route exact path=\"/add-driver\" component={AddDriver} />\n                                <Route exact path=\"/clients\" component={ListClients} />\n                            </Switch>\n                        </LanguageProvider>\n                </AuthProvider>\n            </SnackBarProvider>\n        </BrowserRouter>\n    )\n}\n\nexport default App;",["737","738"],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx",["739","740","741"],"import {  Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport { format } from 'date-fns';\nimport { detailsEngColumns, detailsTurksihColumns } from '../../utils/dictionary';\nimport Search from '../../components/Search/Search';\nimport { getMyDetailsStat } from '../../helpers/APICalls/reservation';\nimport { useAuth } from '../../context/useAuthContext';\n\ninterface Props {\n    clientId: string;\n    debt: number;\n};\n\ninterface Total {\n    id: number;\n    totalReservationsCost?: number;\n    paymentTotal?: number;\n    currency?: string;\n    debt: number;\n    status?: string;\n}\n\nfunction ClientPayment({ clientId, debt }: Props): JSX.Element {\n    const { language } = useLanguage();\n    const { loggedInUser } = useAuth();\n    const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n    const [detailsRows, setDetailsRows] = useState<any>([]);\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [from, setFrom] = useState(new Date());\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n\n    const totalReservationsCost = useRef(0);\n    const paymentTotal = useRef(0);\n    const totalsRows = useRef<Total[]>([{id: 10000200, totalReservationsCost: 0, paymentTotal: 0, debt: debt, status: 'total'}]); \n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    useEffect(() => {\n        const clientId = loggedInUser?.id;\n        getMyDetailsStat(clientId, from, to).then((data) => {\n                let idx = 0;\n                if (data.error) {\n                    console.log(data.error)\n                } else if (data.success) {\n                    data.success.reservations.map((reservation) => {\n                        reservation.id = idx + 1;\n                        reservation.status = 'reservation'\n                        const date = new Date(reservation.selectedDate);\n                        reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        totalReservationsCost.current +=  (reservation.cost ? reservation.cost : 0);\n                        idx ++;\n                        });\n                    data.success.payments.map((item) => {\n                        item.id = idx + 1;\n                        item.property = item.client?.property;\n                        item.status = 'payment'\n                        const date = new Date(item.createdAt ? item.createdAt : new Date());\n                        item.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        paymentTotal.current += item.paidInTL;\n                        idx++\n                    });\n                    totalsRows.current[0].totalReservationsCost = totalReservationsCost.current;\n                    totalsRows.current[0].paymentTotal = paymentTotal.current;\n                    totalsRows.current[0].debt = totalReservationsCost.current - paymentTotal.current;  \n                    setDetailsRows([...data.success.reservations, ...data.success.payments, ...totalsRows.current]\n                    .sort(function(a, b) {return parseFloat(a.date) - parseFloat(b.date)}));                    \n                 \n                } else {\n                    console.log('External Error, please try again Later!')\n                }\n            });\n            return () => {\n                totalReservationsCost.current = 0;\n                paymentTotal.current = 0;\n                setDetailsRows([]);\n            }\n    }, [useEffectTrigger]);\n    \n    return (\n        <>  \n            <Box display='flex' flexDirection='column'>\n                <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n                <DataTable rows={detailsRows} columns={detailsColumns} />\n            </Box>\n        </>\n    )\n}\nexport default ClientPayment","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/Header.tsx",["742"],"import ClientHeader from './ClientHeader/ClientHeader';\nimport AgencyHeader from './AgencyHeader/AgencyHeader';\nimport useStyles from './useStyles';\nimport { useAuth } from '../../context/useAuthContext';\nimport { AppBar, Box, Toolbar } from '@material-ui/core';\nimport LanguageTab from './LanguageTab/LanguageTab';\n\n\nfunction Header(): JSX.Element {\n    const { loggedInUser } = useAuth();\n    const classes = useStyles();\n\n    return (\n        <Box> \n            <AppBar position=\"static\" className={classes.root}>\n                <Toolbar>\n                    {!loggedInUser ? null\n                    :loggedInUser?.role === 'client' ?\n                        <Box>\n                            <ClientHeader />  \n                        </Box>\n                    :\n                        <Box>\n                            <AgencyHeader />  \n                        </Box>\n                    }\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Header;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/DataTable/DataTable.tsx",["743"],"import useStyles from './useStyles';\nimport { DataGrid, GridColumns, GridRowData, GridToolbar } from '@material-ui/data-grid';\nimport { Box } from '@material-ui/core';\nimport { useState } from 'react';\nimport clsx from 'clsx';\n\ninterface Props {  \n    rows: GridRowData[];\n    columns: GridColumns;\n}\nexport default function DataTable({ rows, columns }: Props): JSX.Element {\n    const { root, row, columnHeader } = useStyles();\n    \n    return (\n      <Box className={root}>\n        <DataGrid\n            components={{ Toolbar: GridToolbar }}\n            rows={rows}\n            columns={columns}\n            pageSize={10}\n            rowHeight={100}\n            disableSelectionOnClick\n            disableColumnMenu={true}\n            disableDensitySelector={true}\n            getRowClassName={(params) => `${clsx(row, params.row.status)}`}\n            classes={{ columnHeader: columnHeader }}\n        />\n      </Box>\n    );\n  }\n","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ClientHeader/ClientHeader.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/DataTable/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ClientHeader/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/Login.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/LoginForm/LoginForm.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/LoginForm/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/utils/dictionary.js",["744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766"],"import { Box } from '@material-ui/core';\nimport CustomButton from '../components/Button/CustomButton';\n\nexport const NewReservationDictionary = {\n    engPage: {\n        title: 'add reservation',\n        form: {\n            type: 'type',\n            from: 'from',\n            to: 'to',\n            pax: 'pax',\n            property: 'property',\n            fullName: 'full name',\n            passenger: 'passenger',\n            driverNote: 'driver note',\n            flightNo: 'flight no',\n            selectedDate: 'date and time of arrivale'\n        }\n    },\n    turkishPage: {\n        title: 'rezervasyon ekle',\n        form: {\n            type: 'tip',\n            from: 'nerden',\n            to: 'nereye',\n            pax: 'pax',\n            property: 'emlak',\n            fullName: 'ad soyad',\n            passenger: 'yolcu',\n            driverNote: 'sürücü notu',\n            flightNo: 'uçuş no',\n            selectedDate: 'variş tarihi ve saatı'\n        }\n    }\n};\n\nexport const tabsDictionary = {\n    englishTabs : [\n        // { label: 'Home', to: '/client-home' },\n        { label: 'new reservation', to: '/new-reservation' },\n        { label: 'reservations', to: '/reservation' },\n        { label: 'payments', to: '/payment' }\n    ],\n    turkishTabs : [\n        // { label: 'Home', to: '/client-home' },\n        { label: 'yeni rezervasyon', to: '/new-reservation' },\n        { label: 'rezervasyonlar', to: '/reservation' },\n        { label: 'finans', to: '/payment' }\n    ]\n};\n\nexport const clientPaymentDictionary = {\n    engColumns:  [\n        { \n          field: 'createdAt', \n          headerName: 'Date', \n          width: 150 \n        },\n        {\n          field: 'type',\n          headerName: 'Type',\n          width: 150,\n        },\n        {\n          field: 'paid',\n          headerName: 'Paid',\n          width: 150,\n        },\n        {\n          field: 'currency',\n          headerName: 'Currency',\n          width: 150,\n        },\n        {\n          field: 'paidInTL',\n          headerName: 'Paid In TL',\n          width: 150,\n        },\n        { \n          field: 'time', \n          headerName: 'Time', \n          width: 150,\n        },\n        {\n          field: 'debt',\n          headerName: 'Debt',\n          width: 150,\n        },\n        {\n          field: 'note',\n          headerName: 'Note',\n          width: 400,\n        },\n    ],\n    \n    turksihColumns: [\n      { \n        field: 'createdAt', \n        headerName: 'Tarih', \n        width: 150 \n      },\n      {\n        field: 'type',\n        headerName: 'Tip',\n        width: 150,\n      },\n      {\n        field: 'paid',\n        headerName: 'Ödenen para ',\n        width: 150,\n      },\n      {\n        field: 'currency',\n        headerName: 'Parabirimi',\n        width: 150,\n      },\n      {\n        field: 'paidInTL',\n        headerName: 'TL Olarak',\n        width: 150,\n      },\n      {\n        field: 'debt',\n        headerName: 'Borç',\n        width: 150,\n      },\n      {\n        field: 'note',\n        headerName: 'Note',\n        width: 400,\n      },\n    ]\n};\n\nexport const engColumn = (handleEditClick, handleCancelClick, handleDriverDetails) => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Date and Time', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Flight No',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'From',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'To',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/property',\n      width: 150,\n    },\n    {\n      field: 'cost',\n      headerName: 'Cost',\n      width: 150,\n    },\n    {\n      field: \"Driver\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={!cellValues.row.confirmed}\n            style=\"driverDetails\"\n            btnText=\"Details\"\n            onClick={() => handleDriverDetails(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Edit\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"edit\"\n            btnText=\"edit\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Cancel\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"delete\"\n            btnText=\"Cancel\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const turksihColumns = (handleEditClick, handleCancelClick, handleDriverDetails) => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Traih va Saat', \n      width: 200 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Uçuş No ',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'Nerden',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'Nereye',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/Emlak',\n      width: 150,\n    },\n    {\n      field: 'cost',\n      headerName: 'Ücret',\n      width: 150,\n    },\n    {\n      field: \"Sürücü\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={!cellValues.row.confirmed}\n            style=\"driverDetails\"\n            btnText=\"Detay\"\n            onClick={() => handleDriverDetails(cellValues)}\n        />\n        );\n      }\n    },\n    {\n      field: \"Düzenle\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"edit\"\n            btnText=\"Düzenle\"\n            onClick={() => handleEditClick(cellValues)}\n        />\n        );\n      }\n    },\n    {\n      field: \"Iptal\",\n      width: 150,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            disabled={cellValues.row.confirmed}\n            style=\"delete\"\n            btnText=\"Iptal\"\n            onClick={() => handleCancelClick(cellValues)}\n        />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const agencyPaymentEngColumns = (handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) => {\n  const columns = [\n    {\n      field: 'propertyName',\n      headerName: 'Property',\n      width: 200,\n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 275,\n    },\n    {\n      field: 'debt',\n      headerName: 'Debt in TL',\n      width: 150,\n    },\n    {\n      field: \"Add Payment\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"addPayment\"\n            btnText=\"add payment\"\n            onClick={() => handleAddPaymentClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"All Payments\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"allPayments\"\n            btnText=\"all payments\"\n            onClick={() => handleAllPaymentsClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Details\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"details\"\n            btnText=\"details\"\n            onClick={() => handleDetailsClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const agencyPaymentTurkishColumns = (handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 200,\n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 275,\n    },\n    {\n      field: 'debt',\n      headerName: 'Borç TL olarak',\n      width: 150,\n    },\n    {\n      field: \"Ödeme Ekle\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"addPayment\"\n            btnText=\"Ödeme ekle\"\n            onClick={() => handleAddPaymentClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Ödemeler\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"allPayments\"\n            btnText=\"Ödemeler\"\n            onClick={() => handleAllPaymentsClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Detaylar\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"details\"\n            btnText=\"detaylar\"\n            onClick={() => handleDetailsClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const agencyPaymentPage = {\n  engPage : {\n    title: 'add payment',\n    form: {\n      type: 'type',\n      paid: 'paid',\n      currency: 'currency',\n      note: 'note',\n      exchangeRate: 'exchange rate',\n      paidInTL: 'paid in TL'\n    }\n  },\n  turkishPage: {\n    title: 'ödeme ekle ',\n    form: {\n      type: 'tip',\n      paid: 'ödenmiş',\n      currency: 'para birimi',\n      note: 'not',\n      exchangeRate: 'Döviz kuru',\n      paidInTL: 'TL olarak ödendi'\n    }\n  }\n};\n\nexport const agencyListPaymentEngColumns = (handleCancelClick) => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Property',\n      width: 200,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Date of Payment',\n      width: 275,\n    },\n    {\n      field: 'paid',\n      headerName: 'Paid',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Currency',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Exchange Rate',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'Paid in TL',\n      width: 150,\n    },\n    {\n      field: \"Cancel\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Cancel\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const agencyListPaymentTurkishColumns = (handleCancelClick) => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 200,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'ödeme Tarihi',\n      width: 275,\n    },\n    {\n      field: 'paid',\n      headerName: 'ödeme',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi ',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Döviz Kuru',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'TL Olarak ödenen',\n      width: 150,\n    },\n    {\n      field: \"Iptal\",\n      width: 225,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Iptal\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    },\n  ];\n  return columns;\n};\n\nexport const reservationDetailsEngColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Date and Time', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Flight No',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'From',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'To',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/property',\n      width: 200,\n    },\n    {\n      field: 'property',\n      headerName: 'Property',\n      width: 225,\n    },\n  ];\n  return columns;\n};\n\nexport const reservationDetailsTurksihColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Traih va Saat', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Uçuş No ',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'Nerden',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'Nereye',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/Emlak',\n      width: 200,\n    },\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 225,\n    },\n  ];\n  return columns;\n};\n\nexport const detailsEngColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Date and Time', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Flight No',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'From',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'To',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/property',\n      width: 200,\n    },\n    {\n      field: 'cost',\n      headerName: 'Cost',\n      width: 225,\n    },\n    {\n      field: 'paid',\n      headerName: 'Paid',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Currency',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Exchange Rate',\n      width: 150,\n    },\n    {\n      field: 'totalReservationsCost',\n      headerName: 'Total Cost',\n      width: 150,\n    },\n    {\n      field: 'paymentTotal',\n      headerName: 'Paid in TL',\n      width: 150,\n    },\n    {\n      field: 'debt',\n      headerName: 'Remaining Amount In TL',\n      width: 150,\n    },\n  ];\n  return columns;\n};\n\nexport const detailsTurksihColumns = () => {\n  const columns = [\n    { \n      field: 'date', \n      headerName: 'Traih va Saat', \n      width: 300 \n    },\n    {\n      field: 'flightNo',\n      headerName: 'Uçuş No ',\n      width: 150,\n    },\n    {\n      field: 'from',\n      headerName: 'Nerden',\n      width: 150,\n    },\n    {\n      field: 'to',\n      headerName: 'Nereye',\n      width: 150,\n    },\n    {\n      field: 'pax',\n      headerName: 'Pax',\n      width: 120,\n    },\n    {\n      field: 'driverNote',\n      headerName: 'Note/Emlak',\n      width: 200,\n    },\n    {\n      field: 'cost',\n      headerName: 'Ucret',\n      width: 225,\n    },\n    {\n      field: 'paid',\n      headerName: 'ödeme',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi ',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Döviz Kuru',\n      width: 150,\n    },\n    {\n      field: 'totalReservationsCost',\n      headerName: 'Toplam Tutar ',\n      width: 150,\n    },\n    {\n      field: 'paymentTotal',\n      headerName: 'TL Olarak ödendi',\n      width: 150,\n    },\n    {\n      field: 'debt',\n      headerName: 'Borç',\n      width: 150,\n    },\n  ];\n  return columns;\n};\n\nexport const paymentDetailsEngColumns = () => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Property',\n      width: 300,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Date of Payment',\n      width: 350,\n    },\n    {\n      field: 'paid',\n      headerName: 'Paid',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Currency',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Exchange Rate',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'Paid in TL',\n      width: 190,\n    },\n  ];\n  return columns;\n};\n\nexport const paymentDetailsTurkishColumns = () => {\n  const columns = [\n    {\n      field: 'property',\n      headerName: 'Emlak',\n      width: 300,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'ödeme Tarihi',\n      width: 350,\n    },\n    {\n      field: 'paid',\n      headerName: 'ödeme',\n      width: 150,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi ',\n      width: 150,\n    },\n    {\n      field: 'exchangeRate',\n      headerName: 'Döviz Kuru',\n      width: 150,\n    },\n    {\n      field: 'paidInTL',\n      headerName: 'TL Olarak ödenen',\n      width: 190,\n    },\n  ];\n  return columns;\n};\n\n\nexport const totalDetailsEngColumns = () => {\n  const columns = [\n    {\n      field: 'reservationTotal',\n      headerName: 'Total Amount Of Reservations',\n      width: 350,\n    },\n    {\n      field: 'paymentTotal',\n      headerName: 'Total Amount Paid',\n      width: 350,\n    },\n    {\n      field: 'currency',\n      headerName: 'currency',\n      width: 240,\n    },\n    {\n      field: 'debt',\n      headerName: 'Remaining Amount In TL',\n      width: 350,\n    },\n  ];\n  return columns;\n};\n\nexport const totalDetailsTurkishColumns = () => {\n  const columns = [\n    {\n      field: 'reservationsTotal',\n      headerName: 'Toplam Rezervasyon Tutarı',\n      width: 350,\n    },\n    {\n      field: 'paymentsTotal',\n      headerName: 'Toplamda ödenen miktar ',\n      width: 350,\n    },\n    {\n      field: 'currency',\n      headerName: 'Para Birimi',\n      width: 240,\n    },\n    {\n      field: 'debt',\n      headerName: 'TL Olarak Kalan Tutar  ',\n      width: 350,\n    },\n  ];\n  return columns;\n};\n\nexport const engTabs =\n  [\n    { label: 'Confirmed', value: '1' },\n    { label: 'Pending Confirmation', value: '2' }\n  ]\n  export const turkishTabs = \n  [ \n    { label: 'Onaylanmış', value: '1' },\n    { label: 'Onay Bekleniyor ', value: '2' }\n  ]\n\nexport const engDriverColumn = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'name', \n      headerName: 'First Name', \n      width: 150 \n    },\n    { \n      field: 'phoneNumber',\n      headerName: 'Cep', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 300,\n    },\n    {\n      field: 'carNumber',\n      headerName: 'Car No',\n      width: 150,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Joining Date',\n      width: 200,\n    },\n    {\n      field: \"Edit\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"edit\"\n            btnText=\"edit\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Cancel\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Cancel\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const turksihDriverColumns = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'name', \n      headerName: 'Adı', \n      width: 150 \n    },\n    { \n      field: 'phoneNumber', \n      headerName: 'Cep', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 300,\n    },\n    {\n      field: 'carNumner',\n      headerName: 'Arac No',\n      width: 150,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Katılma Tarihi ',\n      width: 200,\n    },\n    {\n      field: \"Düzenle\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n          style=\"edit\"\n          btnText=\"Düzenle\"\n          onClick={() => handleEditClick(cellValues)}\n        />\n        );\n      }\n    },\n    {\n      field: \"Iptal\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n          style=\"delete\"\n          btnText=\"Iptal\"\n          onClick={() => handleCancelClick(cellValues)}\n        />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\n\nexport const engClientColumn = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'propertyName', \n      headerName: 'Property', \n      width: 150 \n    },\n    { \n      field: 'businessType',\n      headerName: 'Type', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 250,\n    },\n    {\n      field: 'address',\n      headerName: 'Address',\n      width: 250,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Joining Date',\n      width: 200,\n    },\n    {\n      field: \"Edit\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"edit\"\n            btnText=\"edit\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Delete\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Delete\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const turkishClientColumn = (handleEditClick, handleCancelClick) => {\n  const columns = [\n    { \n      field: 'propertyName', \n      headerName: 'Emlak', \n      width: 150 \n    },\n    { \n      field: 'businessType',\n      headerName: 'Tip', \n      width: 150 \n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 250,\n    },\n    {\n      field: 'address',\n      headerName: 'Address',\n      width: 250,\n    },\n    {\n      field: 'createdAt',\n      headerName: 'Katılma Tarihi',\n      width: 200,\n    },\n    {\n      field: \"Düzenle\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"edit\"\n            btnText=\"Düzenle\"\n            onClick={() => handleEditClick(cellValues)}\n          />\n        );\n      }\n    },\n    {\n      field: \"Sil\",\n      width: 175,\n      renderCell: (cellValues) => {\n        return (\n          <CustomButton\n            style=\"delete\"\n            btnText=\"Sil\"\n            onClick={() => handleCancelClick(cellValues)}\n          />\n        );\n      }\n    }\n  ];\n  return columns;\n};\n\nexport const addClientFormlanguage = {\n  eng: {\n      firstName: 'FirstName',\n      lastName: 'lastName',\n      email: 'Email',\n      propertyName: 'Property Name',\n      businessType: 'Business Type',\n      address: 'Address',\n      istCostTitle: 'ist airport cost in TL',\n      sawCostTitle: 'Saw airport cost in TL'\n  },\n  turkish: {\n      firstName: 'Isim',\n      lastName: 'Soyisim',\n      email: 'Email',\n      propertyName: 'Emlak Adı',\n      businessType: 'İşyeri Tipi',\n      address: 'Address',\n      istCostTitle: 'ist airport maliyeti TL olarak',\n      sawCostTitle: 'SAW airport maliyeti TL olarak'\n      \n  }\n};","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/context/useAuthContext.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/loginWithCookies.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/logout.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/login.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx",["767"],"import { useState } from 'react';  \nimport useStyles from './useStyles';\nimport { Tabs, Tab, Grid, Menu, MenuItem, Button } from '@material-ui/core';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';  \nimport LanguageTab from '../LanguageTab/LanguageTab';\nimport Profile from '../Profile/Profile';\n\nfunction AgencyHeader(): JSX.Element {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [anchorCleitnEl, setAnchorCleitnEl] = useState<null | HTMLElement>(null);\n    const [open, setOpen] = useState<boolean>(false);\n    const [openClient, setOpenClient] = useState<boolean>(false);\n    \n    const { language } = useLanguage();\n    const history = useHistory();\n\n    let tabs = [];\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false)\n    };\n\n    const handleClientClose = () => {\n        setAnchorCleitnEl(null);\n        setOpenClient(false);\n    };\n\n    const handleClick = (event: any, url: string) => {\n        history.push(url);\n        setOpen(false);\n        setOpenClient(false);\n    };\n\n    const handleClickMenu = (event: any, setAnchorFunc: (event: any) => void, setOpenFunc: (value: boolean) => void) => {\n        setAnchorFunc(event.currentTarget);\n        setOpenFunc(true)\n    };\n\n    const AgencyTabsDictionary = {\n        englishTabs : [\n            { label: 'Home', handleClick: (event: any) => handleClick(event, '/agency-home') },\n            { label: 'clients ', handleClick: (event: any) => handleClickMenu(event, setAnchorCleitnEl, setOpenClient) },\n            { label: 'reservations', handleClick: (event: any) => handleClick(event, '/agency-reservation') },\n            { label: 'payments', handleClick: (event: any) => handleClick(event, '/agency-payment') },\n            { label: 'dirvers',  handleClick: (event: any) => handleClickMenu(event, setAnchorEl, setOpen) }\n        ],\n        turkishTabs : [\n            { label: 'Home', handleClick: (event: any) => handleClick(event, '/agency-home') },\n            { label: 'müşteriler ', handleClick: (event: any) => handleClickMenu(event, setAnchorCleitnEl, setOpenClient) },\n            { label: 'rezervasyonlar', handleClick: (event: any) => handleClick(event, '/agency-reservation') },\n            { label: 'finans', handleClick: (event: any) => handleClick(event, '/agency-payment') },\n            { label: 'sürücüler', handleClick: (event: any) => handleClickMenu(event, setAnchorEl, setOpen)}\n        ]\n      };\n\n    const menus = [\n        {\n            anchorEl: anchorEl, open: open, onClose: handleClose, \n            options: [\n                { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', handleClick: (event: any) => handleClick(event, 'drivers') },\n                { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', handleClick: (event: any) => handleClick(event, 'add-driver') }\n            ]\n        },\n        {\n            anchorEl: anchorCleitnEl, open: openClient, onClose: handleClientClose, \n            options: [\n                { label: language === 'eng' ? 'All Clients' : 'Müşteriler', handleClick: (event: any) => handleClick(event, 'clients')},\n                { label: language === 'eng' ? 'Add Client' : 'Müşteri Ekle', handleClick: (event: any) => handleClick(event, 'add-client') }\n            ],\n        }  \n    ];\n\n    const { englishTabs,  turkishTabs } = AgencyTabsDictionary;\n    \n    function tabFormation() {\n        if (language === 'tr') tabs = turkishTabs;\n        else tabs = englishTabs;\n        return tabs.map(({ label, handleClick }, idx) => (\n            <Tab\n                key={idx}\n                label={label}\n                onClick={handleClick}\n                className={classes.tabs}\n            />\n        ));\n    };\n\n    return (\n        <Grid container className={classes.root} >\n            <Grid item>\n                <Tabs\n                    aria-label=\"wrapped label tabs example\"\n                    TabIndicatorProps={{\n                        style: {\n                            display: \"none\",\n                        },\n                    }}\n                >\n                    {tabFormation()}\n                </Tabs>\n                {\n                    menus.map(({ anchorEl, open, onClose, options }) => (\n                        <>\n                            <Menu\n                                id=\"lock-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={onClose}\n                                classes={{ paper: classes.menu }}\n                                MenuListProps={{\n                                'aria-labelledby': 'lock-button',\n                                role: 'listbox',\n                                }}\n                            >\n                                {options.map(({label, handleClick}, idx) => (\n                                <MenuItem\n                                    key={idx}\n                                    onClick={handleClick}\n                                >\n                                    {label}\n                                </MenuItem>\n                                ))}\n                            </Menu>\n                        </>\n                    ))\n                }\n            </Grid>\n            <Grid item className={classes.gridItem}>\n                <Grid container>\n                    <LanguageTab />\n                    <Profile />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AgencyHeader;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/AddClient.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/AddClientForm.tsx",["768"],"import { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport { Grid, InputLabel, TextField, Select, MenuItem, Typography } from '@material-ui/core';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport { Client } from '../../../../interface/Client';\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\nimport { addClientFormlanguage } from '../../../../utils/dictionary';\n\ninterface Props {\n    handleSubmit: (inputs: Client) => void;\n    values: Client\n}\n\nfunction AddClientForm( { handleSubmit, values } : Props): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n\n    const { firstName, lastName, email, propertyName, businessType, address, istCostTitle, sawCostTitle } =  \n        language === 'tr' ? addClientFormlanguage.turkish : addClientFormlanguage.eng;\n\n\n    return (\n       <>\n        <Formik\n            initialValues={{\n                email: values.email,\n                firstName: values.firstName,\n                lastName: values.lastName,\n                businessType: values.businessType,\n                address: values.address,\n                role: 'client',\n                propertyName: values.propertyName,\n                IstAirportMaxFourPaxCost: values.IstAirportMaxFourPaxCost,\n                IstAirportMaxSixPaxCost: values.IstAirportMaxSixPaxCost,\n                IstAirportMaxTenPaxCost: values.IstAirportMaxTenPaxCost,\n                SawAirportMaxFourPaxCost: values.SawAirportMaxFourPaxCost,\n                SawAirportMaxSixPaxCost: values.SawAirportMaxSixPaxCost,\n                SawAirportMaxTenPaxCost: values.SawAirportMaxTenPaxCost,\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Invalid Email Address').required('Please Enter Email Address'),\n                firstName: Yup.string().required('This field can not be blank'),\n                lastName: Yup.string().required('This field can not be blank'),\n                propertyName: Yup.string().required('This field can not be blank'),\n                address: Yup.string().required('This field can not be blank'),\n                role: Yup.string(),\n                businessType: Yup.string().required('This field can not be blank'),\n                IstAirportMaxFourPaxCost: Yup.number().min(0).required('Please enter the cost for (1 - 4) Pax'),\n                IstAirportMaxSixPaxCost: Yup.number().min(0).required('Please enter the cost for (4 - 6) Pax'),\n                IstAirportMaxTenPaxCost: Yup.number().min(0).required('Please enter the cost for (6 - 10) Pax'),\n                SawAirportMaxFourPaxCost: Yup.number().min(0).required('Please enter the cost for (1 - 4) Pax'),\n                SawAirportMaxSixPaxCost: Yup.number().min(0).required('Please enter the cost for (4 - 6) Pax'),\n                SawAirportMaxTenPaxCost: Yup.number().min(0).required('Please enter the cost for (6 - 10) Pax'),\n            })} \n            onSubmit={(values) => {handleSubmit(values)}}\n\n        >\n            {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <Form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {firstName}\n                                </InputLabel>\n                                <TextField\n                                    id=\"firstName\"\n                                    name=\"firstName\"\n                                    value={values.firstName}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.firstName)}\n                                    helperText={errors.firstName}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {lastName}\n                                </InputLabel>\n                                <TextField\n                                    id=\"lastName\"\n                                    name=\"lastName\"\n                                    value={values.lastName}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.lastName)}\n                                    helperText={errors.lastName}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }} \n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {email}\n                                </InputLabel>\n                                <TextField\n                                    id=\"email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.email)}\n                                    helperText={errors.email}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {businessType}\n                                </InputLabel>\n                                <Select\n                                    id=\"businessType\"\n                                    name=\"businessType\"\n                                    autoWidth\n                                    MenuProps={{\n                                        anchorOrigin: {\n                                            vertical: \"bottom\",\n                                            horizontal: \"left\"\n                                        },\n                                        transformOrigin: {\n                                            vertical: \"top\",\n                                            horizontal: \"left\"\n                                        },\n                                        getContentAnchorEl: null\n                                    }}\n                                    value={values.businessType}\n                                    onChange={handleChange}\n                                    classes={{ select: classes.select }}\n                                >\n                                    <MenuItem value={'hotel'}>Hotel</MenuItem>\n                                    <MenuItem value={'restaurant'}>Restaurant</MenuItem>\n                                    <MenuItem value={'other'}>Other</MenuItem>\n                                </Select>\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\">\n                        <Grid item>\n                                <InputLabel className={classes.label}>\n                                        {propertyName}\n                                </InputLabel>\n                                <TextField\n                                    id=\"propertyName\"\n                                    name=\"propertyName\"\n                                    value={values.propertyName}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.propertyName)}\n                                    fullWidth\n                                    helperText={errors.propertyName}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                        {address}\n                                </InputLabel>\n                                <TextField\n                                    id=\"address\"\n                                    name=\"address\"\n                                    value={values.address}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.address)}\n                                    fullWidth\n                                    helperText={errors.address}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Typography align=\"center\" className={classes.typography}>\n                            {istCostTitle}\n                        </Typography>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                     (1-4) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"IstAirportMaxFourPaxCost\"\n                                    name=\"IstAirportMaxFourPaxCost\"\n                                    value={values.IstAirportMaxFourPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.IstAirportMaxFourPaxCost)}\n                                    helperText={errors.IstAirportMaxFourPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (4-6) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"IstAirportMaxSixPaxCost\"\n                                    name=\"IstAirportMaxSixPaxCost\"\n                                    value={values.IstAirportMaxSixPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.IstAirportMaxSixPaxCost)}\n                                    helperText={errors.IstAirportMaxSixPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (6-10) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"IstAirportMaxTenPaxCost\"\n                                    name=\"IstAirportMaxTenPaxCost\"\n                                    value={values.IstAirportMaxTenPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.IstAirportMaxTenPaxCost)}\n                                    helperText={errors.IstAirportMaxTenPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Typography align=\"center\" className={classes.typography}>\n                            {sawCostTitle}\n                        </Typography>\n                        <Grid item container justify=\"space-evenly\">\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                     (1-4) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"SawAirportMaxFourPaxCost\"\n                                    name=\"SawAirportMaxFourPaxCost\"\n                                    value={values.SawAirportMaxFourPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.SawAirportMaxFourPaxCost)}\n                                    helperText={errors.SawAirportMaxFourPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (4-6) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"SawAirportMaxSixPaxCost\"\n                                    name=\"SawAirportMaxSixPaxCost\"\n                                    value={values.SawAirportMaxSixPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.SawAirportMaxSixPaxCost)}\n                                    helperText={errors.SawAirportMaxSixPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={2} lg={2}>\n                                <InputLabel className={classes.label}>\n                                    (6-10) pax\n                                </InputLabel>\n                                <TextField\n                                    id=\"SawAirportMaxTenPaxCost\"\n                                    name=\"SawAirportMaxTenPaxCost\"\n                                    value={values.SawAirportMaxTenPaxCost}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.SawAirportMaxTenPaxCost)}\n                                    helperText={errors.SawAirportMaxTenPaxCost}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justifyContent='center'>\n                            <CustomButton style=\"submit\" btnText='submit'/>\n                        </Grid>\n                    </Grid>\n                </Form> \n            )}\n        </Formik>\n       </>\n    )\n};\n\nexport default AddClientForm;\n\n","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Button/CustomButton.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Button/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/user.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/context/useSnackbarContext.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/reservation.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservation.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/AddReservationForm.tsx",["769"],"import { Formik, FieldArray, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\nimport { FormValues, FormLabels } from '../../../../interface/Reservation';\nimport CustomButton from '../../../../components/Button/CustomButton';\n\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n    MuiPickersUtilsProvider,\n    DateTimePicker\n  } from '@material-ui/pickers';\n\nimport { \n        Box, \n        InputLabel, \n        TextField, \n        Grid, \n        Select, \n        MenuItem,  \n        FormHelperText } from '@material-ui/core';\n\nconst airports = [\n    { value: 'IST airport', name: 'Istanbul Airport' }, \n    { value: 'SAW airport', name:'Sabiha Airport' },\n ];\nconst resorts = [\n    { value: 'SultanAhmet', name: 'SultanAhmet' },\n    { value: 'Sirkeci', name: 'Sirkeci' },\n    { value: 'Taksim', name: 'Taksim' },\n    { value: 'Fatih', name: 'Fatih' },\n    { value: 'Laleli', name: 'Laleli' }\n];\n\ninterface Props {\n    form: FormLabels,\n    handleSubmit: (values: FormValues) => void\n    initValues: FormValues;\n}\n\nfunction AddReservationForm({ form, handleSubmit, initValues } : Props): JSX.Element {\n    const classes = useStyles();\n    const  { type, from, to, pax, property, driverNote, flightNo, selectedDate } = form;\n\n    return (\n        <>\n            <Box>\n                <Formik\n                    initialValues={{\n                        type: initValues.type,\n                        from: initValues.from,\n                        to: initValues.to,\n                        property: initValues.property,\n                        pax: initValues.pax,\n                        flightNo: initValues.flightNo,\n                        driverNote: initValues.driverNote,\n                        selectedDate: initValues.selectedDate,\n                        timezone: initValues.timezone,\n                        passengers: initValues.passengers,\n                    }}\n                    validationSchema={Yup.object().shape({ \n                        type: Yup.string().required('This Field is required'),\n                        from:  Yup.string().required('This Field is required'),\n                        to: Yup.string().required('This Field is required'),\n                        property: Yup.string().required('This Field is required'),\n                        flightNo: Yup.string().required('This Field is required'),\n                        driverNote: Yup.string(),\n                        selectedDate: Yup.date().required('This Field is required'),\n                        pax: Yup.number().min(1).max(10).default(1),\n                    })}\n                    onSubmit={(values) => {handleSubmit(values)}}\n                >   \n                    {({ handleSubmit, handleChange, values, touched, errors, isSubmitting, setFieldValue }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={1}>Airport to Resort</MenuItem>\n                                            <MenuItem value={2}>Resort to Airport</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item> \n                                        <InputLabel className={classes.inputLabel}>\n                                            {pax}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"pax\"\n                                            name=\"pax\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.pax}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {\n                                                Array(10).fill(0).map((_, idx) => (\n                                                <MenuItem className={classes.menuItem} value={idx+1}>{idx+1}</MenuItem>\n                                            ))}\n                                            \n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.pax)}>{errors.pax}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {from}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"from\"\n                                            name=\"from\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.from}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                            >\n                                            {values.type === 1 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.from)}>{errors.from}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {to}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"to\"\n                                            name=\"to\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.to}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {values.type === 2 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.to)}>{errors.to}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={6}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {property}\n                                        </InputLabel>\n                                        <TextField \n                                            id='property'\n                                            name='property'\n                                            error={Boolean(errors.property)}\n                                            helperText={errors.property}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.property}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {flightNo}\n                                        </InputLabel>\n                                        <TextField \n                                            id='flightNo'\n                                            name='flightNo'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.flightNo}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={6}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <Grid item >\n                                            <InputLabel className={classes.inputLabel}>\n                                                {selectedDate}\n                                            </InputLabel>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <DateTimePicker\n                                                    InputProps= {{\n                                                        classes: { input: classes.inputs },\n                                                        disableUnderline: true\n                                                    }}\n                                                    value={values.selectedDate}\n                                                    onChange={(date: any) => setFieldValue('selectedDate', date)}\n                                            />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid>\n                                    </MuiPickersUtilsProvider>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.inputLabel}>\n                                    {driverNote}\n                                </InputLabel>\n                                <TextField \n                                    id='driverNote'\n                                    name='driverNote'\n                                    multiline\n                                    rows={4}\n                                    InputProps= {{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                    value={values.driverNote}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item lg={6}>\n                                <Grid item container className={classes.itemContainer} spacing={4} >\n                                    <FieldArray name=\"passengers\">\n                                        {\n                                            (fieldArrayProps ) => {\n                                                const { form } = fieldArrayProps;\n                                                const { values } = form;\n                                                const { pax } = values;\n                                                let allPassengers = new Array(pax).fill('');\n                                                return ( \n                                                    <Form>\n                                                        {\n                                                            allPassengers.map((passenger: any, index: number) => (\n                                                                <Box>\n                                                                    <InputLabel className={classes.fieldInputLabel}>\n                                                                        passenger {index + 1} full name \n                                                                    </InputLabel>\n                                                                    <Field\n                                                                        id={`passengers[${index}]`}\n                                                                        name={`passengers[${index}]`}\n                                                                        className={classes.select}\n                                                                        style={{ position: 'relative' }}\n                                                                        \n                                                                    />\n                                                                </Box>\n                                                            ))\n                                                        }\n                                                    </Form>\n                                                )   \n                                            }\n                                        }\n                                    </FieldArray>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <CustomButton style=\"submit\" btnText=\"submit\" />\n                            </Grid>\n                        </Grid>\n                    </form>\n                    )}\n                </Formik>\n            </Box>\n        </>\n    )\n}\nexport default AddReservationForm;\n","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx",["770","771","772","773","774"],"import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Box, Tab } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport CustomDialog from '../../components/CustomDialog/CustomDialog';\nimport { useHistory } from 'react-router-dom';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport { turkishTabs, engTabs } from '../../utils/dictionary';\nimport DriverDetail from '../Agency/Drivers/DriverDetail/DriverDetail';\nimport { Driver } from '../../interface/Driver';\n\nconst driverInitValue = {\n    name: '',\n    img: '',\n    carNumber: '',\n    phoneNumber: 0,\n    email: ''\n};\n\nfunction ListReservations(): JSX.Element{\n    const { root } = useStyles();\n    const history = useHistory();\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n\n    const [confirmedReservations, setConfirmedReservations] = useState<any>([]);\n    const [unConfirmedReservations, setUnConfirmedReservations] = useState<any>([]);\n    const [open, setOpen] = useState<boolean>(false);\n    const [openDetailDialog, setOpenDetailDialog] = useState<boolean>(false);\n    const [driver, setDriver] = useState<Driver>(driverInitValue);\n    const [value, setValue] = useState('1');\n    const [initValues, setInitValues] = useState( {\n        type: 0,\n        from: 0,\n        to: 0,\n        property: '',\n        pax: 5,\n        flightNo: '',\n        driverNote: '',\n        selectedDate: new Date(),\n        timezone: 0,\n        passengers: []\n        });\n\n    const handleDialogClose = () => {\n        setOpen(false)\n    };\n\n    const handleCacelClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        deleteReservation(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation deleted!');\n                setConfirmedReservations(confirmedReservations.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n        \n    };\n    const handleEditClick = (cellValues: any) => {\n        setInitValues(cellValues.row)\n        setOpen(true)\n    };\n\n    const handleChange = (event:  any, newValue: string) => {\n        setValue(newValue);\n    };\n\n    const handleDriverDetails = (cellValues: any) => {\n        setDriver(cellValues.row.driver);\n        setOpenDetailDialog(true);\n    };\n\n    const onDetailDialogClose = () => {\n        setOpenDetailDialog(false);\n    };\n\n    const columns = language === 'tr' ? turksihColumns(handleEditClick, handleCacelClick, handleDriverDetails)\n                                      : engColumn(handleEditClick, handleCacelClick, handleDriverDetails);\n    const tabs = language === 'tr' ? turkishTabs : engTabs\n\n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log(data.error)\n            } else if (data.success) {\n                data.success.reservations.confirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.status = 'reservation';\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setConfirmedReservations(data.success.reservations.confirmedReservations);\n                data.success.reservations.unConfirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setUnConfirmedReservations(data.success.reservations.unConfirmedReservations);\n            } else {\n                console.log('External error')\n            }\n        })\n        return () => {\n            setConfirmedReservations([]);\n            setUnConfirmedReservations([]);\n        }\n    }, [history, open]);\n\n    \n    \n    return (\n        <>\n            <Box sx={{ width: '100%' }} className={root}>\n                <TabContext value={value}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n                            {tabs.map(({label, value}, idx) => (\n                                <Tab key={idx} label={label} value={value} />\n                            ))}\n                        </TabList>\n                    </Box>\n                    <TabPanel value=\"1\" style={{ width: '100%' }}><DataTable rows={confirmedReservations} columns={columns} /></TabPanel>\n                    <TabPanel value=\"2\" style={{ width: '100%' }}><DataTable rows={unConfirmedReservations} columns={columns} /></TabPanel>\n                </TabContext>\n                <CustomDialog open={openDetailDialog} onClose={onDetailDialogClose} style='updateReservation'>\n                    <DriverDetail driver={driver}/>\n                </CustomDialog>\n            </Box>\n        </>\n    )\n}\n\nexport default ListReservations;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/UpdateReservation/UpdateReservation.tsx",[],["775","776"],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/CustomDialog/CustomDialog.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/UpdateReservation/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/CustomDialog/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/LanguageTab/LanguageTab.tsx",["777","778","779","780"],"import { Box, MenuItem, Tab, Tabs, Select, InputLabel, Menu } from \"@material-ui/core\";\nimport { SetStateAction, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { Language } from '../../../interface/Language';\n\nfunction LanguageTab(): JSX.Element {\n    const { updateLanguage, language } = useLanguage();\n    const [value, setValue] = useState('eng');\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [open, setOpen] = useState(false);\n    const { menu, menuItem, root, tabStyle } = useStyles();\n\n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false);\n    }\n\n\n    const handleMenuItemClick = (lenguage: Language) => {\n        updateLanguage(lenguage);\n        handleClose();\n    }\n\n    return (\n        <Box className={root}>\n            <Tabs \n                value={value} \n                TabIndicatorProps={{\n                style: {\n                    display: \"none\",\n                },\n                }} \n            >\n                    <Tab\n                        aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                        aria-haspopup={anchorEl ? true : undefined}\n                        onClick={(event: any) => handleClick(event)}\n                        className={tabStyle}\n                        label={language === 'eng' ? \"Language\" : \"Dil\"} \n                    />\n            </Tabs>\n            <Menu \n                    id=\"simple-menu\"\n                    anchorEl={anchorEl} \n                    open={open} \n                    onClose={handleClose}\n                    classes={{paper: menu}}\n                    MenuListProps={{onMouseLeave: handleClose}}\n                    elevation={0}\n                >\n                    <MenuItem classes={{root: menuItem}}  onClick={() => { handleMenuItemClick('eng')}}>ENG-Enlish</MenuItem>\n                    <MenuItem classes={{root: menuItem}}  onClick={() => { handleMenuItemClick('tr')}}>TR-Turkish</MenuItem>\n                </Menu>\n        </Box>\n    )\n}\n\nexport default LanguageTab;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/LanguageTab/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/context/useLanguageContext.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx",["781","782"],"import { useEffect, useState } from \"react\";\nimport { format } from 'date-fns';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { Box } from \"@material-ui/core\";\nimport { agencyTurksihColumns, agencyEngColumns } from '../../../utils/dictionary/listAgencyReservation';\nimport { getReservations, updateReservation } from '../../../helpers/APICalls/agencyReservation';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport CustomDialog from \"../../../components/CustomDialog/CustomDialog\";\nimport AssignDriver from \"../Drivers/AssignDriver/AssignDriver\";\nimport { Reservation } from '../../../interface/agencyReservation';\nimport Search from \"../../../components/Search/Search\";\nimport ListPassengers from \"./ListPassengers\";\n\nfunction ListAgencyReservations(): JSX.Element {\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n    const [rows, setRows] = useState<any>([]);\n    const [open, setOpen] = useState<boolean>(false)\n    const [openShowDialog, setOpenShowDialog] = useState<boolean>(false)\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [reservation, setReservation] = useState<Reservation>()\n    const [from, setFrom] = useState(new Date());\n    const [passengers, setPassengers] = useState<string[]>([]);\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n    const handleProcessedClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        const inputs = { status: 'processed' };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been processed successfully!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n\n    const handleUnprocessedClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        const inputs = { status: 'unprocessed' };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been unprocessed successfully!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    };\n\n    const handleConfirmClick = (cellValues: any) => {\n        setReservation(cellValues.row);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    const handleShowClick = (cellValues: any) => {\n        setPassengers(cellValues.row.passengers);\n        setOpenShowDialog(true);\n    };\n\n    const handleShowDialogClose = () => {\n        setOpenShowDialog(false);\n    };\n\n    useEffect(() => {\n        getReservations(from, to).then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                console.log(data.success)\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.status = 'reservation';\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                    reservation.property = reservation.client?.propertyName;\n                });\n                setRows(data.success.reservations);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n\n        });\n        return () => {\n            setRows([]);\n        }\n    }, [useEffectTrigger]);\n\n    const columns = language === 'eng' ? agencyEngColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) \n                                       : agencyTurksihColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick);\n\n    return (\n        <Box>\n            <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog open={open} onClose={handleClose}>\n                <AssignDriver reservation={reservation} invokeUseEffect={invokeUseEffect} handleClose={handleClose} />\n            </CustomDialog>\n            <CustomDialog open={openShowDialog} onClose={handleShowDialogClose}>\n                <ListPassengers passengers={passengers} />\n            </CustomDialog>\n        </Box>\n    )\n};\n\nexport default ListAgencyReservations;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/agencyReservation.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx",["783","784","785","786"],"import { useEffect, useState } from 'react';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport ListPayments from './ListPayments/ListPayments';\nimport Details from './Details/Details';\nimport { IconButton, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nfunction AgencyPayments(): JSX.Element {\n    const { language } = useLanguage();\n    const history = useHistory();\n\n    const [openAddPayment, setOpenAddPayment] = useState<boolean>(false);\n    const [openAllPayments, setOpenAllPayments] = useState<boolean>(false);\n    const [details, setDetails] = useState<boolean>(false);\n\n    const [rows, setRows] = useState<any>([]);\n    const [clientId, setClientId] = useState<string>('');\n    const [debt, setDebt] = useState<number>(0)\n\n    const handleAddPaymentClick = (cellValues: any) => {\n        setClientId(cellValues.row._id)\n        setOpenAddPayment(true)\n    };\n\n    const handleAddPaymentClose = () => {\n        setOpenAddPayment(false)\n    }\n\n    const handleAllPaymentsClick = (cellValues: any) => {\n        setClientId(cellValues.row._id);\n        setOpenAllPayments(true)\n    };\n\n    const handleAllPaymentsClose = () => {\n        setOpenAllPayments(false)\n    };\n\n    const handleDetailsClick = (cellValues: any) => {\n        setDebt(cellValues.row.debt)\n        setClientId(cellValues.row._id);\n        setDetails(true);\n    };\n\n    const handleDetailsClose = () => {\n        setDetails(false)\n    };\n\n    const columns = language === 'eng'  \n                                    ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) \n                                    : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n    \n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log('data error')\n            } else if (data.success) {\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                    client.status = 'client'\n                });\n                setRows(data.success.clients);\n            } else {\n                console.log('external error')\n            }\n        });\n        return () => {\n            setRows([])\n        };\n    }, [history, openAllPayments, openAddPayment])\n    \n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog \n                open={openAddPayment} \n                onClose={handleAddPaymentClose}\n                style={'addPayment'}\n            >\n                <AddPayment clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={openAllPayments} \n                onClose={handleAllPaymentsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleAllPaymentsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            All Payments\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <ListPayments clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={details} \n                onClose={handleDetailsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleDetailsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            Reservations and Payments details\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Details clientId={clientId} debt={debt}/>\n            </CustomDialog>\n        </>\n        \n    )\n}\n\nexport default AgencyPayments;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPayment.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx",["787"],"import { Formik } from \"formik\";\nimport { Grid, InputLabel, Select, MenuItem, FormHelperText, TextField } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport CustomButton from '../../../../../components/Button/CustomButton';\nimport { Payment } from '../../../../../interface/AgencyPayment';\n\nconst currencies = [\n    {\n        value: 'TL',\n        label: 'TL',\n    },\n    {\n      value: 'USD',\n      label: '$',\n    },\n    {\n      value: 'EUR',\n      label: '€',\n    },\n  ];\n\ninterface Props {\n    form: {\n        type: string;\n        paid: string;\n        currency: string;\n        note: string;\n        exchangeRate: string;\n        paidInTL: string;\n    },\n    handleSubmit: (inputs: Payment) => void;\n    clientId: string;\n};\n\nfunction AddPaymentForm({ form, handleSubmit, clientId }: Props): JSX.Element {\n    const { type, note, paid, currency, exchangeRate, paidInTL } = form;\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    clientId: clientId, \n                    type: '',\n                    paid: 0,\n                    currency: 'TL',\n                    exchangeRate: 0,\n                    paidInTL: 0,\n                    note: ''\n                 }}\n                 validationSchema={Yup.object().shape({ \n                    type: Yup.string().required('This Field is required'),\n                    paid: Yup.number().min(1).default(0),\n                    currency: Yup.string().required('This Field is required'),\n                    exchangeRate: Yup.number().min(1).default(1),\n                    paidInTL: Yup.number().min(1).default(1),\n                    note: Yup.string(),                    \n                })}\n                onSubmit={(values) => {handleSubmit(values)}}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors, isSubmitting, }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={'cash'}>cash</MenuItem>\n                                            <MenuItem value={'credit card'}>credit card</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {note}\n                                        </InputLabel>\n                                        <TextField \n                                            id='note'\n                                            name='note'\n                                            error={Boolean(errors.note)}\n                                            helperText={errors.note}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.note}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paid}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paid'\n                                            name='paid'\n                                            error={Boolean(errors.paid)}\n                                            helperText={errors.paid}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paid}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {currency}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"currency\"\n                                            name=\"currency\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.currency}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {currencies.map(({ value, label }) => (\n                                                <MenuItem key={label} value={value}>{label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.currency)}>{errors.currency}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {exchangeRate}\n                                        </InputLabel>\n                                        <TextField \n                                            id='exchangeRate'\n                                            name='exchangeRate'\n                                            error={Boolean(errors.exchangeRate)}\n                                            helperText={errors.exchangeRate}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.currency === 'TL' ?  values.exchangeRate = 1 : values.exchangeRate}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paidInTL}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paidInTL'\n                                            name='paidInTL'\n                                            error={Boolean(errors.paidInTL)}\n                                            helperText={errors.paidInTL}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paidInTL = values.paid * values.exchangeRate}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <CustomButton style=\"submit\" btnText=\"submit\" />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )}\n\n            </Formik>\n        </>\n    )\n}\nexport default AddPaymentForm;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/agencyPayment.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx",["788","789"],"import { useEffect, useState } from \"react\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { getClientPayments, updatePayment } from '../../../../helpers/APICalls/agencyPayment';\nimport { format } from 'date-fns';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport { \n        agencyListPaymentEngColumns, \n        agencyListPaymentTurkishColumns \n       } from '../../../../utils/dictionary';\n\nimport { useLanguage } from '../../../../context/useLanguageContext';\n\ninterface Props {\n    clientId: String;\n}\n\nfunction ListPayments({ clientId }: Props): JSX.Element {\n    const [rows, setRows] = useState<any>([]);\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n\n    const handleCancelClick = (cellValues: any) => {\n        const paymentId = cellValues.row._id;\n        const inputs = { status: 'canceled', clientId };\n        updatePayment(inputs, paymentId).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message)\n            } else if (data.success) {\n                updateSnackBarMessage('Payment has been canceled successfully');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n    const columns = language === 'eng' ? agencyListPaymentEngColumns(handleCancelClick) : agencyListPaymentTurkishColumns(handleCancelClick);\n    useEffect(() => {\n        getClientPayments(clientId).then((data) => {\n            if (data.error){\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.payment.map((item, idx) => {\n                    item.id = idx + 1;\n                    item.status = 'payment';\n                    item.property = item.client?.property;\n                    item.email = item.client?.email;\n                    const date = item.createdAt ? new Date(item.createdAt): new Date();\n                    item.createdAt = format(date, \"dd-MM-yyyy kk:mm\")\n                })\n                setRows(data.success.payment);\n            } else {\n                console.log('External Error!');\n            }\n        });\n        }, [])\n    return (\n        <DataTable rows={rows} columns={columns} />\n    )\n};\n\nexport default ListPayments;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx",["790","791","792"],"import {  Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservationPaymentStat } from '../../../../helpers/APICalls/agencyReservation';\nimport { format } from 'date-fns';\n\nimport { detailsEngColumns, detailsTurksihColumns } from '../../../../utils/dictionary';\nimport Search from '../../../../components/Search/Search';\n\ninterface Props {\n    clientId: string;\n    debt: number;\n};\n\ninterface Total {\n    id: number;\n    totalReservationsCost?: number;\n    paymentTotal?: number;\n    currency?: string;\n    debt: number;\n    status?: string;\n}\n\nfunction Details({ clientId, debt }: Props): JSX.Element {\n    const { language } = useLanguage();\n    const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n    \n    const [detailsRows, setDetailsRows] = useState<any>([]);\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [from, setFrom] = useState(new Date());\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n\n    const totalReservationsCost = useRef(0);\n    const paymentTotal = useRef(0);\n    const totalsRows = useRef<Total[]>([{id: 10000200, totalReservationsCost: 0, paymentTotal: 0, debt: debt, status: 'total'}]); \n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    useEffect(() => {\n        getClientReservationPaymentStat(clientId, from, to).then((data) => {\n                let idx = 0;\n                if (data.error) {\n                    console.log(data.error)\n                } else if (data.success) {\n                    data.success.reservations.map((reservation) => {\n                        reservation.id = idx + 1;\n                        reservation.status = 'reservation'\n                        const date = new Date(reservation.selectedDate);\n                        reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        totalReservationsCost.current +=  (reservation.cost ? reservation.cost : 0);\n                        idx ++;\n                        });\n                    data.success.payments.map((item) => {\n                        item.id = idx + 1;\n                        item.property = item.client?.property;\n                        item.status = 'payment'\n                        const date = new Date(item.createdAt ? item.createdAt : new Date());\n                        item.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        paymentTotal.current += item.paidInTL;\n                        idx++\n                    });\n                    totalsRows.current[0].totalReservationsCost = totalReservationsCost.current;\n                    totalsRows.current[0].paymentTotal = paymentTotal.current;\n                    totalsRows.current[0].debt = totalReservationsCost.current - paymentTotal.current;  \n                    setDetailsRows([...data.success.reservations, ...data.success.payments, ...totalsRows.current]\n                    .sort(function(a, b) {return parseFloat(a.date) - parseFloat(b.date)}));                    \n                 \n                } else {\n                    console.log('External Error, please try again Later!')\n                }\n            });\n            return () => {\n                totalReservationsCost.current = 0;\n                paymentTotal.current = 0;\n                setDetailsRows([]);\n            }\n    }, [useEffectTrigger]);\n    \n    return (\n        <>  \n            <Box display='flex' flexDirection='column'>\n                <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n                <DataTable rows={detailsRows} columns={detailsColumns} />\n            </Box>\n        </>\n    )\n}\nexport default Details","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/ListDrivers/ListDrivers.tsx",["793","794","795","796","797","798","799","800"],"import { useEffect, useState } from 'react'; \nimport { Box, Typography } from \"@material-ui/core\";\nimport CustomDialog from \"../../../../components/CustomDialog/CustomDialog\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\nimport { engDriverColumn, turksihDriverColumns } from \"../../../../utils/dictionary\";\nimport UpdateDriver from \"../UpdateDriver/UpdateDriver\";\nimport { Driver } from '../../../../interface/Driver';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport { useHistory } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport DeleteDriver from '../DeleteDriver/DeleteDriver';\n\n\nconst ListDrivers = (): JSX.Element => {\n    // const initRows = [{id: 1, firstName: 'abood', lastName: 'shiha', email: 'abood@gmail.com', carNumber: '656'} ]\n\n    const [open, setOpen] = useState<boolean>(false);\n    const [rows, setRows] = useState<Driver []>([]);\n    const [initValues, setInitValues] = useState<any>();\n    const [dialogUpdate, setDialogUpdate] = useState<boolean>(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n    const { updateSnackBarMessage } = useSnackBar(); \n    const history = useHistory();\n    const { language } = useLanguage();\n\n    useEffect(() => {\n        getDrivers().then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error)\n            }else if (data.success) {\n                data.success.drivers.map((driver, idx) => {\n                    driver.id = idx + 1;\n                    const date = driver.createdAt ? new Date(driver.createdAt) : new Date();\n                    driver.createdAt = format(date, 'dd-MM-yyyy kk:mm')\n                });\n                setRows(data.success.drivers);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n        return () => {\n            setRows([]);\n        };\n    }, [history])\n\n    const handleEditClick = (values: any) => {\n        setInitValues(values.row)\n        setOpen(true);\n    }\n    const handleCancelClick = (values: any) => {\n        setInitValues(values.row);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n    const handleDeleteDialogClose = () => {\n        setOpenDeleteDialog(!openDeleteDialog)\n    }\n\n    const columns = language === 'eng' ? engDriverColumn(handleEditClick, handleCancelClick) : turksihDriverColumns(handleEditClick, handleCancelClick)\n    return (\n        <>\n            <Box>\n                <DataTable rows={rows} columns={columns} />\n                <CustomDialog open={open} onClose={handleClose} style=\"updateReservation\">\n                    <UpdateDriver initValues={initValues} handleClose={handleClose} rows={rows} setRows={setRows} />\n                </CustomDialog>\n                <CustomDialog open={openDeleteDialog} onClose={handleDeleteDialogClose} style=\"updateReservation\">\n                    <DeleteDriver initValues={initValues} handleDeleteDialogClose={handleDeleteDialogClose} rows={rows} setRows={setRows}/>\n                </CustomDialog>\n            </Box>\n        </>\n    )\n};\n\nexport default ListDrivers;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/AddDriver.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/DriverForm.tsx",["801","802","803","804"],"import { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport { Grid, InputLabel, TextField, Select, MenuItem, Typography } from '@material-ui/core';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport { Driver } from '../../../../interface/Driver';\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\n\nconst engDriverForm = {\n    name: 'Name',\n    phoneNumber: 'Cep',\n    email: 'Email',\n    carNumber: 'Vehicle No'\n};\n\nconst turkishDriverForm = {\n    name: 'Isim',\n    phoneNumber: 'Cep',\n    email: 'Email',\n    carNumber: 'Araç No'\n};\n\ninterface Props {\n    handleSubmit: (inputs: Driver) => void;\n    initValues: Driver\n}\n\nfunction AddClientForm( { handleSubmit, initValues } : Props): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n    const { name, phoneNumber, email, carNumber } = language === 'tr' ? turkishDriverForm : engDriverForm\n\n    return (\n       <>\n        <Formik\n            initialValues={{\n                email: initValues.email,\n                name: initValues.name,\n                phoneNumber: initValues.phoneNumber,\n                carNumber: initValues.carNumber\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Invalid Email Address').required('Please Enter Email Address'),\n                name: Yup.string().required('This field can not be blank'),\n                phoneNumber: Yup.number().required('This field can not be blank'),\n                carNumber: Yup.string().required('This field can not be blank'),\n            })} \n            onSubmit={(values) => {handleSubmit(values)}}\n\n        >\n            {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <Form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item container justify=\"space-evenly\" spacing={2}>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {name}\n                                </InputLabel>\n                                <TextField\n                                    id=\"name\"\n                                    name=\"name\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.name)}\n                                    helperText={errors.name}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {phoneNumber}\n                                </InputLabel>\n                                <TextField\n                                    id=\"phoneNumber\"\n                                    name=\"phoneNumber\"\n                                    value={values.phoneNumber}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.phoneNumber)}\n                                    helperText={Boolean(errors.phoneNumber) ? 'please enter a valid number': null}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }} \n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\" spacing={2}>\n                        <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {email}\n                                </InputLabel>\n                                <TextField\n                                    id=\"email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.email)}\n                                    helperText={errors.email}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {carNumber}\n                                </InputLabel>\n                                <TextField\n                                    id=\"carNumber\"\n                                    name=\"carNumber\"\n                                    value={values.carNumber}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.carNumber)}\n                                    helperText={errors.carNumber}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justifyContent='center'>\n                            <CustomButton btnText='submit' style=\"submit\" />\n                        </Grid>\n                    </Grid>\n                </Form> \n            )}\n        </Formik>\n       </>\n    )\n};\n\nexport default AddClientForm;\n\n","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/UpdateDriver.tsx",["805"],"import CustomDialog from \"../../../../components/CustomDialog/CustomDialog\";\nimport DriverForm from \"../DriverForm/DriverForm\";\nimport { Driver } from '../../../../interface/Driver';\nimport { Box, Typography } from \"@material-ui/core\";\nimport useStyles from \"./useStyles\";\nimport { updateDriver } from \"../../../../helpers/APICalls/driver\";\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\n\ninterface Props {\n    initValues: Driver;\n    handleClose: () => void;\n    rows: Driver [];\n    setRows: any;\n}\n\nconst UpdateDriver = ({ initValues, handleClose, rows, setRows }: Props): JSX.Element => {\n    const { title } = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n    const handleSubmit = (inputs: Driver) => {\n        const id = initValues._id;\n        updateDriver(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            }else if (data.success) {\n                setRows(rows.map(row => row.id === initValues.id ? { ...row, ...data.success?.driver } : row));\n                updateSnackBarMessage('Driver has been updated successfully!');\n                handleClose();\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n    return (\n        <>\n            <Box>\n                <Typography className={title}>\n                    update driver\n                </Typography>\n                <DriverForm handleSubmit={handleSubmit} initValues={initValues} />\n            </Box>\n        </>\n        \n    )\n};\n\nexport default UpdateDriver;\n","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/driver.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/DeleteDriver.tsx",["806","807","808"],"import { Typography, Grid, Box } from '@material-ui/core';\nimport CustomButton from '../../../../components/Button/CustomButton';\nimport { deleteDriver } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext'; \nimport { Driver } from '../../../../interface/Driver';\n\ninterface Props {\n    initValues: Driver;\n    handleDeleteDialogClose: () => void;\n    rows: Driver [];\n    setRows: any;\n}\n\nconst DeleteDriver = ({ initValues, handleDeleteDialogClose, rows, setRows }: Props): JSX.Element => {\n    const { title, root } = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n\n    const onYesClick = () => {\n        const id = initValues._id;\n        deleteDriver(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                updateSnackBarMessage('Client has been deleted successfully!');\n                handleDeleteDialogClose();\n                setRows(rows.filter(row => row.id !== initValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n\n    const onNoClick = () => {\n        handleDeleteDialogClose();\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" className={root}>\n                <Grid item>\n                    <Typography className={title}>\n                        Are you sure you want to delete the driver\n                    </Typography>\n                    <Grid item container justifyContent=\"space-around\">\n                        <CustomButton btnText=\"Yes\" style=\"edit\" onClick={onYesClick} />\n                        <CustomButton btnText=\"No\" style=\"delete\" onClick={onNoClick}/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default DeleteDriver;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx",["809","810","811","812","813"],"import { Grid, List, Typography, ListItem, ListItemAvatar, Avatar, ListItemText, Divider, Select } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';  \nimport { Driver } from '../../../../interface/Driver';\nimport clsx from 'clsx';\nimport CustomButton from '../../../../components/Button/CustomButton';\nimport { updateReservation } from '../../../../helpers/APICalls/agencyReservation';\nimport { Reservation } from '../../../../interface/agencyReservation';\n\ninterface Props {\n    reservation: any;\n    invokeUseEffect: () => void;\n    handleClose: () => void;\n}\n\nconst AssignDriver = ({ reservation, invokeUseEffect, handleClose }: Props): JSX.Element => {\n    const { root, listItem } = useStyles();\n    const selected = clsx(listItem, 'selected');\n\n    const [value, setValue] = useState<string | undefined>();\n    const [drivers, setDrivers] = useState<Driver []>([]);\n\n    const { updateSnackBarMessage } = useSnackBar();\n\n    useEffect(() => {\n        getDrivers().then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                setDrivers(data.success.drivers);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n        return () => {\n            setDrivers([]);\n        }\n    }, []);\n\n    const handleSubmit = () => {\n        if (value === undefined) {\n            updateSnackBarMessage('Please select a driver');\n            return\n        };\n        const id = reservation._id;\n        const inputs = { confirmed: true, driver: value };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been confirmed successfully!');\n                invokeUseEffect();\n                \n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" className={root} >\n                <Grid item>\n                    <Typography>\n                        Please Select Driver\n                    </Typography>\n                        <List style={{ width: '100%', maxWidth: 360, backgroundColor: 'background.paper' }}>\n                            {drivers.map((driver, idx) => (\n                                <>\n                                    <ListItem alignItems=\"flex-start\" className={value !== driver._id ? listItem : selected} onClick={() => {setValue(driver._id)}}>\n                                        <ListItemAvatar>\n                                            <Avatar alt={`${driver.name}`} src=\"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\" />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${driver.name}`}\n                                            secondary={\n                                                <>\n                                                <Typography\n                                                    style={{ display: 'inline' }}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                >\n                                                    {`Car N0: ${driver.carNumber}`} <br /> {`Cep: ${driver.phoneNumber}`}\n                                                </Typography>\n                                                \n                                                </>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                </>\n                            ))}\n                        </List>\n                </Grid>\n                <Grid item container justifyContent='space-evenly' style={{ marginTop: '2em' }}>\n                    <CustomButton btnText=\"Submit\" style='dialogSubmit' onClick={handleSubmit} />\n                    <CustomButton btnText=\"Cancel\" style='cancel' onClick={handleClose} />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AssignDriver;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/DriverDetail.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx",["814","815","816","817"],"import { useState, useEffect } from 'react';\nimport DataTable from \"../../../components/DataTable/DataTable\";\nimport { turkishClientColumn, engClientColumn } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { deleteClient, getClients } from '../../../helpers/APICalls/user';\nimport { format } from 'date-fns';\nimport { Client } from '../../../interface/Client';\nimport { useHistory } from 'react-router-dom';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport { Box, Typography } from '@material-ui/core';\nimport CustomButton from '../../../components/Button/CustomButton';\nimport useStyles from './useStyles';\nimport UpdateClient from '../UpdateClient/UpdateClient';\n\nconst initialValues={\n    email: '',\n    firstName: '',\n    lastName: '',\n    businessType: '',\n    address: '',\n    propertyName: '',\n    IstAirportMaxFourPaxCost: 0,\n    IstAirportMaxSixPaxCost: 0,\n    IstAirportMaxTenPaxCost: 0,\n    SawAirportMaxFourPaxCost: 0,\n    SawAirportMaxSixPaxCost: 0,\n    SawAirportMaxTenPaxCost: 0,\n};\n\nconst ListClients = (): JSX.Element => {\n    const { mainBox, title } = useStyles();\n    const { language } = useLanguage();\n    const [rows, setRows] = useState<Client []>([]);\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\n    const [openUpdateClient, setOpenUpdateClient] = useState<boolean>(false);\n    const [cellValue, setCellValue] = useState<Client>(initialValues);\n\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory();\n\n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                    const date = new Date(client.createdAt ? client.createdAt : Date.now());\n                    client.createdAt = format(date, 'dd-MM-yyyy kk:mm')\n                });\n                setRows(data.success.clients);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, [history]);\n\n    const handleEditClick = (values: any) => {\n        setOpenUpdateClient(true);\n        setCellValue(values.row);\n    };\n\n    const handleCancelClick = (values: any) => {\n        setOpenDialog(true);\n        setCellValue(values.row);\n    };\n\n    const handleUpdateClientClose = () => {\n        setOpenUpdateClient(false);\n    };\n\n    const onYesClick = () => {\n        const id = cellValue?._id;\n        deleteClient(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('Client has been deleted successfully!');\n                setRows(rows.filter(row => row.id !== cellValue?.id));\n                setOpenDialog(false);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n\n    const handleCloseDialog = () => {\n        setOpenDialog(false);\n    };\n\n    const handleUpdatedClientSuccess = (rowValue: Client, client: Client) => {\n        setRows(rows.map(row => row._id === rowValue._id ? {...row, ...client} : row));\n        setOpenUpdateClient(false);\n    }\n\n    const dialog = language === 'tr' ? { \n                                            text: 'Bu müşteriyi silmek istediğinizden emin misiniz?',\n                                            yes: 'Evet',\n                                            no: 'Hayır ' \n                                        } : \n                                        {\n                                            text: 'Are you sure you want to delete this client?',\n                                            yes: 'Yes',\n                                            no: 'No '\n                                        }\n\n    const columns = language === 'tr' ? turkishClientColumn(handleEditClick, handleCancelClick) \n                                        : engClientColumn(handleEditClick, handleCancelClick);\n\n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog open={openDialog} onClose={handleCloseDialog}>\n                <>\n                    <Box display='flex' alignItems='center' flexDirection=\"column\" className={mainBox}>\n                            <Typography className={title}>\n                                {dialog.text}\n                            </Typography>\n                            <Box justifyContent='center' m={2} pt={3}>\n                                <CustomButton btnText={dialog.yes} style='yes' onClick={onYesClick} />\n                                <CustomButton btnText={dialog.no} style='no' onClick={handleCloseDialog} />\n                            </Box>\n                    </Box>\n                </>\n            </CustomDialog>\n            <CustomDialog open={openUpdateClient} onClose={handleUpdateClientClose}>\n                <UpdateClient values={cellValue} handleUpdatedClientSuccess={handleUpdatedClientSuccess} />\n            </CustomDialog>\n        </>\n    )\n};\n\nexport default ListClients;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/UpdateClient/UpdateClient.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/UpdateClient/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Search/Search.tsx",["818","819","820"],"import { Grid, InputLabel } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport CustomButton from '../Button/CustomButton';\nimport useStyles from './useStyles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker\n  } from '@material-ui/pickers';\n\ninterface Props {\n    from: Date;\n    to: Date;\n    setFrom: (from: Date) => void;\n    setTo: (to: Date) => void;\n    invokeUseEffect: () => void\n};\n\nconst Search = ({ from, to, setFrom, setTo, invokeUseEffect }: Props): JSX.Element => {\n    const { itemContainer,  inputLabel, inputs } = useStyles();\n\n    const onSearchClick = () => {\n        invokeUseEffect();\n    };\n\n    return (\n        <>\n            <Grid item container className={itemContainer} spacing={6} justifyContent='center'>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid item >\n                        <InputLabel className={inputLabel}>\n                            From\n                        </InputLabel>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                InputProps= {{\n                                    classes: { input: inputs },\n                                    disableUnderline: true\n                                }}\n                                value={from}\n                                onChange={(date: any) => setFrom(date)}\n                        />\n                        </MuiPickersUtilsProvider>\n                    </Grid>\n                    <Grid item >\n                        <InputLabel className={inputLabel}>\n                            to\n                        </InputLabel>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <DatePicker\n                                InputProps= {{\n                                    classes: { input: inputs },\n                                    disableUnderline: true\n                                }}\n                                value={to}\n                                onChange={(date: any) => setTo(date) }\n                        />\n                        </MuiPickersUtilsProvider>\n                        <CustomButton btnText='Search' style='searchButton' onClick={onSearchClick} />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n            </Grid>\n        </>\n    );\n};\n\nexport default Search;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Search/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/utils/dictionary/home.js",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/ClientHome/ClientHome.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/AgencyHome/AgencyHome.tsx",["821","822","823","824","825","826","827"],"import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button, Grid } from '@material-ui/core';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';\nimport { getStat, getstatInfo } from '../../../helpers/APICalls/agencyReservation';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { GetStatApiDataSuccess, GetStatInfoApiDataSuccess } from '../../../interface/agencyReservation';\nimport { engUnconfirmedResColumns, \n          turkishUnconfirmedResColumns,\n          engOwedUsersColumns,\n          turkishOwedUsersColumns } from '../../../utils/dictionary/home';\n\nconst initStat = {\n    owedUsersNumber: 0,\n    unconfirmedReservationsNumber: 0\n};\n\nconst initStatInfo = {\n    owedUsers: [],\n    unconfirmedReservations: []\n};\n\nconst AgencyHome = (): JSX.Element => {\n    const { root, card, itemContaienr } = useStyles();\n    const { language } = useLanguage();\n    const [stat, setStat] = useState<GetStatApiDataSuccess>(initStat);\n    const [statInfo, setStatInfo] = useState<any>(initStatInfo);\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory()\n    \n    const unconfirmedResColumns = language === 'eng' ? engUnconfirmedResColumns() : turkishUnconfirmedResColumns();\n    const owedUsersColumns = language === 'eng' ? engOwedUsersColumns() : turkishOwedUsersColumns();\n \n    useEffect(() => {\n        getStat().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                setStat(data.success);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        getstatInfo().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                console.log(data.success)\n                data.success.unconfirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.property = reservation.client.propertyName;\n                    const date = new Date(reservation.selectedDate);\n                    reservation.date = format(date, 'dd-MM-yyyy kk:hh')\n                    \n                })\n                data.success.owedUsers.map((user, idx) => {\n                    user.id = idx + 1;\n                })\n                setStatInfo(data.success);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, [stat]);\n\n    const cards = [\n            {\n                cardImg: 'https://airportshuttle0.s3.amazonaws.com/airport-shuttle02.jpeg',\n                title: language === 'eng' ? 'Unconfirmed Reservations' : 'Onaylanmamış Rezer...',\n                content: language === 'eng' ? 'Reservations waiting for confirmation!' : 'Onay bekleyen rezervasyonlar!',\n                number: stat.unconfirmedReservationsNumber,\n                btnText: 'Show',\n                handleClick: () => {history.push('/unconfirmed-reservations')}\n            }, {\n                cardImg: 'https://airportshuttle0.s3.amazonaws.com/money.jpeg',\n                title: language === 'eng' ? 'Debt' : 'Borç',\n                content: language === 'eng' ? 'clients owe you money!' : 'Müşterilerin sana borcu var!',\n                number: stat.owedUsersNumber,\n                btnText: 'Show',\n                handleClick: () => {history.push('/debt')}\n            }\n        ]\n    return (\n    <>\n        <Grid container direction=\"column\" className={root}>\n            <Grid item container spacing={3} justifyContent=\"space-evenly\" className={itemContaienr}>\n                {cards.map(({ cardImg, title, content, number, btnText, handleClick }) => (\n                <Card className={card}>\n                    <CardMedia\n                        component=\"img\"\n                        height=\"140\"\n                        image={cardImg}\n                        alt=\"Debt\"\n                    />\n                    <CardContent style={{ backgroundColor:'#2F4F4F' }}>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            {`${number} ${content}`}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                ))}\n            </Grid>\n            <Grid item container justifyContent='flex-end'  alignItems='center'>\n                <DataTable rows={statInfo.unconfirmedReservations} columns={unconfirmedResColumns} />\n                <DataTable rows={statInfo.owedUsers} columns={owedUsersColumns} />\n            </Grid>\n        </Grid>\n    </>\n    );\n};\n\nexport default AgencyHome;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/AgencyHome/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/Profile/Profile.tsx",["828","829"],"import { Menu, MenuItem } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport { useAuth } from '../../../context/useAuthContext';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from \"../../CustomDialog/CustomDialog\";\nimport ChangePassword from \"../ChangePassword/ChangePassword\";\n\n\nconst Profile = (): JSX.Element => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const { menu, menuItem, root, tabStyle } = useStyles();\n    const { logout } = useAuth();\n    const { language } = useLanguage();\n    \n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n        setOpen(true);\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false);\n    }\n\n    const handleLogout = () => {\n        logout();\n    };\n\n    const handleDialogClose = () => {\n        setOpenDialog(!openDialog);\n    }\n\n    return (\n        <>\n            <IconButton aria-label=\"fingerprint\" onClick={handleClick}>\n                <PersonIcon />\n            </IconButton>\n            <Menu \n                id=\"simple-menu\"\n                anchorEl={anchorEl} \n                open={open} \n                onClose={handleClose}\n                classes={{paper: menu}}\n                MenuListProps={{onMouseLeave: handleClose}}\n                elevation={0}\n            >\n                <MenuItem classes={{root: menuItem}} onClick={() => {setOpenDialog(true)}} >{ language === 'eng' ? 'Change Password' : 'Şifre Değiştir ' }</MenuItem>\n                <MenuItem classes={{root: menuItem}}  onClick={handleLogout}>{ language === 'eng' ? 'Logout' : 'Çikiş' }</MenuItem>\n            </Menu>\n            <CustomDialog open={openDialog} onClose={handleDialogClose}>\n                <ChangePassword handleDialogClose={handleDialogClose}/>\n            </CustomDialog>\n    </>\n    )\n}\n\nexport default Profile;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/Profile/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx",["830","831","832"],"import { Box, InputLabel, TextField, Typography, Divider } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CustomButton from \"../../Button/CustomButton\";\nimport useStyles from './useStyles';\nimport { changePasswordApi } from '../../../helpers/APICalls/login';\nimport { useSnackBar } from \"../../../context/useSnackbarContext\";\nimport { useLanguage } from \"../../../context/useLanguageContext\";\n\ninterface Props {\n    handleDialogClose: () => void;\n}\n\nconst ChangePassword = ({ handleDialogClose }: Props): JSX.Element => {\n    const { root, title, inputs, label } = useStyles();\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n    \n    const changePassword = (passwordType: string, event: any) => {\n        switch(passwordType) {\n            case 'oldPassword':\n                setOldPassword(event.target.value);\n                break;\n            case 'newPassword':\n                setNewPassword(event.target.value);\n                break;\n            }\n    }\n\n    const handleSubmit = ()  => {\n        const passwordInputs = { oldPassword, newPassword };\n        changePasswordApi(passwordInputs).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('Password has been updated successfully');\n                handleDialogClose();\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        }) \n    };\n\n    return (\n        <Box className={root}>\n            <Typography className={title}>\n                { language === 'eng' ? 'Change Password' : 'Şifre Değiştir ' }\n            </Typography>\n            <InputLabel>\n                { language === 'eng' ? 'Old Password' : 'Eski Şifre' }\n            </InputLabel>\n            <TextField\n                type={\"password\"}                \n                value={oldPassword}\n                onChange={(event) => {changePassword('oldPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}                \n            />\n            <InputLabel>\n                { language === 'eng' ? 'New Password' : 'Yeni Şifre' }\n            </InputLabel>\n            <TextField\n                type=\"password\"\n                value={newPassword}\n                onChange={(event) => {changePassword('newPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}\n            />\n            <Box />\n                <CustomButton style='submit' btnText='Submit' onClick={handleSubmit} />\n        </Box>\n    )\n};\n\nexport default ChangePassword;","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/useStyles.ts",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/utils/dictionary/listAgencyReservation.js",["833","834","835","836","837","838"],"import { Box } from '@material-ui/core';\nimport CustomButton from '../../components/Button/CustomButton';\n\nexport const agencyEngColumns = (handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) => {\n    const columns = [\n      { \n        field: 'date', \n        headerName: 'Date and Time', \n        width: 300 \n      },\n      {\n        field: 'flightNo',\n        headerName: 'Flight No',\n        width: 150,\n      },\n      {\n        field: 'from',\n        headerName: 'From',\n        width: 150,\n      },\n      {\n        field: 'to',\n        headerName: 'To',\n        width: 150,\n      },\n      {\n        field: 'pax',\n        headerName: 'Pax',\n        width: 120,\n      },\n      {\n        field: 'driverNote',\n        headerName: 'Note/property',\n        width: 150,\n      },\n      {\n        field: 'property',\n        headerName: 'Property',\n        width: 150,\n      },\n      {\n        field: \"Action\",\n        width: 150,\n        renderCell: (cellValues) => {\n          return (\n            <>\n              <Box style={{ display: 'flex', flexDirection: 'column'}}>\n              <CustomButton\n                  style=\"showResDetails\"\n                  btnText=\"Show\"\n                  onClick={() => handleShowClick(cellValues)} />\n                <CustomButton\n                  disabled={cellValues.row.confirmed}\n                  style={!cellValues.row.confirmed ? \"confirm\" : \"confirmed\"}\n                  btnText={!cellValues.row.confirmed ? \"confirm\" : \"confirmed\"}\n                  onClick={() => handleConfirmClick(cellValues)} />\n                <CustomButton\n                  style=\"processed\"\n                  btnText=\"processed\"\n                  onClick={() => handleProcessedClick(cellValues)} />\n                <CustomButton\n                  style=\"unprocessed\"\n                  btnText=\"unprocessed\"\n                  onClick={() => handleUnprocessedClick(cellValues)} />\n              </Box>\n            </>\n          );\n        }\n      },\n    ];\n    return columns;\n  };\n  \n  export const agencyTurksihColumns = (handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) => {\n    const columns = [\n      { \n        field: 'date', \n        headerName: 'Traih va Saat', \n        width: 300 \n      },\n      {\n        field: 'flightNo',\n        headerName: 'Uçuş No ',\n        width: 150,\n      },\n      {\n        field: 'from',\n        headerName: 'Nerden',\n        width: 150,\n      },\n      {\n        field: 'to',\n        headerName: 'Nereye',\n        width: 150,\n      },\n      {\n        field: 'pax',\n        headerName: 'Pax',\n        width: 120,\n      },\n      {\n        field: 'driverNote',\n        headerName: 'Note/Emlak',\n        width: 150,\n      },\n      {\n        field: 'property',\n        headerName: 'Emlak',\n        width: 150,\n      },\n      {\n        field: \"Onay\",\n        width: 150,\n        renderCell: (cellValues) => {\n          return (\n            <>\n              <Box style={{ display: 'flex', flexDirection: 'column'}}>\n              <CustomButton\n                  style=\"showResDetails\"\n                  btnText=\"göster\"\n                  onClick={() => handleShowClick(cellValues)} />\n                <CustomButton\n                  disabled={cellValues.row.confirmed}\n                  style={!cellValues.row.confirmed ? \"confirm\" : \"confirmed\"}\n                  btnText={!cellValues.row.confirmed ? \"onay\" : \"onaylandi\"}\n                  onClick={() => handleConfirmClick(cellValues)}\n                />\n                <CustomButton\n                  style=\"processed\"\n                  btnText=\"işlenmiş\"\n                  onClick={() => handleProcessedClick(cellValues)}\n                />\n                <CustomButton\n                  style=\"unprocessed\"\n                  btnText=\"işlenmemiş\"\n                  onClick={() => handleUnprocessedClick(cellValues)}\n                />\n              </Box>\n            </>\n          );\n        }\n      },\n    ];\n    return columns;\n  };","/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListPassengers.tsx",[],"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/index.js",[],["839","840"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/App.tsx",["841"],["842","843"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useAuthContext.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useSnackbarContext.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useLanguageContext.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx",["844","845","846","847","848"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx",["849","850","851"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservation.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/Login.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx",["852","853","854","855"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/AddClient.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx",["856","857"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx",["858","859","860","861"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/Header.tsx",["862"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/AddDriver.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/ListDrivers/ListDrivers.tsx",["863","864","865","866","867","868","869","870"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Home/AgencyHome/AgencyHome.tsx",["871","872","873","874","875","876","877"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Home/ClientHome/ClientHome.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/utils/dictionary/listAgencyReservation.js",["878","879","880","881","882","883"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/utils/dictionary.js",["884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/utils/dictionary/home.js",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/ListClients/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/loginWithCookies.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/logout.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/reservation.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/user.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/login.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/agencyReservation.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Home/AgencyHome/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/driver.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AddDriver/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Reservation/ListPassengers.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/DataTable/DataTable.tsx",["907"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/CustomDialog/CustomDialog.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/DriverDetail.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Search/Search.tsx",["908","909","910"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/AddReservationForm.tsx",["911"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/LoginForm/LoginForm.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Button/CustomButton.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/UpdateClient/UpdateClient.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/AddClientForm.tsx",["912"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx",["913","914","915","916","917"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPayment.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ClientHeader/ClientHeader.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/DeleteDriver.tsx",["918","919","920"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/UpdateDriver.tsx",["921"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/DriverForm.tsx",["922","923","924","925"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx",["926","927","928"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx",["929","930"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Reservation/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/DataTable/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/CustomDialog/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverDetail/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Search/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ClientHeader/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/agencyPayment.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/AddClient/AddClientForm/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/UpdateClient/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Button/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/LoginForm/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DeleteDriver/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/Profile/Profile.tsx",["931","932"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/LanguageTab/LanguageTab.tsx",["933","934","935","936"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx",["937"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/LanguageTab/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/Profile/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx",["938","939","940"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ChangePassword/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/AgencyHeader/useStyles.ts",[],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/axiosConfig.ts",[],["941","942"],"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Theme.js",[],{"ruleId":"943","replacedBy":"944"},{"ruleId":"945","replacedBy":"946"},{"ruleId":"947","severity":1,"message":"948","line":1,"column":10,"nodeType":"949","messageId":"950","endLine":1,"endColumn":26},{"ruleId":"943","replacedBy":"944"},{"ruleId":"945","replacedBy":"946"},{"ruleId":"947","severity":1,"message":"951","line":3,"column":51,"nodeType":"949","messageId":"950","endLine":3,"endColumn":54},{"ruleId":"943","replacedBy":"952"},{"ruleId":"945","replacedBy":"953"},{"ruleId":"947","severity":1,"message":"948","line":1,"column":10,"nodeType":"949","messageId":"950","endLine":1,"endColumn":26},{"ruleId":"943","replacedBy":"952"},{"ruleId":"945","replacedBy":"953"},{"ruleId":"954","severity":1,"message":"955","line":51,"column":65,"nodeType":"956","messageId":"957","endLine":51,"endColumn":67},{"ruleId":"954","severity":1,"message":"955","line":59,"column":54,"nodeType":"956","messageId":"957","endLine":59,"endColumn":56},{"ruleId":"958","severity":1,"message":"959","line":83,"column":8,"nodeType":"960","endLine":83,"endColumn":26,"suggestions":"961"},{"ruleId":"947","severity":1,"message":"962","line":6,"column":8,"nodeType":"949","messageId":"950","endLine":6,"endColumn":19},{"ruleId":"947","severity":1,"message":"963","line":4,"column":10,"nodeType":"949","messageId":"950","endLine":4,"endColumn":18},{"ruleId":"964","severity":1,"message":"951","line":1,"column":10,"nodeType":"949","messageId":"950","endLine":1,"endColumn":13},{"ruleId":"965","severity":1,"message":"966","line":179,"column":13,"nodeType":"967","messageId":"968","endLine":179,"endColumn":34},{"ruleId":"965","severity":1,"message":"966","line":193,"column":13,"nodeType":"967","messageId":"968","endLine":193,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":207,"column":13,"nodeType":"967","messageId":"968","endLine":207,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":262,"column":13,"nodeType":"967","messageId":"968","endLine":262,"endColumn":34},{"ruleId":"965","severity":1,"message":"966","line":276,"column":13,"nodeType":"967","messageId":"968","endLine":276,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":290,"column":13,"nodeType":"967","messageId":"968","endLine":290,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":324,"column":13,"nodeType":"967","messageId":"968","endLine":324,"endColumn":31},{"ruleId":"965","severity":1,"message":"966","line":337,"column":13,"nodeType":"967","messageId":"968","endLine":337,"endColumn":32},{"ruleId":"965","severity":1,"message":"966","line":350,"column":13,"nodeType":"967","messageId":"968","endLine":350,"endColumn":28},{"ruleId":"965","severity":1,"message":"966","line":384,"column":13,"nodeType":"967","messageId":"968","endLine":384,"endColumn":31},{"ruleId":"965","severity":1,"message":"966","line":397,"column":13,"nodeType":"967","messageId":"968","endLine":397,"endColumn":32},{"ruleId":"965","severity":1,"message":"966","line":410,"column":13,"nodeType":"967","messageId":"968","endLine":410,"endColumn":28},{"ruleId":"965","severity":1,"message":"966","line":484,"column":13,"nodeType":"967","messageId":"968","endLine":484,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":533,"column":13,"nodeType":"967","messageId":"968","endLine":533,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":937,"column":13,"nodeType":"967","messageId":"968","endLine":937,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":950,"column":13,"nodeType":"967","messageId":"968","endLine":950,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":994,"column":11,"nodeType":"967","messageId":"968","endLine":994,"endColumn":23},{"ruleId":"965","severity":1,"message":"966","line":1007,"column":11,"nodeType":"967","messageId":"968","endLine":1007,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":1052,"column":13,"nodeType":"967","messageId":"968","endLine":1052,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":1065,"column":13,"nodeType":"967","messageId":"968","endLine":1065,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":1109,"column":13,"nodeType":"967","messageId":"968","endLine":1109,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":1122,"column":13,"nodeType":"967","messageId":"968","endLine":1122,"endColumn":27},{"ruleId":"947","severity":1,"message":"969","line":3,"column":43,"nodeType":"949","messageId":"950","endLine":3,"endColumn":49},{"ruleId":"965","severity":1,"message":"966","line":296,"column":43,"nodeType":"967","messageId":"968","endLine":296,"endColumn":57},{"ruleId":"965","severity":1,"message":"966","line":318,"column":47,"nodeType":"967","messageId":"968","endLine":318,"endColumn":61},{"ruleId":"947","severity":1,"message":"970","line":40,"column":12,"nodeType":"949","messageId":"950","endLine":40,"endColumn":22},{"ruleId":"947","severity":1,"message":"971","line":53,"column":11,"nodeType":"949","messageId":"950","endLine":53,"endColumn":28},{"ruleId":"954","severity":1,"message":"955","line":98,"column":88,"nodeType":"956","messageId":"957","endLine":98,"endColumn":90},{"ruleId":"954","severity":1,"message":"955","line":105,"column":90,"nodeType":"956","messageId":"957","endLine":105,"endColumn":92},{"ruleId":"965","severity":1,"message":"966","line":137,"column":85,"nodeType":"967","messageId":"968","endLine":137,"endColumn":110},{"ruleId":"943","replacedBy":"972"},{"ruleId":"945","replacedBy":"973"},{"ruleId":"947","severity":1,"message":"974","line":1,"column":36,"nodeType":"949","messageId":"950","endLine":1,"endColumn":42},{"ruleId":"947","severity":1,"message":"975","line":1,"column":44,"nodeType":"949","messageId":"950","endLine":1,"endColumn":54},{"ruleId":"947","severity":1,"message":"976","line":2,"column":10,"nodeType":"949","messageId":"950","endLine":2,"endColumn":24},{"ruleId":"947","severity":1,"message":"977","line":9,"column":19,"nodeType":"949","messageId":"950","endLine":9,"endColumn":27},{"ruleId":"954","severity":1,"message":"955","line":86,"column":66,"nodeType":"956","messageId":"957","endLine":86,"endColumn":68},{"ruleId":"958","severity":1,"message":"978","line":102,"column":8,"nodeType":"960","endLine":102,"endColumn":26,"suggestions":"979"},{"ruleId":"954","severity":1,"message":"955","line":63,"column":56,"nodeType":"956","messageId":"957","endLine":63,"endColumn":58},{"ruleId":"965","severity":1,"message":"966","line":83,"column":17,"nodeType":"967","messageId":"968","endLine":83,"endColumn":37},{"ruleId":"965","severity":1,"message":"966","line":90,"column":17,"nodeType":"967","messageId":"968","endLine":90,"endColumn":37},{"ruleId":"965","severity":1,"message":"966","line":113,"column":17,"nodeType":"967","messageId":"968","endLine":113,"endColumn":37},{"ruleId":"965","severity":1,"message":"966","line":204,"column":51,"nodeType":"967","messageId":"968","endLine":204,"endColumn":65},{"ruleId":"954","severity":1,"message":"955","line":43,"column":54,"nodeType":"956","messageId":"957","endLine":43,"endColumn":56},{"ruleId":"958","severity":1,"message":"980","line":56,"column":12,"nodeType":"960","endLine":56,"endColumn":14,"suggestions":"981"},{"ruleId":"954","severity":1,"message":"955","line":50,"column":65,"nodeType":"956","messageId":"957","endLine":50,"endColumn":67},{"ruleId":"954","severity":1,"message":"955","line":58,"column":54,"nodeType":"956","messageId":"957","endLine":58,"endColumn":56},{"ruleId":"958","severity":1,"message":"982","line":82,"column":8,"nodeType":"960","endLine":82,"endColumn":26,"suggestions":"983"},{"ruleId":"947","severity":1,"message":"984","line":2,"column":15,"nodeType":"949","messageId":"950","endLine":2,"endColumn":25},{"ruleId":"947","severity":1,"message":"985","line":13,"column":8,"nodeType":"949","messageId":"950","endLine":13,"endColumn":20},{"ruleId":"947","severity":1,"message":"986","line":23,"column":12,"nodeType":"949","messageId":"950","endLine":23,"endColumn":24},{"ruleId":"947","severity":1,"message":"987","line":23,"column":26,"nodeType":"949","messageId":"950","endLine":23,"endColumn":41},{"ruleId":"954","severity":1,"message":"955","line":34,"column":56,"nodeType":"956","messageId":"957","endLine":34,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":47,"column":8,"nodeType":"960","endLine":47,"endColumn":17,"suggestions":"989"},{"ruleId":"965","severity":1,"message":"966","line":71,"column":65,"nodeType":"967","messageId":"968","endLine":71,"endColumn":90},{"ruleId":"965","severity":1,"message":"966","line":74,"column":89,"nodeType":"967","messageId":"968","endLine":74,"endColumn":114},{"ruleId":"947","severity":1,"message":"974","line":4,"column":39,"nodeType":"949","messageId":"950","endLine":4,"endColumn":45},{"ruleId":"947","severity":1,"message":"990","line":4,"column":47,"nodeType":"949","messageId":"950","endLine":4,"endColumn":55},{"ruleId":"947","severity":1,"message":"984","line":4,"column":57,"nodeType":"949","messageId":"950","endLine":4,"endColumn":67},{"ruleId":"965","severity":1,"message":"966","line":127,"column":60,"nodeType":"967","messageId":"968","endLine":127,"endColumn":74},{"ruleId":"947","severity":1,"message":"991","line":1,"column":8,"nodeType":"949","messageId":"950","endLine":1,"endColumn":20},{"ruleId":"947","severity":1,"message":"951","line":1,"column":28,"nodeType":"949","messageId":"950","endLine":1,"endColumn":31},{"ruleId":"965","severity":1,"message":"966","line":46,"column":53,"nodeType":"967","messageId":"968","endLine":46,"endColumn":65},{"ruleId":"965","severity":1,"message":"966","line":47,"column":52,"nodeType":"967","messageId":"968","endLine":47,"endColumn":66},{"ruleId":"947","severity":1,"message":"974","line":1,"column":91,"nodeType":"949","messageId":"950","endLine":1,"endColumn":97},{"ruleId":"947","severity":1,"message":"992","line":10,"column":10,"nodeType":"949","messageId":"950","endLine":10,"endColumn":21},{"ruleId":"958","severity":1,"message":"988","line":40,"column":8,"nodeType":"960","endLine":40,"endColumn":10,"suggestions":"993"},{"ruleId":"965","severity":1,"message":"966","line":98,"column":52,"nodeType":"967","messageId":"968","endLine":98,"endColumn":72},{"ruleId":"965","severity":1,"message":"966","line":99,"column":52,"nodeType":"967","messageId":"968","endLine":99,"endColumn":66},{"ruleId":"954","severity":1,"message":"955","line":48,"column":56,"nodeType":"956","messageId":"957","endLine":48,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":58,"column":8,"nodeType":"960","endLine":58,"endColumn":17,"suggestions":"994"},{"ruleId":"965","severity":1,"message":"966","line":122,"column":68,"nodeType":"967","messageId":"968","endLine":122,"endColumn":79},{"ruleId":"965","severity":1,"message":"966","line":123,"column":67,"nodeType":"967","messageId":"968","endLine":123,"endColumn":77},{"ruleId":"947","severity":1,"message":"995","line":2,"column":10,"nodeType":"949","messageId":"950","endLine":2,"endColumn":19},{"ruleId":"947","severity":1,"message":"963","line":2,"column":21,"nodeType":"949","messageId":"950","endLine":2,"endColumn":29},{"ruleId":"965","severity":1,"message":"966","line":59,"column":56,"nodeType":"967","messageId":"968","endLine":59,"endColumn":76},{"ruleId":"947","severity":1,"message":"996","line":4,"column":52,"nodeType":"949","messageId":"950","endLine":4,"endColumn":63},{"ruleId":"947","severity":1,"message":"969","line":4,"column":65,"nodeType":"949","messageId":"950","endLine":4,"endColumn":71},{"ruleId":"947","severity":1,"message":"997","line":10,"column":33,"nodeType":"949","messageId":"950","endLine":10,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":48,"column":8,"nodeType":"960","endLine":48,"endColumn":10,"suggestions":"998"},{"ruleId":"954","severity":1,"message":"955","line":57,"column":77,"nodeType":"956","messageId":"957","endLine":57,"endColumn":79},{"ruleId":"954","severity":1,"message":"955","line":64,"column":56,"nodeType":"956","messageId":"957","endLine":64,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":72,"column":8,"nodeType":"960","endLine":72,"endColumn":14,"suggestions":"999"},{"ruleId":"947","severity":1,"message":"1000","line":16,"column":29,"nodeType":"949","messageId":"950","endLine":16,"endColumn":33},{"ruleId":"947","severity":1,"message":"1001","line":16,"column":35,"nodeType":"949","messageId":"950","endLine":16,"endColumn":43},{"ruleId":"947","severity":1,"message":"1002","line":1,"column":50,"nodeType":"949","messageId":"950","endLine":1,"endColumn":57},{"ruleId":"947","severity":1,"message":"1003","line":14,"column":34,"nodeType":"949","messageId":"950","endLine":14,"endColumn":39},{"ruleId":"965","severity":1,"message":"966","line":75,"column":31,"nodeType":"967","messageId":"968","endLine":75,"endColumn":45},{"ruleId":"965","severity":1,"message":"966","line":49,"column":19,"nodeType":"967","messageId":"968","endLine":49,"endColumn":41},{"ruleId":"965","severity":1,"message":"966","line":58,"column":19,"nodeType":"967","messageId":"968","endLine":58,"endColumn":36},{"ruleId":"965","severity":1,"message":"966","line":62,"column":19,"nodeType":"967","messageId":"968","endLine":62,"endColumn":38},{"ruleId":"965","severity":1,"message":"966","line":119,"column":19,"nodeType":"967","messageId":"968","endLine":119,"endColumn":41},{"ruleId":"965","severity":1,"message":"966","line":129,"column":19,"nodeType":"967","messageId":"968","endLine":129,"endColumn":36},{"ruleId":"965","severity":1,"message":"966","line":134,"column":19,"nodeType":"967","messageId":"968","endLine":134,"endColumn":38},{"ruleId":"943","replacedBy":"1004"},{"ruleId":"945","replacedBy":"1005"},{"ruleId":"947","severity":1,"message":"948","line":1,"column":10,"nodeType":"949","messageId":"950","endLine":1,"endColumn":26},{"ruleId":"943","replacedBy":"1004"},{"ruleId":"945","replacedBy":"1005"},{"ruleId":"947","severity":1,"message":"970","line":40,"column":12,"nodeType":"949","messageId":"950","endLine":40,"endColumn":22},{"ruleId":"947","severity":1,"message":"971","line":53,"column":11,"nodeType":"949","messageId":"950","endLine":53,"endColumn":28},{"ruleId":"954","severity":1,"message":"955","line":98,"column":88,"nodeType":"956","messageId":"957","endLine":98,"endColumn":90},{"ruleId":"954","severity":1,"message":"955","line":105,"column":90,"nodeType":"956","messageId":"957","endLine":105,"endColumn":92},{"ruleId":"965","severity":1,"message":"966","line":137,"column":85,"nodeType":"967","messageId":"968","endLine":137,"endColumn":110},{"ruleId":"954","severity":1,"message":"955","line":51,"column":65,"nodeType":"956","messageId":"957","endLine":51,"endColumn":67},{"ruleId":"954","severity":1,"message":"955","line":59,"column":54,"nodeType":"956","messageId":"957","endLine":59,"endColumn":56},{"ruleId":"958","severity":1,"message":"959","line":83,"column":8,"nodeType":"960","endLine":83,"endColumn":26,"suggestions":"1006"},{"ruleId":"954","severity":1,"message":"955","line":48,"column":56,"nodeType":"956","messageId":"957","endLine":48,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":58,"column":8,"nodeType":"960","endLine":58,"endColumn":17,"suggestions":"1007"},{"ruleId":"965","severity":1,"message":"966","line":122,"column":68,"nodeType":"967","messageId":"968","endLine":122,"endColumn":79},{"ruleId":"965","severity":1,"message":"966","line":123,"column":67,"nodeType":"967","messageId":"968","endLine":123,"endColumn":77},{"ruleId":"954","severity":1,"message":"955","line":86,"column":66,"nodeType":"956","messageId":"957","endLine":86,"endColumn":68},{"ruleId":"958","severity":1,"message":"978","line":102,"column":8,"nodeType":"960","endLine":102,"endColumn":26,"suggestions":"1008"},{"ruleId":"954","severity":1,"message":"955","line":63,"column":56,"nodeType":"956","messageId":"957","endLine":63,"endColumn":58},{"ruleId":"965","severity":1,"message":"966","line":83,"column":17,"nodeType":"967","messageId":"968","endLine":83,"endColumn":37},{"ruleId":"965","severity":1,"message":"966","line":90,"column":17,"nodeType":"967","messageId":"968","endLine":90,"endColumn":37},{"ruleId":"965","severity":1,"message":"966","line":113,"column":17,"nodeType":"967","messageId":"968","endLine":113,"endColumn":37},{"ruleId":"947","severity":1,"message":"962","line":6,"column":8,"nodeType":"949","messageId":"950","endLine":6,"endColumn":19},{"ruleId":"947","severity":1,"message":"984","line":2,"column":15,"nodeType":"949","messageId":"950","endLine":2,"endColumn":25},{"ruleId":"947","severity":1,"message":"985","line":13,"column":8,"nodeType":"949","messageId":"950","endLine":13,"endColumn":20},{"ruleId":"947","severity":1,"message":"986","line":23,"column":12,"nodeType":"949","messageId":"950","endLine":23,"endColumn":24},{"ruleId":"947","severity":1,"message":"987","line":23,"column":26,"nodeType":"949","messageId":"950","endLine":23,"endColumn":41},{"ruleId":"954","severity":1,"message":"955","line":34,"column":56,"nodeType":"956","messageId":"957","endLine":34,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":47,"column":8,"nodeType":"960","endLine":47,"endColumn":17,"suggestions":"1009"},{"ruleId":"965","severity":1,"message":"966","line":71,"column":65,"nodeType":"967","messageId":"968","endLine":71,"endColumn":90},{"ruleId":"965","severity":1,"message":"966","line":74,"column":89,"nodeType":"967","messageId":"968","endLine":74,"endColumn":114},{"ruleId":"947","severity":1,"message":"996","line":4,"column":52,"nodeType":"949","messageId":"950","endLine":4,"endColumn":63},{"ruleId":"947","severity":1,"message":"969","line":4,"column":65,"nodeType":"949","messageId":"950","endLine":4,"endColumn":71},{"ruleId":"947","severity":1,"message":"997","line":10,"column":33,"nodeType":"949","messageId":"950","endLine":10,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":48,"column":8,"nodeType":"960","endLine":48,"endColumn":10,"suggestions":"1010"},{"ruleId":"954","severity":1,"message":"955","line":57,"column":77,"nodeType":"956","messageId":"957","endLine":57,"endColumn":79},{"ruleId":"954","severity":1,"message":"955","line":64,"column":56,"nodeType":"956","messageId":"957","endLine":64,"endColumn":58},{"ruleId":"958","severity":1,"message":"988","line":72,"column":8,"nodeType":"960","endLine":72,"endColumn":14,"suggestions":"1011"},{"ruleId":"965","severity":1,"message":"966","line":49,"column":19,"nodeType":"967","messageId":"968","endLine":49,"endColumn":41},{"ruleId":"965","severity":1,"message":"966","line":58,"column":19,"nodeType":"967","messageId":"968","endLine":58,"endColumn":36},{"ruleId":"965","severity":1,"message":"966","line":62,"column":19,"nodeType":"967","messageId":"968","endLine":62,"endColumn":38},{"ruleId":"965","severity":1,"message":"966","line":119,"column":19,"nodeType":"967","messageId":"968","endLine":119,"endColumn":41},{"ruleId":"965","severity":1,"message":"966","line":129,"column":19,"nodeType":"967","messageId":"968","endLine":129,"endColumn":36},{"ruleId":"965","severity":1,"message":"966","line":134,"column":19,"nodeType":"967","messageId":"968","endLine":134,"endColumn":38},{"ruleId":"964","severity":1,"message":"951","line":1,"column":10,"nodeType":"949","messageId":"950","endLine":1,"endColumn":13},{"ruleId":"965","severity":1,"message":"966","line":179,"column":13,"nodeType":"967","messageId":"968","endLine":179,"endColumn":34},{"ruleId":"965","severity":1,"message":"966","line":193,"column":13,"nodeType":"967","messageId":"968","endLine":193,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":207,"column":13,"nodeType":"967","messageId":"968","endLine":207,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":262,"column":13,"nodeType":"967","messageId":"968","endLine":262,"endColumn":34},{"ruleId":"965","severity":1,"message":"966","line":276,"column":13,"nodeType":"967","messageId":"968","endLine":276,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":290,"column":13,"nodeType":"967","messageId":"968","endLine":290,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":324,"column":13,"nodeType":"967","messageId":"968","endLine":324,"endColumn":31},{"ruleId":"965","severity":1,"message":"966","line":337,"column":13,"nodeType":"967","messageId":"968","endLine":337,"endColumn":32},{"ruleId":"965","severity":1,"message":"966","line":350,"column":13,"nodeType":"967","messageId":"968","endLine":350,"endColumn":28},{"ruleId":"965","severity":1,"message":"966","line":384,"column":13,"nodeType":"967","messageId":"968","endLine":384,"endColumn":31},{"ruleId":"965","severity":1,"message":"966","line":397,"column":13,"nodeType":"967","messageId":"968","endLine":397,"endColumn":32},{"ruleId":"965","severity":1,"message":"966","line":410,"column":13,"nodeType":"967","messageId":"968","endLine":410,"endColumn":28},{"ruleId":"965","severity":1,"message":"966","line":484,"column":13,"nodeType":"967","messageId":"968","endLine":484,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":533,"column":13,"nodeType":"967","messageId":"968","endLine":533,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":937,"column":13,"nodeType":"967","messageId":"968","endLine":937,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":950,"column":13,"nodeType":"967","messageId":"968","endLine":950,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":994,"column":11,"nodeType":"967","messageId":"968","endLine":994,"endColumn":23},{"ruleId":"965","severity":1,"message":"966","line":1007,"column":11,"nodeType":"967","messageId":"968","endLine":1007,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":1052,"column":13,"nodeType":"967","messageId":"968","endLine":1052,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":1065,"column":13,"nodeType":"967","messageId":"968","endLine":1065,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":1109,"column":13,"nodeType":"967","messageId":"968","endLine":1109,"endColumn":25},{"ruleId":"965","severity":1,"message":"966","line":1122,"column":13,"nodeType":"967","messageId":"968","endLine":1122,"endColumn":27},{"ruleId":"947","severity":1,"message":"963","line":4,"column":10,"nodeType":"949","messageId":"950","endLine":4,"endColumn":18},{"ruleId":"947","severity":1,"message":"995","line":2,"column":10,"nodeType":"949","messageId":"950","endLine":2,"endColumn":19},{"ruleId":"947","severity":1,"message":"963","line":2,"column":21,"nodeType":"949","messageId":"950","endLine":2,"endColumn":29},{"ruleId":"965","severity":1,"message":"966","line":59,"column":56,"nodeType":"967","messageId":"968","endLine":59,"endColumn":76},{"ruleId":"965","severity":1,"message":"966","line":318,"column":47,"nodeType":"967","messageId":"968","endLine":318,"endColumn":61},{"ruleId":"965","severity":1,"message":"966","line":296,"column":43,"nodeType":"967","messageId":"968","endLine":296,"endColumn":57},{"ruleId":"947","severity":1,"message":"974","line":1,"column":91,"nodeType":"949","messageId":"950","endLine":1,"endColumn":97},{"ruleId":"947","severity":1,"message":"992","line":10,"column":10,"nodeType":"949","messageId":"950","endLine":10,"endColumn":21},{"ruleId":"958","severity":1,"message":"988","line":40,"column":8,"nodeType":"960","endLine":40,"endColumn":10,"suggestions":"1012"},{"ruleId":"965","severity":1,"message":"966","line":98,"column":52,"nodeType":"967","messageId":"968","endLine":98,"endColumn":72},{"ruleId":"965","severity":1,"message":"966","line":99,"column":52,"nodeType":"967","messageId":"968","endLine":99,"endColumn":66},{"ruleId":"947","severity":1,"message":"951","line":1,"column":28,"nodeType":"949","messageId":"950","endLine":1,"endColumn":31},{"ruleId":"965","severity":1,"message":"966","line":46,"column":53,"nodeType":"967","messageId":"968","endLine":46,"endColumn":65},{"ruleId":"965","severity":1,"message":"966","line":47,"column":52,"nodeType":"967","messageId":"968","endLine":47,"endColumn":66},{"ruleId":"947","severity":1,"message":"991","line":1,"column":8,"nodeType":"949","messageId":"950","endLine":1,"endColumn":20},{"ruleId":"947","severity":1,"message":"974","line":4,"column":39,"nodeType":"949","messageId":"950","endLine":4,"endColumn":45},{"ruleId":"947","severity":1,"message":"990","line":4,"column":47,"nodeType":"949","messageId":"950","endLine":4,"endColumn":55},{"ruleId":"947","severity":1,"message":"984","line":4,"column":57,"nodeType":"949","messageId":"950","endLine":4,"endColumn":67},{"ruleId":"965","severity":1,"message":"966","line":127,"column":60,"nodeType":"967","messageId":"968","endLine":127,"endColumn":74},{"ruleId":"954","severity":1,"message":"955","line":50,"column":65,"nodeType":"956","messageId":"957","endLine":50,"endColumn":67},{"ruleId":"954","severity":1,"message":"955","line":58,"column":54,"nodeType":"956","messageId":"957","endLine":58,"endColumn":56},{"ruleId":"958","severity":1,"message":"982","line":82,"column":8,"nodeType":"960","endLine":82,"endColumn":26,"suggestions":"1013"},{"ruleId":"954","severity":1,"message":"955","line":43,"column":54,"nodeType":"956","messageId":"957","endLine":43,"endColumn":56},{"ruleId":"958","severity":1,"message":"980","line":56,"column":12,"nodeType":"960","endLine":56,"endColumn":14,"suggestions":"1014"},{"ruleId":"947","severity":1,"message":"1000","line":16,"column":29,"nodeType":"949","messageId":"950","endLine":16,"endColumn":33},{"ruleId":"947","severity":1,"message":"1001","line":16,"column":35,"nodeType":"949","messageId":"950","endLine":16,"endColumn":43},{"ruleId":"947","severity":1,"message":"974","line":1,"column":36,"nodeType":"949","messageId":"950","endLine":1,"endColumn":42},{"ruleId":"947","severity":1,"message":"975","line":1,"column":44,"nodeType":"949","messageId":"950","endLine":1,"endColumn":54},{"ruleId":"947","severity":1,"message":"976","line":2,"column":10,"nodeType":"949","messageId":"950","endLine":2,"endColumn":24},{"ruleId":"947","severity":1,"message":"977","line":9,"column":19,"nodeType":"949","messageId":"950","endLine":9,"endColumn":27},{"ruleId":"965","severity":1,"message":"966","line":204,"column":51,"nodeType":"967","messageId":"968","endLine":204,"endColumn":65},{"ruleId":"947","severity":1,"message":"1002","line":1,"column":50,"nodeType":"949","messageId":"950","endLine":1,"endColumn":57},{"ruleId":"947","severity":1,"message":"1003","line":14,"column":34,"nodeType":"949","messageId":"950","endLine":14,"endColumn":39},{"ruleId":"965","severity":1,"message":"966","line":75,"column":31,"nodeType":"967","messageId":"968","endLine":75,"endColumn":45},{"ruleId":"943","replacedBy":"1015"},{"ruleId":"945","replacedBy":"1016"},"no-native-reassign",["1017"],"no-negated-in-lhs",["1018"],"@typescript-eslint/no-unused-vars","'MuiThemeProvider' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.",["1017"],["1018"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'from', 'loggedInUser?.id', and 'to'. Either include them or remove the dependency array.","ArrayExpression",["1019"],"'LanguageTab' is defined but never used.","'useState' is defined but never used.","no-unused-vars","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","'Button' is defined but never used.","'initValues' is assigned a value but never used.","'handleDialogClose' is assigned a value but never used.",["1017"],["1018"],"'Select' is defined but never used.","'InputLabel' is defined but never used.","'SetStateAction' is defined but never used.","'setValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'from', 'to', and 'updateSnackBarMessage'. Either include them or remove the dependency array.",["1020"],"React Hook useEffect has a missing dependency: 'clientId'. Either include it or remove the dependency array.",["1021"],"React Hook useEffect has missing dependencies: 'clientId', 'from', and 'to'. Either include them or remove the dependency array.",["1022"],"'Typography' is defined but never used.","'CustomButton' is defined but never used.","'dialogUpdate' is assigned a value but never used.","'setDialogUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateSnackBarMessage'. Either include it or remove the dependency array.",["1023"],"'MenuItem' is defined but never used.","'CustomDialog' is defined but never used.","'Reservation' is defined but never used.",["1024"],["1025"],"'useEffect' is defined but never used.","'CardActions' is defined but never used.","'GetStatInfoApiDataSuccess' is defined but never used.",["1026"],["1027"],"'root' is assigned a value but never used.","'tabStyle' is assigned a value but never used.","'Divider' is defined but never used.","'label' is assigned a value but never used.",["1017"],["1018"],["1028"],["1029"],["1030"],["1031"],["1032"],["1033"],["1034"],["1035"],["1036"],["1017"],["1018"],"no-global-assign","no-unsafe-negation",{"desc":"1037","fix":"1038"},{"desc":"1039","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},{"desc":"1047","fix":"1048"},{"desc":"1045","fix":"1049"},{"desc":"1047","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1037","fix":"1053"},{"desc":"1045","fix":"1054"},{"desc":"1039","fix":"1055"},{"desc":"1045","fix":"1056"},{"desc":"1047","fix":"1057"},{"desc":"1051","fix":"1058"},{"desc":"1047","fix":"1059"},{"desc":"1043","fix":"1060"},{"desc":"1041","fix":"1061"},"Update the dependencies array to be: [from, loggedInUser?.id, to, useEffectTrigger]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [from, to, updateSnackBarMessage, useEffectTrigger]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [clientId]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [clientId, from, to, useEffectTrigger]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [history, updateSnackBarMessage]",{"range":"1070","text":"1071"},"Update the dependencies array to be: [updateSnackBarMessage]",{"range":"1072","text":"1073"},{"range":"1074","text":"1071"},{"range":"1075","text":"1073"},"Update the dependencies array to be: [stat, updateSnackBarMessage]",{"range":"1076","text":"1077"},{"range":"1078","text":"1063"},{"range":"1079","text":"1071"},{"range":"1080","text":"1065"},{"range":"1081","text":"1071"},{"range":"1082","text":"1073"},{"range":"1083","text":"1077"},{"range":"1084","text":"1073"},{"range":"1085","text":"1069"},{"range":"1086","text":"1067"},[3685,3703],"[from, loggedInUser?.id, to, useEffectTrigger]",[4187,4205],"[from, to, updateSnackBarMessage, useEffectTrigger]",[2323,2325],"[clientId]",[3612,3630],"[clientId, from, to, useEffectTrigger]",[2176,2185],"[history, updateSnackBarMessage]",[1556,1558],"[updateSnackBarMessage]",[2346,2355],[1985,1987],[2945,2951],"[stat, updateSnackBarMessage]",[3685,3703],[2346,2355],[4187,4205],[2176,2185],[1985,1987],[2945,2951],[1556,1558],[3612,3630],[2323,2325]]