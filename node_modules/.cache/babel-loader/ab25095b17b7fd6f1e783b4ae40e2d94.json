{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/LoginForm/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CircularProgress, InputLabel, TextField, Box, Button, Grid } from '@material-ui/core';\nimport useStyles from './useStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(_ref) {\n  _s();\n\n  let {\n    handleSubmit\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      validationSchema: Yup.object().shape({\n        username: Yup.string().required('Username is reqeuired!').min(3, 'Username is too short'),\n        password: Yup.string().required('Password is requried!').min(5, 'Password is too short!')\n      }),\n      onSubmit: handleSubmit,\n      children: _ref2 => {\n        let {\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors,\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: classes.form,\n          noValidate: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  className: classes.label,\n                  children: \"username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"username\",\n                  name: \"username\",\n                  error: Boolean(errors.username),\n                  helperText: errors.username,\n                  value: values.username,\n                  onChange: handleChange,\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  InputProps: {\n                    classes: {\n                      input: classes.inputs\n                    },\n                    disableUnderline: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n                  className: classes.label,\n                  children: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"password\",\n                  name: \"password\",\n                  error: Boolean(errors.password),\n                  helperText: errors.password,\n                  value: values.password,\n                  onChange: handleChange,\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  InputProps: {\n                    classes: {\n                      input: classes.inputs\n                    },\n                    disableUnderline: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.submit,\n                  children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    className: classes.circularProgress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 45\n                  }, this) : 'Login'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Login/LoginForm/LoginForm.tsx"],"names":["Formik","Yup","CircularProgress","InputLabel","TextField","Box","Button","Grid","useStyles","LoginForm","handleSubmit","classes","username","password","object","shape","string","required","min","handleChange","values","touched","errors","isSubmitting","form","label","Boolean","shrink","input","inputs","disableUnderline","submit","circularProgress"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CircularProgress, InputLabel, TextField, Box, Button, Grid } from '@material-ui/core';\nimport useStyles from './useStyles';\n\ninterface Props {\n    handleSubmit: () => void;\n}\n\nfunction LoginForm ({ handleSubmit }: Props): JSX.Element { \n    const classes = useStyles();\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    username: '',\n                    password: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    username: Yup.string().required('Username is reqeuired!').min(3, 'Username is too short'),\n                    password: Yup.string().required('Password is requried!').min(5, 'Password is too short!')\n                })}\n                onSubmit={handleSubmit}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Box>\n                    <Grid container direction='column' justifyContent='center' alignItems='center'>\n                        <Grid item>\n                            <InputLabel className={classes.label}>\n                                username\n                            </InputLabel>\n                            <TextField\n                                id='username'\n                                name='username'\n                                error={Boolean(errors.username)}\n                                helperText={errors.username}\n                                value={values.username}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    classes: { input: classes.inputs },\n                                    disableUnderline: true\n                                }}\n\n                            />\n                            <InputLabel className={classes.label}>\n                                password\n                            </InputLabel>\n                            <TextField\n                                id='password'\n                                name='password'\n                                error={Boolean(errors.password)}\n                                helperText={errors.password}\n                                value={values.password}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    classes: { input: classes.inputs },\n                                    disableUnderline: true\n                                }}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            {isSubmitting ? <CircularProgress className={classes.circularProgress} /> : 'Login'} \n                            </Button>\n                        </Grid>\n                    </Grid> \n                    </Box>\n                </form>\n                )}   \n            </Formik>\n        </>\n    )\n}\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}