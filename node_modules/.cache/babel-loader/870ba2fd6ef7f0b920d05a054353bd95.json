{"ast":null,"code":"import{Formik}from\"formik\";import{Grid,InputLabel,Select,MenuItem,FormHelperText,TextField}from'@material-ui/core';import*as Yup from'yup';import useStyles from\"./useStyles\";import CustomButton from'../../../../../components/Button/CustomButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var currencies=[{value:'TL',label:'TL'},{value:'USD',label:'$'},{value:'EUR',label:'â‚¬'}];;function AddPaymentForm(_ref){var form=_ref.form,handleSubmit=_ref.handleSubmit,clientId=_ref.clientId;var type=form.type,note=form.note,paid=form.paid,currency=form.currency,exchangeRate=form.exchangeRate,paidInTL=form.paidInTL;var classes=useStyles();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{clientId:clientId,type:'',paid:0,currency:'TL',exchangeRate:0,paidInTL:0,note:''},validationSchema:Yup.object().shape({type:Yup.string().required('This Field is required'),paid:Yup.number().min(1).default(0),currency:Yup.string().required('This Field is required'),exchangeRate:Yup.number().min(1).default(1),paidInTL:Yup.number().min(1).default(1),note:Yup.string()}),onSubmit:function onSubmit(values){handleSubmit(values);},children:function children(_ref2){var handleSubmit=_ref2.handleSubmit,handleChange=_ref2.handleChange,values=_ref2.values,touched=_ref2.touched,errors=_ref2.errors,isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,className:classes.form,noValidate:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Grid,{item:true,container:true,className:classes.itemContainer,spacing:4,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"type\",className:classes.inputLabel,children:type}),/*#__PURE__*/_jsxs(Select,{id:\"type\",name:\"type\",autoWidth:true,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},value:values.type,onChange:handleChange,classes:{select:classes.select},children:[/*#__PURE__*/_jsx(MenuItem,{value:'cash',children:\"cash\"}),/*#__PURE__*/_jsx(MenuItem,{value:'credit card',children:\"credit card\"})]}),/*#__PURE__*/_jsx(FormHelperText,{error:Boolean(errors.type),children:errors.type})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:note}),/*#__PURE__*/_jsx(TextField,{id:\"note\",name:\"note\",error:Boolean(errors.note),helperText:errors.note,InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.note,onChange:handleChange})]})]})}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,className:classes.itemContainer,spacing:4,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:paid}),/*#__PURE__*/_jsx(TextField,{id:\"paid\",name:\"paid\",error:Boolean(errors.paid),helperText:errors.paid,InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.paid,onChange:handleChange})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:currency}),/*#__PURE__*/_jsx(Select,{id:\"currency\",name:\"currency\",autoWidth:true,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},value:values.currency,onChange:handleChange,classes:{select:classes.select},children:currencies.map(function(_ref3){var value=_ref3.value,label=_ref3.label;return/*#__PURE__*/_jsx(MenuItem,{value:value,children:label},label);})}),/*#__PURE__*/_jsx(FormHelperText,{error:Boolean(errors.currency),children:errors.currency})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,container:true,className:classes.itemContainer,spacing:4,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:exchangeRate}),/*#__PURE__*/_jsx(TextField,{id:\"exchangeRate\",name:\"exchangeRate\",error:Boolean(errors.exchangeRate),helperText:errors.exchangeRate,InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.currency==='TL'?values.exchangeRate=1:values.exchangeRate,onChange:handleChange})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:paidInTL}),/*#__PURE__*/_jsx(TextField,{id:\"paidInTL\",name:\"paidInTL\",error:Boolean(errors.paidInTL),helperText:errors.paidInTL,InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.paidInTL=values.paid*values.exchangeRate,onChange:handleChange})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(CustomButton,{style:\"submit\",btnText:\"submit\"})})]})]})});}})});}export default AddPaymentForm;","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx"],"names":["Formik","Grid","InputLabel","Select","MenuItem","FormHelperText","TextField","Yup","useStyles","CustomButton","currencies","value","label","AddPaymentForm","form","handleSubmit","clientId","type","note","paid","currency","exchangeRate","paidInTL","classes","object","shape","string","required","number","min","default","values","handleChange","touched","errors","isSubmitting","itemContainer","inputLabel","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","select","Boolean","input","inputs","disableUnderline","map"],"mappings":"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","sourcesContent":["import { Formik } from \"formik\";\nimport { Grid, InputLabel, Select, MenuItem, FormHelperText, TextField } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport CustomButton from '../../../../../components/Button/CustomButton';\nimport { Payment } from '../../../../../interface/AgencyPayment';\n\nconst currencies = [\n    {\n        value: 'TL',\n        label: 'TL',\n    },\n    {\n      value: 'USD',\n      label: '$',\n    },\n    {\n      value: 'EUR',\n      label: 'â‚¬',\n    },\n  ];\n\ninterface Props {\n    form: {\n        type: string;\n        paid: string;\n        currency: string;\n        note: string;\n        exchangeRate: string;\n        paidInTL: string;\n    },\n    handleSubmit: (inputs: Payment) => void;\n    clientId: string;\n};\n\nfunction AddPaymentForm({ form, handleSubmit, clientId }: Props): JSX.Element {\n    const { type, note, paid, currency, exchangeRate, paidInTL } = form;\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    clientId: clientId, \n                    type: '',\n                    paid: 0,\n                    currency: 'TL',\n                    exchangeRate: 0,\n                    paidInTL: 0,\n                    note: ''\n                 }}\n                 validationSchema={Yup.object().shape({ \n                    type: Yup.string().required('This Field is required'),\n                    paid: Yup.number().min(1).default(0),\n                    currency: Yup.string().required('This Field is required'),\n                    exchangeRate: Yup.number().min(1).default(1),\n                    paidInTL: Yup.number().min(1).default(1),\n                    note: Yup.string(),                    \n                })}\n                onSubmit={(values) => {handleSubmit(values)}}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors, isSubmitting, }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={'cash'}>cash</MenuItem>\n                                            <MenuItem value={'credit card'}>credit card</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {note}\n                                        </InputLabel>\n                                        <TextField \n                                            id='note'\n                                            name='note'\n                                            error={Boolean(errors.note)}\n                                            helperText={errors.note}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.note}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paid}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paid'\n                                            name='paid'\n                                            error={Boolean(errors.paid)}\n                                            helperText={errors.paid}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paid}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {currency}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"currency\"\n                                            name=\"currency\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.currency}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {currencies.map(({ value, label }) => (\n                                                <MenuItem key={label} value={value}>{label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.currency)}>{errors.currency}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {exchangeRate}\n                                        </InputLabel>\n                                        <TextField \n                                            id='exchangeRate'\n                                            name='exchangeRate'\n                                            error={Boolean(errors.exchangeRate)}\n                                            helperText={errors.exchangeRate}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.currency === 'TL' ?  values.exchangeRate = 1 : values.exchangeRate}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paidInTL}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paidInTL'\n                                            name='paidInTL'\n                                            error={Boolean(errors.paidInTL)}\n                                            helperText={errors.paidInTL}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paidInTL = values.paid * values.exchangeRate}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <CustomButton style=\"submit\" btnText=\"submit\" />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )}\n\n            </Formik>\n        </>\n    )\n}\nexport default AddPaymentForm;"]},"metadata":{},"sourceType":"module"}