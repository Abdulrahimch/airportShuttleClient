{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { Box } from '@material-ui/core';\nimport { useLanguage } from \"../../context/useLanguageContext\";\nimport { getmyPayments } from \"../../helpers/APICalls/agencyPayment\";\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { detailsEngColumns, detailsTurksihColumns } from '../../utils/dictionary';\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClientPayment() {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const [from, setFrom] = useState(new Date());\n  const date = new Date();\n  const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n  const {\n    language\n  } = useLanguage();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const history = useHistory();\n  const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n  useEffect(() => {\n    getmyPayments().then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        data.success.payment.map((item, idx) => {\n          item.id = idx + 1;\n          const date = new Date(item.createdAt);\n          item.createdAt = format(date, 'dd-MM-yyyy kk:mm');\n        });\n        setRows(data.success.payment);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      from: from,\n      to: to,\n      setFrom: setFrom,\n      setTo: setTo,\n      invokeUseEffect: invokeUseEffect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: detailsRows,\n      columns: detailsColumns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClientPayment, \"gRsjea8sRlUaQ186EdE2KkowOP4=\", false, function () {\n  return [useLanguage, useSnackBar, useHistory];\n});\n\n_c = ClientPayment;\nexport default ClientPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientPayment\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx"],"names":["DataTable","Box","useLanguage","getmyPayments","useSnackBar","useEffect","useState","useHistory","format","detailsEngColumns","detailsTurksihColumns","Search","ClientPayment","rows","setRows","from","setFrom","Date","date","to","setTo","setHours","getHours","language","updateSnackBarMessage","history","detailsColumns","then","data","error","success","payment","map","item","idx","id","createdAt","invokeUseEffect","detailsRows"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,sCAAtB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,aAAT,QAA8B,sCAA9B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,wBAAzD;AACA,SAASC,MAAT,QAAuB,oBAAvB;;;AAEA,SAASC,aAAT,GAAsC;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAK,EAAL,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAIW,IAAJ,EAAD,CAAhC;AACA,QAAMC,IAAI,GAAG,IAAID,IAAJ,EAAb;AACA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAcd,QAAQ,CAAC,IAAIW,IAAJ,CAASC,IAAI,CAACG,QAAL,CAAcH,IAAI,CAACI,QAAL,KAAkB,EAAhC,CAAT,CAAD,CAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAerB,WAAW,EAAhC;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAA4BpB,WAAW,EAA7C;AACA,QAAMqB,OAAO,GAAGlB,UAAU,EAA1B;AACA,QAAMmB,cAAc,GAAGH,QAAQ,KAAK,KAAb,GAAqBd,iBAAiB,EAAtC,GAA2CC,qBAAqB,EAAvF;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,aAAa,GAAGwB,IAAhB,CAAsBC,IAAD,IAAU;AAC3B,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXL,QAAAA,qBAAqB,CAACI,IAAI,CAACC,KAAN,CAArB;AACH,OAFD,MAEO,IAAID,IAAI,CAACE,OAAT,EAAiB;AACpBF,QAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAYC,GAAZ,KAA4B;AACjDD,UAAAA,IAAI,CAACE,EAAL,GAAUD,GAAG,GAAE,CAAf;AACA,gBAAMhB,IAAI,GAAG,IAAID,IAAJ,CAASgB,IAAI,CAACG,SAAd,CAAb;AACAH,UAAAA,IAAI,CAACG,SAAL,GAAiB5B,MAAM,CAACU,IAAD,EAAO,kBAAP,CAAvB;AACH,SAJD;AAKAJ,QAAAA,OAAO,CAACc,IAAI,CAACE,OAAL,CAAaC,OAAd,CAAP;AACH,OAPM,MAOA;AACHP,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KAbD;AAcH,GAfQ,EAeN,CAACC,OAAD,CAfM,CAAT;AAgBA,sBACI,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,aAAa,EAAC,QAAlC;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEV,IAAd;AAAoB,MAAA,EAAE,EAAEI,EAAxB;AAA4B,MAAA,OAAO,EAAEH,OAArC;AAA8C,MAAA,KAAK,EAAEI,KAArD;AAA4D,MAAA,eAAe,EAAEiB;AAA7E;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,WAAjB;AAA8B,MAAA,OAAO,EAAEZ;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAjCQd,a;UAKgBV,W,EACaE,W,EAClBG,U;;;KAPXK,a;AAmCT,eAAeA,aAAf","sourcesContent":["import DataTable from \"../../components/DataTable/DataTable\";\nimport { Box } from '@material-ui/core';\nimport { useLanguage } from \"../../context/useLanguageContext\";\nimport { getmyPayments } from \"../../helpers/APICalls/agencyPayment\";\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { format } from 'date-fns'; \nimport { detailsEngColumns, detailsTurksihColumns } from '../../utils/dictionary';\nimport { Search } from \"@material-ui/icons\";\n\nfunction ClientPayment(): JSX.Element {\n    const [rows, setRows] = useState<[]>([]);\n    const [from, setFrom] = useState(new Date());\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory();\n    const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n\n\n    useEffect(() => {\n        getmyPayments().then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                data.success.payment.map((item: any, idx: number) => {\n                    item.id = idx +1;\n                    const date = new Date(item.createdAt);\n                    item.createdAt = format(date, 'dd-MM-yyyy kk:mm')\n                });\n                setRows(data.success.payment);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }, [history])\n    return (\n        <Box display='flex' flexDirection='column'>\n        <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n        <DataTable rows={detailsRows} columns={detailsColumns} />\n    </Box>\n    )\n}\n\nexport default ClientPayment;"]},"metadata":{},"sourceType":"module"}