{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ClientHeader/ClientHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport useStyles from './useStyles';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Grid, SwipeableDrawer, ListItemText, ListItem, List, IconButton } from '@material-ui/core';\nimport { tabsDictionary } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport LanguageTab from '../LanguageTab/LanguageTab';\nimport Profile from '../Profile/Profile';\nimport { useState } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport theme from '../../Theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  englishTabs,\n  turkishTabs\n} = tabsDictionary;\n\nfunction ClientHeader() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    language\n  } = useLanguage();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const matches = useMediaQuery(theme.breakpoints.down('md'));\n  let tabs = []; // { label: 'new reservation', to: '/new-reservation' },\n  // { label: 'reservations', to: '/reservation' },\n  // { label: 'payments', to: '/payment' }\n\n  function tabFormation() {\n    if (language === 'tr') tabs = turkishTabs;else tabs = englishTabs;\n    return tabs.map((_ref, idx) => {\n      let {\n        label,\n        to\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Tab, {\n        label: label,\n        component: Link,\n        to: to,\n        className: classes.tabs\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  ;\n\n  const handleClick = () => {\n    setOpenDrawer(false);\n  };\n\n  const drawer = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n      open: openDrawer,\n      onClose: () => {\n        setOpenDrawer(false);\n      },\n      onOpen: () => {\n        setOpenDrawer(true);\n      },\n      classes: {\n        paper: classes.drawer\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarMargin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: handleClick,\n          component: Link,\n          to: '/new-reservation',\n          divider: true,\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: language === 'eng' ? 'New Reservation' : 'Yeni Rezervasyon'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: handleClick,\n          divider: true,\n          button: true,\n          component: Link,\n          to: '/reservation',\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: language === 'eng' ? 'Reservations' : 'Rezervasyonlar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: handleClick,\n          divider: true,\n          button: true,\n          component: Link,\n          to: '/payment',\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: language === 'eng' ? 'Payments' : 'Finans'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.drawerIcon,\n      onClick: () => {\n        setOpenDrawer(!openDrawer);\n      },\n      disableRipple: true,\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n        className: classes.drawerIconMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: matches ? drawer : /*#__PURE__*/_jsxDEV(Tabs, {\n        \"aria-label\": \"wrapped label tabs example\",\n        TabIndicatorProps: {\n          style: {\n            display: \"none\"\n          }\n        },\n        children: tabFormation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.gridItem,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(LanguageTab, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClientHeader, \"mZI/+UynYYd9MXeyWxWIbjksy0s=\", false, function () {\n  return [useStyles, useLanguage, useMediaQuery];\n});\n\n_c = ClientHeader;\nexport default ClientHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientHeader\");","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/ClientHeader/ClientHeader.tsx"],"names":["useStyles","Link","Tabs","Tab","Grid","SwipeableDrawer","ListItemText","ListItem","List","IconButton","tabsDictionary","useLanguage","LanguageTab","Profile","useState","MenuIcon","useMediaQuery","theme","englishTabs","turkishTabs","ClientHeader","classes","language","openDrawer","setOpenDrawer","matches","breakpoints","down","tabs","tabFormation","map","idx","label","to","handleClick","drawer","paper","toolbarMargin","drawerIcon","drawerIconMenu","root","style","display","gridItem"],"mappings":"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","sourcesContent":["import useStyles from './useStyles';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Grid, SwipeableDrawer, ListItemText, ListItem, List, IconButton } from '@material-ui/core';\nimport { tabsDictionary } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport LanguageTab from '../LanguageTab/LanguageTab';\nimport Profile from '../Profile/Profile';\nimport { useState } from 'react';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport theme from '../../Theme';\n\nconst { englishTabs,  turkishTabs } = tabsDictionary;\n\n\nfunction ClientHeader(): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n    const [openDrawer, setOpenDrawer] = useState<boolean>(false);\n    const matches = useMediaQuery(theme.breakpoints.down('md'));\n\n\n    let tabs = [];\n        // { label: 'new reservation', to: '/new-reservation' },\n        // { label: 'reservations', to: '/reservation' },\n        // { label: 'payments', to: '/payment' }\n    \n    function tabFormation() {\n        if (language === 'tr') tabs = turkishTabs;\n        else tabs = englishTabs;\n        return tabs.map(({ label, to }, idx) => (\n            <Tab\n                key={idx}\n                label={label}\n                component={Link}\n                to={to}\n                className={classes.tabs}\n            />\n        ));\n    };\n\n    const handleClick = () => {\n        setOpenDrawer(false);\n    }\n\n    const drawer = (\n        <>\n            <SwipeableDrawer \n                open={openDrawer} \n                onClose={() => {setOpenDrawer(false)}} \n                onOpen={() => {setOpenDrawer(true)}}\n                classes={{paper: classes.drawer}}\n            >\n            <div className={classes.toolbarMargin} />  \n            <List disablePadding>\n                <ListItem \n                    onClick={handleClick}\n                    component={Link}\n                    to={'/new-reservation'}\n\n                    divider button \n                >\n                    <ListItemText disableTypography>{language === 'eng' ? 'New Reservation' : 'Yeni Rezervasyon'}</ListItemText>\n                </ListItem>\n                <ListItem \n                    onClick={handleClick} \n                    divider button\n                    component={Link}\n                    to={'/reservation'}\n                >   \n                    <ListItemText disableTypography>{language === 'eng' ? 'Reservations' : 'Rezervasyonlar'}</ListItemText>\n                </ListItem>\n                <ListItem \n                    onClick={handleClick} \n                    divider button\n                    component={Link}\n                    to={'/payment'}\n                >\n                    <ListItemText disableTypography>{language === 'eng' ? 'Payments' : 'Finans'}</ListItemText>\n                </ListItem>\n            </List>    \n            </SwipeableDrawer>\n            <IconButton className={classes.drawerIcon} onClick={() => {setOpenDrawer(!openDrawer)}} disableRipple>\n                <MenuIcon className={classes.drawerIconMenu} />\n            </IconButton>\n        </>\n    )\n\n    return (\n        <Grid container className={classes.root}>\n            <Grid item >\n                {matches ? drawer : <Tabs\n                    aria-label=\"wrapped label tabs example\"\n                    TabIndicatorProps={{\n                        style: {\n                            display: \"none\",\n                        },\n                    }}\n                >\n                    {tabFormation()}\n                </Tabs>}\n            </Grid>\n            <Grid item className={classes.gridItem}>\n                <Grid container>\n                    <LanguageTab />\n                    <Profile />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default ClientHeader;"]},"metadata":{},"sourceType":"module"}