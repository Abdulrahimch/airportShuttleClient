{"ast":null,"code":"import _regeneratorRuntime from\"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'./axiosConfig';export var postClient=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputs){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post('/users/',inputs).then(function(res){return res.data;}).catch(function(){return{error:{message:'Unable to connect to server. Please try again'}};});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function postClient(_x){return _ref.apply(this,arguments);};}();export var getClients=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('/users/').then(function(res){return res.data;}).catch(function(){return{error:{message:'Unable to connect to server. Please try again'}};});case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function getClients(){return _ref2.apply(this,arguments);};}();export var deleteClient=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.delete(\"/users/\".concat(id)).then(function(res){return res.data;}).catch(function(){return{error:{message:'Unable to connect to server. Please try again'}};});case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteClient(_x2){return _ref3.apply(this,arguments);};}();export var patchClient=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(inputs,id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.patch(\"/users/\".concat(id),inputs).then(function(res){return res.data;}).catch(function(){return{error:{message:'Unable to connect to server. Please try again'}};});case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function patchClient(_x3,_x4){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/helpers/APICalls/user.ts"],"names":["axios","postClient","inputs","post","then","res","data","catch","error","message","getClients","get","deleteClient","id","delete","patchClient","patch"],"mappings":"mRAAA,MAAOA,CAAAA,KAAP,KAAkB,eAAlB,CAIA,MAAO,IAAMC,CAAAA,UAAU,0FAAG,iBAAOC,MAAP,wIACTF,CAAAA,KAAK,CAACG,IAAN,CAAW,SAAX,CAAsBD,MAAtB,EACJE,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EADD,EAEJC,KAFI,CAEE,iBAAO,CACVC,KAAK,CAAE,CAACC,OAAO,CAAE,+CAAV,CADG,CAAP,EAFF,CADS,6GAAH,kBAAVR,CAAAA,UAAU,4CAAhB,CAQP,MAAO,IAAMS,CAAAA,UAAU,2FAAG,+JACTV,CAAAA,KAAK,CAACW,GAAN,CAAU,SAAV,EACJP,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EADD,EAEJC,KAFI,CAEE,iBAAO,CACVC,KAAK,CAAE,CAACC,OAAO,CAAE,+CAAV,CADG,CAAP,EAFF,CADS,iHAAH,kBAAVC,CAAAA,UAAU,2CAAhB,CAQP,MAAO,IAAME,CAAAA,YAAY,2FAAG,kBAAOC,EAAP,6IACXb,CAAAA,KAAK,CAACc,MAAN,kBAAuBD,EAAvB,GACRT,IADQ,CACH,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EADG,EAERC,KAFQ,CAEF,iBAAO,CACVC,KAAK,CAAE,CAACC,OAAO,CAAE,+CAAV,CADG,CAAP,EAFE,CADW,iHAAH,kBAAZG,CAAAA,YAAY,8CAAlB,CAQP,MAAO,IAAMG,CAAAA,WAAW,2FAAG,kBAAOb,MAAP,CAAuBW,EAAvB,6IACVb,CAAAA,KAAK,CAACgB,KAAN,kBAAsBH,EAAtB,EAA4BX,MAA5B,EACRE,IADQ,CACH,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EADG,EAERC,KAFQ,CAEF,iBAAO,CACVC,KAAK,CAAE,CAACC,OAAO,CAAE,+CAAV,CADG,CAAP,EAFE,CADU,iHAAH,kBAAXM,CAAAA,WAAW,kDAAjB","sourcesContent":["import axios from './axiosConfig';\nimport { AuthApiData, GetClientsApiData } from '../../interface/AuthApiData';\nimport { Client } from '../../interface/Client';\n\nexport const postClient = async (inputs: Client): Promise<AuthApiData> => {\n    return await axios.post('/users/', inputs)\n            .then((res) => res.data)\n            .catch(() => ({\n                error: {message: 'Unable to connect to server. Please try again'}\n            }))\n};\n\nexport const getClients = async (): Promise<GetClientsApiData> => {\n    return await axios.get('/users/')\n            .then((res) => res.data)\n            .catch(() => ({\n                error: {message: 'Unable to connect to server. Please try again'}\n            }))\n};\n\nexport const deleteClient = async (id: string | undefined) => {\n    return await axios.delete(`/users/${id}`)\n        .then((res) => res.data)\n        .catch(() => ({\n            error: {message: 'Unable to connect to server. Please try again'}\n        }));\n};\n\nexport const patchClient = async (inputs: Client, id: string | undefined) => {\n    return await axios.patch(`/users/${id}`, inputs)\n        .then((res) => res.data)\n        .catch(() => ({\n            error: {message: 'Unable to connect to server. Please try again'}\n        }));\n};\n"]},"metadata":{},"sourceType":"module"}