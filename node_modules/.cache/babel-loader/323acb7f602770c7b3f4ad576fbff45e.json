{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/NewReservation/NewReservationForm/NewReservationForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, InputLabel, TextField, Grid, Select, MenuItem, Button, CircularProgress } from '@material-ui/core';\nimport { Formik, FieldArray, Field } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst airports = [{\n  value: 1,\n  name: 'Istanbul Airport'\n}, {\n  value: 2,\n  name: 'Sabiha Airport'\n}];\nconst resorts = [{\n  value: 1,\n  name: 'Sultan Ahmet'\n}, {\n  value: 2,\n  name: 'Sirkeci'\n}, {\n  value: 3,\n  name: 'Taksim'\n}, {\n  value: 4,\n  name: 'Fatih'\n}, {\n  value: 5,\n  name: 'Laleli'\n}];\n\nfunction NewReservationForm() {\n  _s();\n\n  const classes = useStyles();\n\n  const handleSubmit = () => {\n    console.log('submitting');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          type: 0,\n          from: 0,\n          to: 0,\n          hotel: '',\n          pax: 0,\n          flightNo: '',\n          driverNote: '',\n          passengers: []\n        },\n        validationSchema: Yup.object().shape({\n          firstName: Yup.string().required('FirstName is required!'),\n          lastName: Yup.string().required('LastName is required!'),\n          type: Yup.string().required(),\n          from: Yup.string().required(),\n          to: Yup.string().required(),\n          hotel: Yup.string().required(),\n          flightNo: Yup.string().required(),\n          driverNote: Yup.string(),\n          pax: Yup.number().min(1).max(9).default(2)\n        }),\n        onSubmit: handleSubmit,\n        children: _ref => {\n          let {\n            handleSubmit,\n            handleChange,\n            values,\n            touched,\n            errors,\n            isSubmitting\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: classes.form,\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              alignItems: \"center\",\n              justify: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"type\",\n                    className: classes.inputLabel,\n                    children: \"type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    id: \"type\",\n                    name: \"type\",\n                    autoWidth: true,\n                    value: values.type,\n                    onChange: handleChange,\n                    classes: {\n                      select: classes.select\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 0,\n                      children: \"---Select---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 1,\n                      children: \"Airport to Resort\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 2,\n                      children: \"Resort to Airport\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: \"from\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    id: \"from\",\n                    name: \"from\",\n                    autoWidth: true,\n                    value: values.from,\n                    onChange: handleChange,\n                    classes: {\n                      select: classes.select\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 0,\n                      children: \"---Select---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 41\n                    }, this), values.type === 1 ? airports.map(airport => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: airport.value,\n                      children: airport.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 45\n                    }, this)) : resorts.map(resort => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: resort.value,\n                      children: resort.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 45\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: \"to\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    id: \"to\",\n                    name: \"to\",\n                    autoWidth: true,\n                    value: values.to,\n                    onChange: handleChange,\n                    classes: {\n                      select: classes.select\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 0,\n                      children: \"---Select---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 41\n                    }, this), values.type === 2 ? airports.map(airport => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: airport.value,\n                      children: airport.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 45\n                    }, this)) : resorts.map(resort => /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: resort.value,\n                      children: resort.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 45\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"hotel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"hotel\",\n                      name: \"hotel\",\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.hotel,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"pax\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"pax\",\n                      name: \"pax\",\n                      error: Boolean(errors.pax),\n                      helperText: errors.pax,\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.pax,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"flight no\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"flightNo\",\n                      name: \"flightNo\",\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.flightNo,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"driver note\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"driverNote\",\n                      name: \"driverNote\",\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.driverNote,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n                    name: \"passengers\",\n                    children: fieldArrayProps => {\n                      console.log('objs are: ', fieldArrayProps);\n                      const {\n                        push,\n                        remove,\n                        form\n                      } = fieldArrayProps;\n                      const {\n                        values\n                      } = form;\n                      const {\n                        pax,\n                        passengers\n                      } = values;\n                      let allPassengers = new Array(pax).fill('');\n                      return /*#__PURE__*/_jsxDEV(Box, {\n                        children: allPassengers.map((passenger, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                            className: classes.inputLabel,\n                            children: \"fullname\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 198,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(Field, {\n                            id: `passengers[${index}]`,\n                            name: `passengers[${index}]`,\n                            InputProps: {\n                              classes: {\n                                input: classes.inputs\n                              },\n                              disableUnderline: true\n                            } // value={passengers[index]}\n                            // onChange={handleChange} \n\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 200,\n                            columnNumber: 82\n                          }, this)]\n                        }, void 0, true))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 57\n                      }, this);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      size: \"large\",\n                      type: \"submit\",\n                      variant: \"contained\",\n                      color: \"primary\",\n                      className: classes.submit,\n                      children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                        className: classes.circularProgress\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 61\n                      }, this) : 'Submit'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewReservationForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewReservationForm;\nexport default NewReservationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewReservationForm\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/NewReservation/NewReservationForm/NewReservationForm.tsx"],"names":["Box","InputLabel","TextField","Grid","Select","MenuItem","Button","CircularProgress","Formik","FieldArray","Field","Yup","useStyles","airports","value","name","resorts","NewReservationForm","classes","handleSubmit","console","log","type","from","to","hotel","pax","flightNo","driverNote","passengers","object","shape","firstName","string","required","lastName","number","min","max","default","handleChange","values","touched","errors","isSubmitting","form","inputLabel","select","map","airport","resort","input","inputs","disableUnderline","Boolean","fieldArrayProps","push","remove","allPassengers","Array","fill","passenger","index","submit","circularProgress"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Box, InputLabel, TextField, Grid, Select, MenuItem, Button, CircularProgress } from '@material-ui/core';\nimport { Formik, FieldArray, Field } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\n\nconst airports = [\n    {value: 1, name: 'Istanbul Airport'}, \n    {value: 2, name:'Sabiha Airport'}\n ];\nconst resorts = [\n    {value: 1, name: 'Sultan Ahmet'},\n    {value: 2, name: 'Sirkeci'},\n    {value: 3, name: 'Taksim'},\n    {value: 4, name: 'Fatih'},\n    {value: 5, name: 'Laleli'}\n];\n\nfunction NewReservationForm(): JSX.Element {\n    const classes = useStyles();\n\n    const handleSubmit = () => {console.log('submitting')};\n    return (\n        <>\n            <Box>\n                <Formik\n                    initialValues={{\n                        type: 0,\n                        from: 0,\n                        to: 0,\n                        hotel: '',\n                        pax: 0,\n                        flightNo: '',\n                        driverNote: '',\n                        passengers: []\n                    }}\n                    validationSchema={Yup.object().shape({ \n                        firstName: Yup.string().required('FirstName is required!'),\n                        lastName: Yup.string().required('LastName is required!'),\n                        type: Yup.string().required(),\n                        from:  Yup.string().required(),\n                        to: Yup.string().required(),\n                        hotel: Yup.string().required(),\n                        flightNo: Yup.string().required(),\n                        driverNote: Yup.string(),\n                        pax: Yup.number().min(1).max(9).default(2),\n                    })}\n                    onSubmit={handleSubmit}\n                >   \n                    {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center' justify='center'>\n                            <Grid item container spacing={4}>\n                                <Grid item>\n                                    <InputLabel id=\"type\" className={classes.inputLabel}>\n                                        type\n                                    </InputLabel>\n                                    <Select\n                                        id=\"type\"\n                                        name=\"type\"\n                                        autoWidth\n                                        value={values.type}\n                                        onChange={handleChange}\n                                        classes={{ select: classes.select }}\n                                        >\n                                        <MenuItem value={0}>---Select---</MenuItem>\n                                        <MenuItem value={1}>Airport to Resort</MenuItem>\n                                        <MenuItem value={2}>Resort to Airport</MenuItem>\n                                    </Select>\n                                </Grid>\n                                <Grid item>\n                                    <InputLabel className={classes.inputLabel}>\n                                        from\n                                    </InputLabel>\n                                    <Select\n                                        id=\"from\"\n                                        name=\"from\"\n                                        autoWidth\n                                        value={values.from}\n                                        onChange={handleChange}\n                                        classes={{ select: classes.select }}\n                                        >\n                                        <MenuItem value={0}>---Select---</MenuItem>\n                                        {values.type === 1 ? airports.map((airport) => (\n                                            <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                        )): resorts.map((resort) => (\n                                            <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                        ))\n                                        }\n                                    </Select>\n                                </Grid>\n                                <Grid item>\n                                    <InputLabel className={classes.inputLabel}>\n                                        to\n                                    </InputLabel>\n                                    <Select\n                                        id=\"to\"\n                                        name=\"to\"\n                                        autoWidth\n                                        value={values.to}\n                                        onChange={handleChange}\n                                        classes={{ select: classes.select }}\n                                        >\n                                        <MenuItem value={0}>---Select---</MenuItem>\n                                        {values.type === 2 ? airports.map((airport) => (\n                                            <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                        )): resorts.map((resort) => (\n                                            <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                        ))\n                                        }\n                                    </Select>\n                                </Grid>\n                            </Grid>\n                            <Grid item container spacing={2}>\n                                <Grid item container spacing={2}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            hotel\n                                        </InputLabel>\n                                        <TextField \n                                            id='hotel'\n                                            name='hotel'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.hotel}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            pax\n                                        </InputLabel>\n                                        <TextField \n                                            id='pax'\n                                            name='pax'\n                                            error={Boolean(errors.pax)}\n                                            helperText={errors.pax}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.pax}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item container spacing={2}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            flight no\n                                        </InputLabel>\n                                        <TextField \n                                            id='flightNo'\n                                            name='flightNo'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.flightNo}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            driver note\n                                        </InputLabel>\n                                        <TextField \n                                            id='driverNote'\n                                            name='driverNote'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.driverNote}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item container spacing={2}>\n                                    <FieldArray name=\"passengers\">\n                                        {\n                                            (fieldArrayProps) => {\n                                                console.log('objs are: ', fieldArrayProps)\n                                                const { push, remove, form } = fieldArrayProps;\n                                                const { values } = form;\n                                                const { pax, passengers } = values;\n                                                let allPassengers = new Array(pax).fill('');\n                                                return (\n                                                        \n                                                        <Box>\n                                                            {\n                                                               allPassengers.map((passenger: any, index: any) => (\n                                                                    <>\n                                                                    <InputLabel className={classes.inputLabel}>\n                                                                        fullname\n                                                                    </InputLabel><Field\n                                                                        id={`passengers[${index}]`}\n                                                                        name={`passengers[${index}]`}\n                                                                        InputProps={{\n                                                                            classes: { input: classes.inputs },\n                                                                            disableUnderline: true\n                                                                        }}\n                                                                        // value={passengers[index]}\n                                                                        // onChange={handleChange} \n                                                                        />\n                                                                        {/* <Button onClick={() => {push(values.firstName)}}>+</Button> */}\n                                                                    </>\n                                                                ))\n                                                            }\n                                                        </Box>\n                                                )\n                                            }\n                                        }\n                                    </FieldArray>\n                                    <Grid item>\n                                        <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n                                            {isSubmitting ? <CircularProgress className={classes.circularProgress} /> : 'Submit'} \n                                        </Button>\n                        </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    )}\n                </Formik>\n            </Box>\n        </>\n    )\n}\nexport default NewReservationForm;\n"]},"metadata":{},"sourceType":"module"}