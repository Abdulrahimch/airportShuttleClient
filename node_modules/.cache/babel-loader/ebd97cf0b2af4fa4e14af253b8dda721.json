{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport DataTable from \"../../../components/DataTable/DataTable\";\nimport { turkishClientColumn, engClientColumn } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { postClient } from '../../../helpers/APICalls/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListClients = () => {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const [rows, setRows] = useState([]);\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  useEffect(() => {\n    postClient().then(data => {\n      if (data.error) {\n        console.log(data.error);\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        console.log(data.success);\n        updateSnackBarMessage('Client has been added successfully!');\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  });\n\n  const handleEditClick = () => {\n    console.log('edit is hitted');\n  };\n\n  const handleCancelClick = () => {\n    console.log('cancel is hitted');\n  }; // const rows = [{id: 1, propertyName: 'dilhayat', businessType: 'hotel', email: 'dilhayat@gmail.com', address: 'dultanahmet', createdAt: '2019-01-01'}]\n\n\n  const columns = language === 'tr' ? turkishClientColumn(handleEditClick, handleCancelClick) : engClientColumn(handleEditClick, handleCancelClick);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ListClients, \"wpXk0/WJD7YxjUjPQKG0mVWtzPA=\", false, function () {\n  return [useLanguage, useSnackBar];\n});\n\n_c = ListClients;\nexport default ListClients;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListClients\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx"],"names":["useState","useEffect","DataTable","turkishClientColumn","engClientColumn","useLanguage","useSnackBar","postClient","ListClients","language","rows","setRows","updateSnackBarMessage","then","data","error","console","log","message","success","handleEditClick","handleCancelClick","columns"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,2BAArD;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,UAAT,QAA2B,gCAA3B;;;;AAEA,MAAMC,WAAW,GAAG,MAAmB;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAeJ,WAAW,EAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAA4BN,WAAW,EAA7C;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU,GAAGM,IAAb,CAAmBC,IAAD,IAAU;AACxB,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACAH,QAAAA,qBAAqB,CAACE,IAAI,CAACC,KAAL,CAAWG,OAAZ,CAArB;AACH,OAHD,MAGO,IAAIJ,IAAI,CAACK,OAAT,EAAiB;AACpBH,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,OAAjB;AACAP,QAAAA,qBAAqB,CAAC,qCAAD,CAArB;AACH,OAHM,MAGA;AACHA,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KAVD;AAWH,GAZQ,CAAT;;AAcA,QAAMQ,eAAe,GAAG,MAAM;AAC1BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAFD;;AAIA,QAAMI,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAFD,CAvBmC,CA2BnC;;;AAEA,QAAMK,OAAO,GAAGb,QAAQ,KAAK,IAAb,GAAoBN,mBAAmB,CAACiB,eAAD,EAAkBC,iBAAlB,CAAvC,GACsBjB,eAAe,CAACgB,eAAD,EAAkBC,iBAAlB,CADrD;AAGA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEX,IAAjB;AAAuB,MAAA,OAAO,EAAEY;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CArCD;;GAAMd,W;UACmBH,W,EAEaC,W;;;KAHhCE,W;AAuCN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport DataTable from \"../../../components/DataTable/DataTable\";\nimport { turkishClientColumn, engClientColumn } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { postClient } from '../../../helpers/APICalls/user';\n\nconst ListClients = (): JSX.Element => {\n    const { language } = useLanguage();\n    const [rows, setRows] = useState([]);\n    const { updateSnackBarMessage } = useSnackBar();\n\n    useEffect(() => {\n        postClient().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                console.log(data.success);\n                updateSnackBarMessage('Client has been added successfully!')\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    })\n\n    const handleEditClick = () => {\n        console.log('edit is hitted');\n    };\n\n    const handleCancelClick = () => {\n        console.log('cancel is hitted');\n    };\n\n    // const rows = [{id: 1, propertyName: 'dilhayat', businessType: 'hotel', email: 'dilhayat@gmail.com', address: 'dultanahmet', createdAt: '2019-01-01'}]\n\n    const columns = language === 'tr' ? turkishClientColumn(handleEditClick, handleCancelClick) \n                                        : engClientColumn(handleEditClick, handleCancelClick);\n\n    return (\n        <>\n            <DataTable rows={rows} columns={columns}/>\n        </>\n    )\n};\n\nexport default ListClients;"]},"metadata":{},"sourceType":"module"}