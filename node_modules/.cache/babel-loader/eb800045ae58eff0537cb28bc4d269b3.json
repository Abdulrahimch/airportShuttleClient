{"ast":null,"code":"import{Formik,FieldArray,Field,Form}from'formik';import*as Yup from'yup';import useStyles from'./useStyles';import CustomButton from'../../../../components/Button/CustomButton';import DateFnsUtils from'@date-io/date-fns';import{MuiPickersUtilsProvider,DateTimePicker}from'@material-ui/pickers';import{Box,InputLabel,TextField,Grid,Select,MenuItem,FormHelperText}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var airports=[{value:'IST airport',name:'Istanbul Airport'},{value:'SAW airport',name:'Sabiha Airport'}];var resorts=[{value:'SultanAhmet',name:'SultanAhmet'},{value:'Sirkeci',name:'Sirkeci'},{value:'Taksim',name:'Taksim'},{value:'Fatih',name:'Fatih'},{value:'Laleli',name:'Laleli'}];function AddReservationForm(_ref){var form=_ref.form,handleSubmit=_ref.handleSubmit,initValues=_ref.initValues;var classes=useStyles();var type=form.type,from=form.from,to=form.to,pax=form.pax,property=form.property,driverNote=form.driverNote,flightNo=form.flightNo,selectedDate=form.selectedDate;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{type:initValues.type,from:initValues.from,to:initValues.to,property:initValues.property,pax:initValues.pax,flightNo:initValues.flightNo,driverNote:initValues.driverNote,selectedDate:initValues.selectedDate,timezone:initValues.timezone,passengers:initValues.passengers},validationSchema:Yup.object().shape({type:Yup.string().required('This Field is required'),from:Yup.string().required('This Field is required'),to:Yup.string().required('This Field is required'),property:Yup.string().required('This Field is required'),flightNo:Yup.string().required('This Field is required'),driverNote:Yup.string(),selectedDate:Yup.date().required('This Field is required'),pax:Yup.number().min(1).max(10).default(1)}),onSubmit:function onSubmit(values){handleSubmit(values);},children:function children(_ref2){var handleSubmit=_ref2.handleSubmit,handleChange=_ref2.handleChange,values=_ref2.values,touched=_ref2.touched,errors=_ref2.errors,isSubmitting=_ref2.isSubmitting,setFieldValue=_ref2.setFieldValue;return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,className:classes.form,noValidate:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Grid,{item:true,container:true,className:classes.itemContainer,spacing:4,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"type\",className:classes.inputLabel,children:type}),/*#__PURE__*/_jsxs(Select,{id:\"type\",name:\"type\",autoWidth:true,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},value:values.type,onChange:handleChange,classes:{select:classes.select},children:[/*#__PURE__*/_jsx(MenuItem,{value:1,children:\"Airport to Resort\"}),/*#__PURE__*/_jsx(MenuItem,{value:2,children:\"Resort to Airport\"})]}),/*#__PURE__*/_jsx(FormHelperText,{error:Boolean(errors.type),children:errors.type})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:pax}),/*#__PURE__*/_jsx(Select,{id:\"pax\",name:\"pax\",autoWidth:true,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},value:values.pax,onChange:handleChange,classes:{select:classes.select},children:Array(10).fill(0).map(function(_,idx){return/*#__PURE__*/_jsx(MenuItem,{className:classes.menuItem,value:idx+1,children:idx+1});})}),/*#__PURE__*/_jsx(FormHelperText,{error:Boolean(errors.pax),children:errors.pax})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Grid,{item:true,container:true,className:classes.itemContainer,spacing:4,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:from}),/*#__PURE__*/_jsx(Select,{id:\"from\",name:\"from\",autoWidth:true,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},value:values.from,onChange:handleChange,classes:{select:classes.select},children:values.type===1?airports.map(function(airport){return/*#__PURE__*/_jsx(MenuItem,{value:airport.value,children:airport.name});}):resorts.map(function(resort){return/*#__PURE__*/_jsx(MenuItem,{value:resort.value,children:resort.name});})}),/*#__PURE__*/_jsx(FormHelperText,{error:Boolean(errors.from),children:errors.from})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:to}),/*#__PURE__*/_jsx(Select,{id:\"to\",name:\"to\",autoWidth:true,MenuProps:{anchorOrigin:{vertical:\"bottom\",horizontal:\"left\"},transformOrigin:{vertical:\"top\",horizontal:\"left\"},getContentAnchorEl:null},value:values.to,onChange:handleChange,classes:{select:classes.select},children:values.type===2?airports.map(function(airport){return/*#__PURE__*/_jsx(MenuItem,{value:airport.value,children:airport.name});}):resorts.map(function(resort){return/*#__PURE__*/_jsx(MenuItem,{value:resort.value,children:resort.name});})}),/*#__PURE__*/_jsx(FormHelperText,{error:Boolean(errors.to),children:errors.to})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(Grid,{item:true,container:true,className:classes.itemContainer,spacing:6,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:property}),/*#__PURE__*/_jsx(TextField,{id:\"property\",name:\"property\",error:Boolean(errors.property),helperText:errors.property,InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.property,onChange:handleChange})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:flightNo}),/*#__PURE__*/_jsx(TextField,{id:\"flightNo\",name:\"flightNo\",InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.flightNo,onChange:handleChange})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Grid,{item:true,container:true,className:classes.itemContainer,spacing:6,children:/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:DateFnsUtils,children:/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:selectedDate}),/*#__PURE__*/_jsx(MuiPickersUtilsProvider,{utils:DateFnsUtils,children:/*#__PURE__*/_jsx(DateTimePicker,{InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.selectedDate,onChange:function onChange(date){return setFieldValue('selectedDate',date);}})})]})})})}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.inputLabel,children:driverNote}),/*#__PURE__*/_jsx(TextField,{id:\"driverNote\",name:\"driverNote\",multiline:true,rows:4,InputProps:{classes:{input:classes.inputs},disableUnderline:true},value:values.driverNote,onChange:handleChange})]}),/*#__PURE__*/_jsx(Grid,{item:true,lg:6,children:/*#__PURE__*/_jsx(Grid,{item:true,container:true,className:classes.itemContainer,spacing:4,children:/*#__PURE__*/_jsx(FieldArray,{name:\"passengers\",children:function children(fieldArrayProps){var form=fieldArrayProps.form;var values=form.values;var pax=values.pax;var allPassengers=new Array(pax).fill('');return/*#__PURE__*/_jsx(Form,{children:allPassengers.map(function(passenger,index){return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(InputLabel,{className:classes.fieldInputLabel,children:[\"passenger \",index+1,\" full name\"]}),/*#__PURE__*/_jsx(Field,{id:\"passengers[\".concat(index,\"]\"),name:\"passengers[\".concat(index,\"]\"),className:classes.select,style:{position:'relative'}})]});})});}})})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(CustomButton,{style:\"submit\",btnText:\"submit\"})})]})});}})})});}export default AddReservationForm;","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservationForm/AddReservationForm.tsx"],"names":["Formik","FieldArray","Field","Form","Yup","useStyles","CustomButton","DateFnsUtils","MuiPickersUtilsProvider","DateTimePicker","Box","InputLabel","TextField","Grid","Select","MenuItem","FormHelperText","airports","value","name","resorts","AddReservationForm","form","handleSubmit","initValues","classes","type","from","to","pax","property","driverNote","flightNo","selectedDate","timezone","passengers","object","shape","string","required","date","number","min","max","default","values","handleChange","touched","errors","isSubmitting","setFieldValue","itemContainer","inputLabel","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","select","Boolean","Array","fill","map","_","idx","menuItem","airport","resort","input","inputs","disableUnderline","fieldArrayProps","allPassengers","passenger","index","fieldInputLabel","position"],"mappings":"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","sourcesContent":["import { Formik, FieldArray, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\nimport { FormValues, FormLabels } from '../../../../interface/Reservation';\nimport CustomButton from '../../../../components/Button/CustomButton';\n\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport {\n    MuiPickersUtilsProvider,\n    DateTimePicker\n  } from '@material-ui/pickers';\n\nimport { \n        Box, \n        InputLabel, \n        TextField, \n        Grid, \n        Select, \n        MenuItem,  \n        FormHelperText } from '@material-ui/core';\n\nconst airports = [\n    { value: 'IST airport', name: 'Istanbul Airport' }, \n    { value: 'SAW airport', name:'Sabiha Airport' },\n ];\nconst resorts = [\n    { value: 'SultanAhmet', name: 'SultanAhmet' },\n    { value: 'Sirkeci', name: 'Sirkeci' },\n    { value: 'Taksim', name: 'Taksim' },\n    { value: 'Fatih', name: 'Fatih' },\n    { value: 'Laleli', name: 'Laleli' }\n];\n\ninterface Props {\n    form: FormLabels,\n    handleSubmit: (values: FormValues) => void\n    initValues: FormValues;\n}\n\nfunction AddReservationForm({ form, handleSubmit, initValues } : Props): JSX.Element {\n    const classes = useStyles();\n    const  { type, from, to, pax, property, driverNote, flightNo, selectedDate } = form;\n\n    return (\n        <>\n            <Box>\n                <Formik\n                    initialValues={{\n                        type: initValues.type,\n                        from: initValues.from,\n                        to: initValues.to,\n                        property: initValues.property,\n                        pax: initValues.pax,\n                        flightNo: initValues.flightNo,\n                        driverNote: initValues.driverNote,\n                        selectedDate: initValues.selectedDate,\n                        timezone: initValues.timezone,\n                        passengers: initValues.passengers,\n                    }}\n                    validationSchema={Yup.object().shape({ \n                        type: Yup.string().required('This Field is required'),\n                        from:  Yup.string().required('This Field is required'),\n                        to: Yup.string().required('This Field is required'),\n                        property: Yup.string().required('This Field is required'),\n                        flightNo: Yup.string().required('This Field is required'),\n                        driverNote: Yup.string(),\n                        selectedDate: Yup.date().required('This Field is required'),\n                        pax: Yup.number().min(1).max(10).default(1),\n                    })}\n                    onSubmit={(values) => {handleSubmit(values)}}\n                >   \n                    {({ handleSubmit, handleChange, values, touched, errors, isSubmitting, setFieldValue }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={1}>Airport to Resort</MenuItem>\n                                            <MenuItem value={2}>Resort to Airport</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item> \n                                        <InputLabel className={classes.inputLabel}>\n                                            {pax}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"pax\"\n                                            name=\"pax\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.pax}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {\n                                                Array(10).fill(0).map((_, idx) => (\n                                                <MenuItem className={classes.menuItem} value={idx+1}>{idx+1}</MenuItem>\n                                            ))}\n                                            \n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.pax)}>{errors.pax}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {from}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"from\"\n                                            name=\"from\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.from}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                            >\n                                            {values.type === 1 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.from)}>{errors.from}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {to}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"to\"\n                                            name=\"to\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.to}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {values.type === 2 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.to)}>{errors.to}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={6}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {property}\n                                        </InputLabel>\n                                        <TextField \n                                            id='property'\n                                            name='property'\n                                            error={Boolean(errors.property)}\n                                            helperText={errors.property}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.property}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {flightNo}\n                                        </InputLabel>\n                                        <TextField \n                                            id='flightNo'\n                                            name='flightNo'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.flightNo}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={6}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <Grid item >\n                                            <InputLabel className={classes.inputLabel}>\n                                                {selectedDate}\n                                            </InputLabel>\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                                <DateTimePicker\n                                                    InputProps= {{\n                                                        classes: { input: classes.inputs },\n                                                        disableUnderline: true\n                                                    }}\n                                                    value={values.selectedDate}\n                                                    onChange={(date: any) => setFieldValue('selectedDate', date)}\n                                            />\n                                            </MuiPickersUtilsProvider>\n                                        </Grid>\n                                    </MuiPickersUtilsProvider>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.inputLabel}>\n                                    {driverNote}\n                                </InputLabel>\n                                <TextField \n                                    id='driverNote'\n                                    name='driverNote'\n                                    multiline\n                                    rows={4}\n                                    InputProps= {{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                    value={values.driverNote}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item lg={6}>\n                                <Grid item container className={classes.itemContainer} spacing={4} >\n                                    <FieldArray name=\"passengers\">\n                                        {\n                                            (fieldArrayProps ) => {\n                                                const { form } = fieldArrayProps;\n                                                const { values } = form;\n                                                const { pax } = values;\n                                                let allPassengers = new Array(pax).fill('');\n                                                return ( \n                                                    <Form>\n                                                        {\n                                                            allPassengers.map((passenger: any, index: number) => (\n                                                                <Box>\n                                                                    <InputLabel className={classes.fieldInputLabel}>\n                                                                        passenger {index + 1} full name \n                                                                    </InputLabel>\n                                                                    <Field\n                                                                        id={`passengers[${index}]`}\n                                                                        name={`passengers[${index}]`}\n                                                                        className={classes.select}\n                                                                        style={{ position: 'relative' }}\n                                                                        \n                                                                    />\n                                                                </Box>\n                                                            ))\n                                                        }\n                                                    </Form>\n                                                )   \n                                            }\n                                        }\n                                    </FieldArray>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <CustomButton style=\"submit\" btnText=\"submit\" />\n                            </Grid>\n                        </Grid>\n                    </form>\n                    )}\n                </Formik>\n            </Box>\n        </>\n    )\n}\nexport default AddReservationForm;\n"]},"metadata":{},"sourceType":"module"}