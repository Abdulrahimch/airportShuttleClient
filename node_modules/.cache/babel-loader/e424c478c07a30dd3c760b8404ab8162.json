{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/UpdateClient/UpdateClient.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Typography } from \"@material-ui/core\";\nimport AddClientFrom from '../AddClient/AddClientForm/AddClientForm';\nimport useStyles from \"./useStyles\";\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { patchClient } from \"../../../helpers/APICalls/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\n\nconst UpdateClient = _ref => {\n  _s();\n\n  let {\n    values,\n    handleUpdatedClientSuccess\n  } = _ref;\n  const {\n    root,\n    title\n  } = useStyles();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n\n  const handleSubmit = formValues => {\n    const id = values._id;\n    patchClient(formValues, id).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        handleUpdatedClientSuccess(values, data.success.client);\n        updateSnackBarMessage('Client has been updated successfully!');\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: root,\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: title,\n        children: \"Update Client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(AddClientFrom, {\n          handleSubmit: handleSubmit,\n          values: values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateClient, \"U0WWPHtQ0wcUvZmw29RqFIN8UJg=\", false, function () {\n  return [useStyles, useSnackBar];\n});\n\n_c = UpdateClient;\nexport default UpdateClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateClient\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/UpdateClient/UpdateClient.tsx"],"names":["Grid","Typography","AddClientFrom","useStyles","useSnackBar","patchClient","UpdateClient","values","handleUpdatedClientSuccess","root","title","updateSnackBarMessage","handleSubmit","formValues","id","_id","then","data","error","console","log","message","success","client"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AAEA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,WAAT,QAA4B,gCAA5B;;;AAKC;;AAED,MAAMC,YAAY,GAAG,QAAgE;AAAA;;AAAA,MAA/D;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA+D;AACjF,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBP,SAAS,EAAjC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAA6BP,WAAW,EAA9C;;AAEA,QAAMQ,YAAY,GAAIC,UAAD,IAAwB;AACzC,UAAMC,EAAE,GAAGP,MAAM,CAACQ,GAAlB;AACAV,IAAAA,WAAW,CAACQ,UAAD,EAAaC,EAAb,CAAX,CAA4BE,IAA5B,CAAkCC,IAAD,IAAU;AACvC,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACAP,QAAAA,qBAAqB,CAACM,IAAI,CAACC,KAAL,CAAWG,OAAZ,CAArB;AACH,OAHD,MAGO,IAAIJ,IAAI,CAACK,OAAT,EAAiB;AACpBd,QAAAA,0BAA0B,CAACD,MAAD,EAASU,IAAI,CAACK,OAAL,CAAaC,MAAtB,CAA1B;AACAZ,QAAAA,qBAAqB,CAAC,uCAAD,CAArB;AACH,OAHM,MAGA;AACHA,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KAVD;AAWH,GAbD;;AAcA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAmC,MAAA,SAAS,EAAEF,IAA9C;AAAoD,MAAA,OAAO,EAAC,QAA5D;AAAA,8BACQ,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAII,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,YAAY,EAAEE,YAA7B;AAA2C,UAAA,MAAM,EAAEL;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH,CA9BD;;GAAMD,Y;UACsBH,S,EACWC,W;;;KAFjCE,Y;AAgCN,eAAeA,YAAf","sourcesContent":["import { Grid, Typography } from \"@material-ui/core\";\nimport { Client } from \"../../../interface/Client\";\nimport AddClientFrom from '../AddClient/AddClientForm/AddClientForm';\nimport useStyles from \"./useStyles\";\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { patchClient } from \"../../../helpers/APICalls/user\";\n\ninterface Props {\n    values: Client,\n    handleUpdatedClientSuccess: (rowValue: Client, client: Client) => void\n};\n\nconst UpdateClient = ({ values, handleUpdatedClientSuccess }: Props): JSX.Element => {\n    const { root, title } = useStyles();\n    const { updateSnackBarMessage } =  useSnackBar();\n\n    const handleSubmit = (formValues: Client) => {\n        const id = values._id;\n        patchClient(formValues, id).then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                handleUpdatedClientSuccess(values, data.success.client);\n                updateSnackBarMessage('Client has been updated successfully!');\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n    return (\n        <>\n            <Grid container direction=\"column\" className={root} justify=\"center\">\n                    <Typography className={title}>\n                        Update Client\n                    </Typography>\n                <Grid item>\n                    <AddClientFrom handleSubmit={handleSubmit} values={values}/>\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n\nexport default UpdateClient;"]},"metadata":{},"sourceType":"module"}