{"ast":null,"code":"import _slicedToArray from\"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useContext,createContext,useCallback}from'react';import Snackbar from'@material-ui/core/Snackbar';import IconButton from'@material-ui/core/IconButton';import CloseIcon from'@material-ui/icons/Close';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SnackBarContext=/*#__PURE__*/createContext({updateSnackBarMessage:function updateSnackBarMessage(){return null;}});export var SnackBarProvider=function SnackBarProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var updateSnackBarMessage=useCallback(function(message){setMessage(message);setOpen(true);},[]);var handleClose=useCallback(function(){setOpen(false);},[]);var snackbarHandleClose=useCallback(function(event,reason){if(reason==='clickaway')return;setOpen(false);},[]);return/*#__PURE__*/_jsxs(SnackBarContext.Provider,{value:{updateSnackBarMessage:updateSnackBarMessage},children:[children,/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:'bottom',horizontal:'center'},open:open,autoHideDuration:6000,onClose:snackbarHandleClose,message:message,action:/*#__PURE__*/_jsx(IconButton,{size:\"small\",\"aria-label\":\"close\",color:\"inherit\",onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"small\"})})})]});};export function useSnackBar(){return useContext(SnackBarContext);}","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useSnackbarContext.tsx"],"names":["useState","useContext","createContext","useCallback","Snackbar","IconButton","CloseIcon","SnackBarContext","updateSnackBarMessage","SnackBarProvider","children","message","setMessage","open","setOpen","handleClose","snackbarHandleClose","event","reason","vertical","horizontal","useSnackBar"],"mappings":"2IAAA,OAASA,QAAT,CAAmBC,UAAnB,CAA+BC,aAA/B,CAAiFC,WAAjF,KAAoG,OAApG,CACA,MAAOC,CAAAA,QAAP,KAA8C,4BAA9C,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,C,wFAMA,MAAO,IAAMC,CAAAA,eAAe,cAAGL,aAAa,CAAmB,CAC7DM,qBAAqB,CAAE,uCAAM,KAAN,EADsC,CAAnB,CAArC,CAIP,MAAO,IAAMC,CAAAA,gBAAmC,CAAG,QAAtCA,CAAAA,gBAAsC,MAA+B,IAA5BC,CAAAA,QAA4B,MAA5BA,QAA4B,CAChF,cAA8BV,QAAQ,CAAgB,IAAhB,CAAtC,wCAAOW,OAAP,eAAgBC,UAAhB,eACA,eAAwBZ,QAAQ,CAAU,KAAV,CAAhC,yCAAOa,IAAP,eAAaC,OAAb,eAEA,GAAMN,CAAAA,qBAAqB,CAAGL,WAAW,CAAC,SAACQ,OAAD,CAAqB,CAC7DC,UAAU,CAACD,OAAD,CAAV,CACAG,OAAO,CAAC,IAAD,CAAP,CACD,CAHwC,CAGtC,EAHsC,CAAzC,CAKA,GAAMC,CAAAA,WAAW,CAAGZ,WAAW,CAAC,UAAM,CACpCW,OAAO,CAAC,KAAD,CAAP,CACD,CAF8B,CAE5B,EAF4B,CAA/B,CAIA,GAAME,CAAAA,mBAAmB,CAAGb,WAAW,CAAC,SAACc,KAAD,CAAwBC,MAAxB,CAAwD,CAC9F,GAAIA,MAAM,GAAK,WAAf,CAA4B,OAC5BJ,OAAO,CAAC,KAAD,CAAP,CACD,CAHsC,CAGpC,EAHoC,CAAvC,CAKA,mBACE,MAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAAEN,qBAAqB,CAArBA,qBAAF,CAAjC,WACGE,QADH,cAEE,KAAC,QAAD,EACE,YAAY,CAAE,CACZS,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,QAFA,CADhB,CAKE,IAAI,CAAEP,IALR,CAME,gBAAgB,CAAE,IANpB,CAOE,OAAO,CAAEG,mBAPX,CAQE,OAAO,CAAEL,OARX,CASE,MAAM,cACJ,KAAC,UAAD,EAAY,IAAI,CAAC,OAAjB,CAAyB,aAAW,OAApC,CAA4C,KAAK,CAAC,SAAlD,CAA4D,OAAO,CAAEI,WAArE,uBACE,KAAC,SAAD,EAAW,QAAQ,CAAC,OAApB,EADF,EAVJ,EAFF,GADF,CAoBD,CAtCM,CAwCP,MAAO,SAASM,CAAAA,WAAT,EAAyC,CAC9C,MAAOpB,CAAAA,UAAU,CAACM,eAAD,CAAjB,CACD","sourcesContent":["import { useState, useContext, createContext, FunctionComponent, SyntheticEvent, useCallback } from 'react';\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface ISnackBarContext {\n  updateSnackBarMessage: (message: string) => void;\n}\n\nexport const SnackBarContext = createContext<ISnackBarContext>({\n  updateSnackBarMessage: () => null,\n});\n\nexport const SnackBarProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [message, setMessage] = useState<string | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const updateSnackBarMessage = useCallback((message: string) => {\n    setMessage(message);\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const snackbarHandleClose = useCallback((event: SyntheticEvent, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  }, []);\n\n  return (\n    <SnackBarContext.Provider value={{ updateSnackBarMessage }}>\n      {children}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={snackbarHandleClose}\n        message={message}\n        action={\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n      />\n    </SnackBarContext.Provider>\n  );\n};\n\nexport function useSnackBar(): ISnackBarContext {\n  return useContext(SnackBarContext);\n}\n"]},"metadata":{},"sourceType":"module"}