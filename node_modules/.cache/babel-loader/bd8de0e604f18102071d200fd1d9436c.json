{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { Box } from \"@material-ui/core\";\nimport { agencyEngColumns } from '../../../utils/dictionary';\nimport { getReservations } from '../../../helpers/APICalls/agencyReservation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListAgencyReservations() {\n  _s();\n\n  const [rows, setRows] = useState();\n\n  const handleEditClick = () => {\n    console.log('this is clicked');\n  };\n\n  const handleCancelClick = () => {\n    console.log('Deleting....');\n  };\n\n  useEffect(() => {\n    getReservations().then(data => {\n      if (data.error) {\n        console.log('data error');\n      } else if (data.success) {\n        data.success.reservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          const date = new Date(reservation.selectedDate);\n          reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n        });\n        setRows(data.success.reservations);\n      } else {}\n    });\n  });\n  const columns = agencyEngColumns(handleEditClick, handleCancelClick);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: [],\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListAgencyReservations, \"cMn46HMmfsVf4gpe7bT6j+QWbN0=\");\n\n_c = ListAgencyReservations;\n;\nexport default ListAgencyReservations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListAgencyReservations\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx"],"names":["useEffect","useState","DataTable","Box","agencyEngColumns","getReservations","ListAgencyReservations","rows","setRows","handleEditClick","console","log","handleCancelClick","then","data","error","success","reservations","map","reservation","idx","id","date","Date","selectedDate","format","columns"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,SAASC,GAAT,QAAoB,mBAApB;AAEA,SAA+BC,gBAA/B,QAAuD,2BAAvD;AAEA,SAASC,eAAT,QAAgC,6CAAhC;;;AAEA,SAASC,sBAAT,GAA+C;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;;AAEA,QAAMQ,eAAe,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,eAAe,GAAGQ,IAAlB,CAAwBC,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,OAFD,MAEO,IAAIG,IAAI,CAACE,OAAT,EAAkB;AACrBF,QAAAA,IAAI,CAACE,OAAL,CAAaC,YAAb,CAA0BC,GAA1B,CAA8B,CAACC,WAAD,EAAcC,GAAd,KAAsB;AAChDD,UAAAA,WAAW,CAACE,EAAZ,GAAiBD,GAAG,GAAG,CAAvB;AACA,gBAAME,IAAI,GAAG,IAAIC,IAAJ,CAASJ,WAAW,CAACK,YAArB,CAAb;AACAL,UAAAA,WAAW,CAACG,IAAZ,GAAmBG,MAAM,CAACH,IAAD,EAAO,kBAAP,CAAzB;AACH,SAJD;AAKAd,QAAAA,OAAO,CAACM,IAAI,CAACE,OAAL,CAAaC,YAAd,CAAP;AACH,OAPM,MAOA,CAEN;AAEJ,KAdD;AAeH,GAhBQ,CAAT;AAkBA,QAAMS,OAAO,GAAGtB,gBAAgB,CAACK,eAAD,EAAkBG,iBAAlB,CAAhC;AAEA,sBACI,QAAC,GAAD;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAE,EAAjB;AAAqB,MAAA,OAAO,EAAEc;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GApCQpB,sB;;KAAAA,sB;AAoCR;AAED,eAAeA,sBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useStyles from \"./useStyles\";\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { Box } from \"@material-ui/core\";\nimport { gridRowsLookupSelector } from \"@material-ui/data-grid\";\nimport { agencyTurksihColumns, agencyEngColumns } from '../../../utils/dictionary';\nimport { GetReservationApiDataSuccess } from '../../../interface/agencyReservation';\nimport { getReservations } from '../../../helpers/APICalls/agencyReservation';\n\nfunction ListAgencyReservations(): JSX.Element {\n    const [rows, setRows] = useState<GetReservationApiDataSuccess>();\n\n    const handleEditClick = () => {\n        console.log('this is clicked')\n    }\n\n    const handleCancelClick = () => {\n        console.log('Deleting....')\n    }\n\n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log('data error');\n            } else if (data.success) {\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setRows(data.success.reservations);\n            } else {\n                \n            }\n\n        })\n    })\n\n    const columns = agencyEngColumns(handleEditClick, handleCancelClick);\n\n    return (\n        <Box>\n            <DataTable rows={[]} columns={columns} />\n        </Box>\n    )\n};\n\nexport default ListAgencyReservations;"]},"metadata":{},"sourceType":"module"}