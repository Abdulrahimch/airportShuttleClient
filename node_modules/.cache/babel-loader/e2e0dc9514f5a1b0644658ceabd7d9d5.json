{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Box } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport { useHistory } from 'react-router-dom';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListReservations() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    language\n  } = useLanguage();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [initValues, setInitValues] = useState({\n    type: 0,\n    from: 0,\n    to: 0,\n    property: '',\n    pax: 5,\n    flightNo: '',\n    driverNote: '',\n    selectedDate: new Date(),\n    timezone: 0,\n    passengers: []\n  });\n\n  const handleDialogClose = () => {\n    setOpen(false);\n  };\n\n  const handleCacelClick = cellValues => {\n    const id = cellValues.row._id;\n    deleteReservation(id).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateSnackBarMessage('reservation deleted!');\n        setRows(rows.filter(row => row.id !== cellValues.id));\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  const handleEditClick = cellValues => {\n    setInitValues(cellValues.row);\n    setOpen(true);\n  };\n\n  const columns = language === 'tr' ? turksihColumns(handleEditClick, handleCacelClick) : engColumn(handleEditClick, handleCacelClick);\n  useEffect(() => {\n    getReservations().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else if (data.success) {\n        data.success.reservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          const date = new Date(reservation.selectedDate);\n          reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n        });\n        setRows(data.success.reservations);\n      } else {\n        console.log('External error');\n      }\n    });\n    return () => {\n      setRows([]);\n    };\n  }, [history, open]);\n  return (\n    /*#__PURE__*/\n    // <Box className={classes.root}>\n    //     <DataTable rows={rows} columns={columns} />\n    //     <CustomDialog \n    //         open={open} \n    //         onClose={handleDialogClose}\n    //         // eslint-disable-next-line react/style-prop-object\n    //         style={'updateReservation'}\n    //     >\n    //         <UpdateReservation initValues={initValues} setOpen={setOpen} />\n    //     </CustomDialog>\n    // </Box>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%'\n        },\n        className: root,\n        children: /*#__PURE__*/_jsxDEV(TabContext, {\n          value: value,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              borderBottom: 1,\n              borderColor: 'divider'\n            },\n            children: /*#__PURE__*/_jsxDEV(TabList, {\n              onChange: handleChange,\n              \"aria-label\": \"lab API tabs example\",\n              children: tabs.map((_ref, idx) => {\n                let {\n                  label,\n                  value\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(Tab, {\n                  label: label,\n                  value: value\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: \"1\",\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(DataTable, {\n              rows: todaysCheckinRows,\n              columns: columns\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: \"2\",\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(DataTable, {\n              rows: todaysCheckoutRows,\n              columns: columns\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n            value: \"3\",\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(DataTable, {\n              rows: stayOversRows,\n              columns: columns\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  );\n}\n\n_s(ListReservations, \"QBWAHPr41ClyU6e0adnTifnJbXc=\", false, function () {\n  return [useStyles, useHistory, useLanguage, useSnackBar];\n});\n\n_c = ListReservations;\nexport default ListReservations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListReservations\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx"],"names":["useEffect","useState","useStyles","format","Box","DataTable","engColumn","turksihColumns","getReservations","deleteReservation","useSnackBar","useHistory","useLanguage","TabContext","TabList","TabPanel","ListReservations","classes","history","language","updateSnackBarMessage","rows","setRows","open","setOpen","initValues","setInitValues","type","from","to","property","pax","flightNo","driverNote","selectedDate","Date","timezone","passengers","handleDialogClose","handleCacelClick","cellValues","id","row","_id","then","data","error","message","success","filter","handleEditClick","columns","console","log","reservations","map","reservation","idx","date","width","root","value","borderBottom","borderColor","handleChange","tabs","label","todaysCheckinRows","todaysCheckoutRows","stayOversRows"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Box } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport CustomDialog from '../../components/CustomDialog/CustomDialog';\nimport UpdateReservation from './UpdateReservation/UpdateReservation';\nimport { useHistory } from 'react-router-dom';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport TabPanel from '@material-ui/lab/TabPanel';\n\nfunction ListReservations(): JSX.Element{\n    const classes = useStyles();\n    const history = useHistory();\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n\n    const [rows, setRows] = useState<any>([]);\n    const [open, setOpen] = useState<boolean>(false);\n    const [initValues, setInitValues] = useState( {\n        type: 0,\n        from: 0,\n        to: 0,\n        property: '',\n        pax: 5,\n        flightNo: '',\n        driverNote: '',\n        selectedDate: new Date(),\n        timezone: 0,\n        passengers: []\n        });\n\n    const handleDialogClose = () => {\n        setOpen(false)\n    };\n\n    const handleCacelClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        deleteReservation(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation deleted!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n        \n    };\n    const handleEditClick = (cellValues: any) => {\n        setInitValues(cellValues.row)\n        setOpen(true)\n    }\n\n    const columns = language === 'tr' ? turksihColumns(handleEditClick, handleCacelClick): engColumn(handleEditClick, handleCacelClick);\n    \n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log(data.error)\n            } else if (data.success) {\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setRows(data.success.reservations);\n            } else {\n                console.log('External error')\n            }\n        })\n        return () => {\n            setRows([]);\n        }\n    }, [history, open]);\n    \n    return (\n        // <Box className={classes.root}>\n        //     <DataTable rows={rows} columns={columns} />\n        //     <CustomDialog \n        //         open={open} \n        //         onClose={handleDialogClose}\n        //         // eslint-disable-next-line react/style-prop-object\n        //         style={'updateReservation'}\n        //     >\n        //         <UpdateReservation initValues={initValues} setOpen={setOpen} />\n        //     </CustomDialog>\n        // </Box>\n        <>\n            <Box sx={{ width: '100%' }} className={root}>\n                <TabContext value={value}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n                            {tabs.map(({label, value}, idx) => (\n                                <Tab key={idx} label={label} value={value} />\n                            ))}\n                        </TabList>\n                    </Box>\n                    <TabPanel value=\"1\" style={{ width: '100%' }}><DataTable rows={todaysCheckinRows} columns={columns} /></TabPanel>\n                    <TabPanel value=\"2\" style={{ width: '100%' }}><DataTable rows={todaysCheckoutRows} columns={columns} /></TabPanel>\n                    <TabPanel value=\"3\" style={{ width: '100%' }}><DataTable rows={stayOversRows} columns={columns} /></TabPanel>\n                </TabContext>\n            </Box>\n        </>\n    )\n}\n\nexport default ListReservations;"]},"metadata":{},"sourceType":"module"}