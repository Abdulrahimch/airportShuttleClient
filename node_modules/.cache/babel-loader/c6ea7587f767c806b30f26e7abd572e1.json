{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useStyles from './useStyles';\nimport { Tabs, Tab, Grid, Menu, MenuItem, SwipeableDrawer, ListItem, List, ListItemText, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';\nimport LanguageTab from '../LanguageTab/LanguageTab';\nimport Profile from '../Profile/Profile';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport theme from '../../Theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgencyHeader() {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorCleitnEl, setAnchorCleitnEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [openClient, setOpenClient] = useState(false);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const matches = useMediaQuery(theme.breakpoints.down('md'));\n  const {\n    language\n  } = useLanguage();\n  const history = useHistory();\n  let tabs = [];\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n\n  const handleClientClose = () => {\n    setAnchorCleitnEl(null);\n    setOpenClient(false);\n  };\n\n  const handleClick = (event, url) => {\n    history.push(url);\n    setOpen(false);\n    setOpenClient(false);\n    setOpenDrawer(false);\n  };\n\n  const handleClickMenu = (event, setAnchorFunc, setOpenFunc) => {\n    setAnchorFunc(event.currentTarget);\n    setOpenFunc(true);\n  };\n\n  const AgencyTabsDictionary = {\n    englishTabs: [{\n      label: 'Home',\n      handleClick: event => handleClick(event, '/agency-home')\n    }, {\n      label: 'clients ',\n      handleClick: event => handleClickMenu(event, setAnchorCleitnEl, setOpenClient)\n    }, {\n      label: 'reservations',\n      handleClick: event => handleClick(event, '/agency-reservation')\n    }, {\n      label: 'payments',\n      handleClick: event => handleClick(event, '/agency-payment')\n    }, {\n      label: 'dirvers',\n      handleClick: event => handleClickMenu(event, setAnchorEl, setOpen)\n    }],\n    turkishTabs: [{\n      label: 'Home',\n      handleClick: event => handleClick(event, '/agency-home')\n    }, {\n      label: 'müşteriler ',\n      handleClick: event => handleClickMenu(event, setAnchorCleitnEl, setOpenClient)\n    }, {\n      label: 'rezervasyonlar',\n      handleClick: event => handleClick(event, '/agency-reservation')\n    }, {\n      label: 'finans',\n      handleClick: event => handleClick(event, '/agency-payment')\n    }, {\n      label: 'sürücüler',\n      handleClick: event => handleClickMenu(event, setAnchorEl, setOpen)\n    }]\n  };\n  const menus = [{\n    anchorEl: anchorEl,\n    open: open,\n    onClose: handleClose,\n    options: [{\n      label: language === 'eng' ? 'All Drivers' : 'Sürücüler',\n      handleClick: event => handleClick(event, 'drivers')\n    }, {\n      label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle',\n      handleClick: event => handleClick(event, 'add-driver')\n    }]\n  }, {\n    anchorEl: anchorCleitnEl,\n    open: openClient,\n    onClose: handleClientClose,\n    options: [{\n      label: language === 'eng' ? 'All Clients' : 'Müşteriler',\n      handleClick: event => handleClick(event, 'clients')\n    }, {\n      label: language === 'eng' ? 'Add Client' : 'Müşteri Ekle',\n      handleClick: event => handleClick(event, 'add-client')\n    }]\n  }];\n\n  const drawer = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n      open: openDrawer,\n      onClose: () => {\n        setOpenDrawer(false);\n      },\n      onOpen: () => {\n        setOpenDrawer(true);\n      },\n      classes: {\n        paper: classes.drawer\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarMargin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: event => {\n            handleClick(event, '/agency-home');\n          },\n          divider: true,\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: event => handleClickMenu(event, setAnchorCleitnEl, setOpenClient),\n          divider: true,\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: \"clients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: event => handleClick(event, '/agency-reservation'),\n          divider: true,\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: language === 'eng' ? 'Reservations' : 'Rezervasyonlar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: event => handleClick(event, '/agency-payment'),\n          divider: true,\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: language === 'eng' ? 'Payments' : 'Finans'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: event => handleClickMenu(event, setAnchorEl, setOpen),\n          divider: true,\n          button: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            disableTypography: true,\n            children: language === 'eng' ? 'Drivers' : 'Sürücüler'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.drawerIcon,\n      onClick: () => {\n        setOpenDrawer(!openDrawer);\n      },\n      disableRipple: true,\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n        className: classes.drawerIconMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  const {\n    englishTabs,\n    turkishTabs\n  } = AgencyTabsDictionary;\n\n  function tabFormation() {\n    if (language === 'tr') tabs = turkishTabs;else tabs = englishTabs;\n    return tabs.map((_ref, idx) => {\n      let {\n        label,\n        handleClick\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Tab, {\n        label: label,\n        onClick: handleClick,\n        className: classes.tabs\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: [matches ? drawer : /*#__PURE__*/_jsxDEV(Tabs, {\n        \"aria-label\": \"wrapped label tabs example\",\n        TabIndicatorProps: {\n          style: {\n            display: \"none\"\n          }\n        },\n        children: tabFormation()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }, this), menus.map(_ref2 => {\n        let {\n          anchorEl,\n          open,\n          onClose,\n          options\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"lock-menu\",\n            anchorEl: anchorEl,\n            open: open,\n            onClose: onClose,\n            classes: {\n              paper: classes.menu\n            },\n            MenuListProps: {\n              'aria-labelledby': 'lock-button',\n              role: 'listbox'\n            },\n            children: options.map((_ref3, idx) => {\n              let {\n                label,\n                handleClick\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleClick,\n                children: label\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.gridItem,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(LanguageTab, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AgencyHeader, \"WTTHm65Dc3TTE3gMzJ3FSo6g4Js=\", false, function () {\n  return [useStyles, useMediaQuery, useLanguage, useHistory];\n});\n\n_c = AgencyHeader;\nexport default AgencyHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyHeader\");","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx"],"names":["useState","useStyles","Tabs","Tab","Grid","Menu","MenuItem","SwipeableDrawer","ListItem","List","ListItemText","IconButton","MenuIcon","useLanguage","useHistory","LanguageTab","Profile","useMediaQuery","theme","AgencyHeader","classes","anchorEl","setAnchorEl","anchorCleitnEl","setAnchorCleitnEl","open","setOpen","openClient","setOpenClient","openDrawer","setOpenDrawer","matches","breakpoints","down","language","history","tabs","handleClose","handleClientClose","handleClick","event","url","push","handleClickMenu","setAnchorFunc","setOpenFunc","currentTarget","AgencyTabsDictionary","englishTabs","label","turkishTabs","menus","onClose","options","drawer","paper","toolbarMargin","drawerIcon","drawerIconMenu","tabFormation","map","idx","root","style","display","menu","role","gridItem"],"mappings":"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","sourcesContent":["import { useState } from 'react';  \nimport useStyles from './useStyles';\nimport { Tabs, Tab, Grid, Menu, MenuItem, SwipeableDrawer, ListItem, List, ListItemText, IconButton } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';  \nimport LanguageTab from '../LanguageTab/LanguageTab';\nimport Profile from '../Profile/Profile';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport theme from '../../Theme';\n\n\nfunction AgencyHeader(): JSX.Element {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [anchorCleitnEl, setAnchorCleitnEl] = useState<null | HTMLElement>(null);\n    const [open, setOpen] = useState<boolean>(false);\n    const [openClient, setOpenClient] = useState<boolean>(false);\n    const [openDrawer, setOpenDrawer] = useState<boolean>(false);\n    const matches = useMediaQuery(theme.breakpoints.down('md'));\n\n    \n    const { language } = useLanguage();\n    const history = useHistory();\n\n    let tabs = [];\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false)\n    };\n\n    const handleClientClose = () => {\n        setAnchorCleitnEl(null);\n        setOpenClient(false);\n    };\n\n    const handleClick = (event: any, url: string) => {\n        history.push(url);\n        setOpen(false);\n        setOpenClient(false);\n        setOpenDrawer(false);\n    };\n\n    const handleClickMenu = (event: any, setAnchorFunc: (event: any) => void, setOpenFunc: (value: boolean) => void) => {\n        setAnchorFunc(event.currentTarget);\n        setOpenFunc(true)\n    };\n\n    const AgencyTabsDictionary = {\n        englishTabs : [\n            { label: 'Home', handleClick: (event: any) => handleClick(event, '/agency-home') },\n            { label: 'clients ', handleClick: (event: any) => handleClickMenu(event, setAnchorCleitnEl, setOpenClient) },\n            { label: 'reservations', handleClick: (event: any) => handleClick(event, '/agency-reservation') },\n            { label: 'payments', handleClick: (event: any) => handleClick(event, '/agency-payment') },\n            { label: 'dirvers',  handleClick: (event: any) => handleClickMenu(event, setAnchorEl, setOpen) }\n        ],\n        turkishTabs : [\n            { label: 'Home', handleClick: (event: any) => handleClick(event, '/agency-home') },\n            { label: 'müşteriler ', handleClick: (event: any) => handleClickMenu(event, setAnchorCleitnEl, setOpenClient) },\n            { label: 'rezervasyonlar', handleClick: (event: any) => handleClick(event, '/agency-reservation') },\n            { label: 'finans', handleClick: (event: any) => handleClick(event, '/agency-payment') },\n            { label: 'sürücüler', handleClick: (event: any) => handleClickMenu(event, setAnchorEl, setOpen)}\n        ]\n      };\n\n    const menus = [\n        {\n            anchorEl: anchorEl, open: open, onClose: handleClose, \n            options: [\n                { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', handleClick: (event: any) => handleClick(event, 'drivers') },\n                { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', handleClick: (event: any) => handleClick(event, 'add-driver') }\n            ]\n        },\n        {\n            anchorEl: anchorCleitnEl, open: openClient, onClose: handleClientClose, \n            options: [\n                { label: language === 'eng' ? 'All Clients' : 'Müşteriler', handleClick: (event: any) => handleClick(event, 'clients')},\n                { label: language === 'eng' ? 'Add Client' : 'Müşteri Ekle', handleClick: (event: any) => handleClick(event, 'add-client') }\n            ],\n        }  \n    ];\n\n    const drawer = (\n        <>\n            <SwipeableDrawer \n                open={openDrawer} \n                onClose={() => {setOpenDrawer(false)}} \n                onOpen={() => {setOpenDrawer(true)}}\n                classes={{paper: classes.drawer}}\n            >\n            <div className={classes.toolbarMargin} />  \n            <List disablePadding>\n                <ListItem \n                    onClick={(event: any) => {handleClick(event, '/agency-home')}} \n                    divider button \n                >\n                    <ListItemText disableTypography>Home</ListItemText>\n                </ListItem>\n                <ListItem \n                    onClick={(event: any) => handleClickMenu(event, setAnchorCleitnEl, setOpenClient)} \n                    divider button \n                >   \n                    <ListItemText disableTypography>clients</ListItemText>\n                </ListItem>\n                <ListItem \n                    onClick={(event: any) => handleClick(event, '/agency-reservation')} \n                    divider button \n                >   \n                    <ListItemText disableTypography>{language === 'eng' ? 'Reservations' : 'Rezervasyonlar'}</ListItemText>\n                </ListItem>\n                <ListItem \n                    onClick={(event: any) => handleClick(event, '/agency-payment')} \n                    divider button \n                >\n                    <ListItemText disableTypography>{language === 'eng' ? 'Payments' : 'Finans'}</ListItemText>\n                </ListItem>\n                <ListItem \n                onClick={(event: any) => handleClickMenu(event, setAnchorEl, setOpen)} \n                divider button \n                >\n                    <ListItemText disableTypography>{language === 'eng' ? 'Drivers' : 'Sürücüler'}</ListItemText>\n                </ListItem>\n            </List>    \n            </SwipeableDrawer>\n            <IconButton className={classes.drawerIcon} onClick={() => {setOpenDrawer(!openDrawer)}} disableRipple>\n                <MenuIcon className={classes.drawerIconMenu} />\n            </IconButton>\n        </>\n    )\n\n    const { englishTabs,  turkishTabs } = AgencyTabsDictionary;\n    \n    function tabFormation() {\n        if (language === 'tr') tabs = turkishTabs;\n        else tabs = englishTabs;\n        return tabs.map(({ label, handleClick }, idx) => (\n            <Tab\n                key={idx}\n                label={label}\n                onClick={handleClick}\n                className={classes.tabs}\n            />\n        ));\n    };\n\n    return (\n        <Grid container className={classes.root}>\n            <Grid item>\n                {matches ? drawer : <Tabs\n                    aria-label=\"wrapped label tabs example\"\n                    TabIndicatorProps={{\n                        style: {\n                            display: \"none\",\n                        },\n                    }}\n                >\n                    {tabFormation()}\n                </Tabs>}\n                {\n                    menus.map(({ anchorEl, open, onClose, options }) => (\n                        <>\n                            <Menu\n                                id=\"lock-menu\"\n                                anchorEl={anchorEl}\n                                open={open}\n                                onClose={onClose}\n                                classes={{ paper: classes.menu }}\n                                MenuListProps={{\n                                'aria-labelledby': 'lock-button',\n                                role: 'listbox',\n                                }}\n                            >\n                                {options.map(({label, handleClick}, idx) => (\n                                <MenuItem\n                                    key={idx}\n                                    onClick={handleClick}\n                                >\n                                    {label}\n                                </MenuItem>\n                                ))}\n                            </Menu>\n                        </>\n                    ))\n                }\n            </Grid>\n            <Grid item className={classes.gridItem}>\n                <Grid container>\n                    <LanguageTab />\n                    <Profile />\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default AgencyHeader;"]},"metadata":{},"sourceType":"module"}