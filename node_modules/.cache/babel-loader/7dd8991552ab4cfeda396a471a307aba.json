{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { Card, CardMedia, CardContent, Typography, Grid } from '@material-ui/core';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';\nimport { getStat, getstatInfo } from '../../helpers/APICalls/agencyReservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { engUnconfirmedResColumns, turkishUnconfirmedResColumns } from '../../utils/dictionary/home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initStat = {\n  owedUsersNumber: 0,\n  unconfirmedReservationsNumber: 0\n};\n\nconst Home = () => {\n  _s();\n\n  const {\n    root,\n    card,\n    itemContaienr\n  } = useStyles();\n  const {\n    language\n  } = useLanguage();\n  const [stat, setStat] = useState(initStat);\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const history = useHistory();\n  const rows = [{\n    id: 1,\n    date: '2022-01-01',\n    from: 'sultanahmet',\n    to: 'ist Airport',\n    flightNo: 'tk123',\n    pax: 5\n  }];\n  const columns = language === 'eng' ? engUnconfirmedResColumns() : turkishUnconfirmedResColumns();\n  useEffect(() => {\n    getStat().then(data => {\n      if (data.error) {\n        console.log(data.error);\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        setStat(data.success);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getstatInfo().then(data => {\n      if (data.error) {\n        console.log(data.error);\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        setStat(data.success);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  }, [stat]);\n  const cards = [{\n    cardImg: 'https://airportshuttle0.s3.amazonaws.com/airport-shuttle02.jpeg',\n    title: 'Unconfirmed Reservations',\n    content: 'Reservations waiting for confirmation!',\n    number: stat.unconfirmedReservationsNumber,\n    btnText: 'Show',\n    handleClick: () => {\n      history.push('/unconfirmed-reservations');\n    }\n  }, {\n    cardImg: 'https://airportshuttle0.s3.amazonaws.com/money.jpeg',\n    title: 'Debt',\n    content: 'clients owe you moeny!!',\n    number: stat.owedUsersNumber,\n    btnText: 'Show',\n    handleClick: () => {\n      history.push('/debt');\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        spacing: 3,\n        justifyContent: \"space-evenly\",\n        className: itemContaienr,\n        children: cards.map(_ref => {\n          let {\n            cardImg,\n            title,\n            content,\n            number,\n            btnText,\n            handleClick\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: card,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"140\",\n              image: cardImg,\n              alt: \"Debt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              style: {\n                backgroundColor: '#2F4F4F'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"div\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: `${number} ${content}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          rows: [],\n          columns: columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"25YDEl0JCaSnxOkDnKfajMYg61k=\", false, function () {\n  return [useStyles, useLanguage, useSnackBar, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Home/Home.tsx"],"names":["useEffect","useState","useStyles","Card","CardMedia","CardContent","Typography","Grid","useLanguage","useHistory","getStat","getstatInfo","useSnackBar","DataTable","engUnconfirmedResColumns","turkishUnconfirmedResColumns","initStat","owedUsersNumber","unconfirmedReservationsNumber","Home","root","card","itemContaienr","language","stat","setStat","updateSnackBarMessage","history","rows","id","date","from","to","flightNo","pax","columns","then","data","error","console","log","success","cards","cardImg","title","content","number","btnText","handleClick","push","map","backgroundColor"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button, Grid } from '@material-ui/core';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport { useHistory } from 'react-router-dom';\nimport UnconfirmedReservations from './Statistics/UnconfirmedReservations';\nimport { getStat, getstatInfo } from '../../helpers/APICalls/agencyReservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { GetStatApiDataSuccess } from '../../interface/agencyReservation';\nimport { engUnconfirmedResColumns, turkishUnconfirmedResColumns } from '../../utils/dictionary/home';\n \nconst initStat = {\n    owedUsersNumber: 0,\n    unconfirmedReservationsNumber: 0\n};\n\nconst Home = (): JSX.Element => {\n    const { root, card, itemContaienr } = useStyles();\n    const { language } = useLanguage();\n    const [stat, setStat] = useState<GetStatApiDataSuccess>(initStat);\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory()\n    const rows = [{id: 1, date: '2022-01-01', from: 'sultanahmet', to: 'ist Airport', flightNo: 'tk123', pax: 5}]\n    const columns = language === 'eng' ? engUnconfirmedResColumns() : turkishUnconfirmedResColumns();\n\n    useEffect(() => {\n        getStat().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                setStat(data.success);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        getstatInfo().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                setStat(data.success);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, [stat]);\n\n    const cards = [\n            {\n                cardImg: 'https://airportshuttle0.s3.amazonaws.com/airport-shuttle02.jpeg',\n                title: 'Unconfirmed Reservations',\n                content: 'Reservations waiting for confirmation!',\n                number: stat.unconfirmedReservationsNumber,\n                btnText: 'Show',\n                handleClick: () => {history.push('/unconfirmed-reservations')}\n            }, {\n                cardImg: 'https://airportshuttle0.s3.amazonaws.com/money.jpeg',\n                title: 'Debt',\n                content: 'clients owe you moeny!!',\n                number: stat.owedUsersNumber,\n                btnText: 'Show',\n                handleClick: () => {history.push('/debt')}\n            }\n        ]\n    return (\n    <>\n        <Grid container direction=\"column\" className={root}>\n            <Grid item container spacing={3} justifyContent=\"space-evenly\" className={itemContaienr}>\n                {cards.map(({ cardImg, title, content, number, btnText, handleClick }) => (\n                <Card className={card}>\n                    <CardMedia\n                        component=\"img\"\n                        height=\"140\"\n                        image={cardImg}\n                        alt=\"Debt\"\n                    />\n                    <CardContent style={{ backgroundColor:'#2F4F4F' }}>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {title}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            {`${number} ${content}`}\n                        </Typography>\n                    </CardContent>\n                </Card>\n                ))}\n            </Grid>\n            <Grid item container justifyContent='flex-end'  alignItems='center'>\n                <DataTable rows={[]} columns={columns}/>\n            </Grid>\n        </Grid>\n    </>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}