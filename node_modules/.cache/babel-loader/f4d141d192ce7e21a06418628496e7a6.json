{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { Box } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { clientReservationsDictionary } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const { engColumns, turksihColumns } = clientReservationsDictionary;\nconst {\n  turksihColumns\n} = clientReservationsDictionary;\nlet lan = 'eng';\n\nfunction ListReservations() {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n\n  const handleClick = cellValues => {\n    console.log('this is clicked from here here we are', cellValues.id);\n    setRows(rows.filter(row => row.id !== cellValues.id));\n  }; // const tableButton = renderButtonCell(handleClick);\n  // const angColumnsWithButtons = engColumns.concat(tableButton);\n\n\n  console.log(rows);\n  useEffect(() => {\n    getReservations().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else if (data.success) {\n        setRows(data.success.rows);\n        data.success.rows.map((row, idx) => {\n          row.id = idx + 1;\n        });\n      } else {\n        console.log('Externam error');\n      }\n    });\n    return () => {\n      setRows([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: lan === 'tr' ? turksihColumns : angColumnsWithButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n} // function renderButtonCell (handleClick: (cellValues: any) => void) {\n//     const buttons = [{\n//         field: \"Edit\",\n//         renderCell: (cellValues: any) => {\n//           return (\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               onClick={() => {console.log('this is hirted')}}\n//             >\n//               Edit\n//             </Button>\n//           );\n//         }\n//       },\n//       {\n//         field: \"Cancel\",\n//         renderCell: (cellValues: any) => {\n//           return (\n//             <Button\n//               variant=\"contained\"\n//               color=\"secondary\"\n//               onClick={() => handleClick(cellValues)}\n//             >\n//               Cancel\n//             </Button>\n//           );\n//         }\n//       }]\n//     return buttons;\n// };\n\n\n_s(ListReservations, \"QhZRz5N6UNmfyDDz0Qxv5sb0dZg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListReservations;\nexport default ListReservations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListReservations\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx"],"names":["useEffect","useState","useStyles","Box","DataTable","clientReservationsDictionary","getReservations","turksihColumns","lan","ListReservations","classes","rows","setRows","handleClick","cellValues","console","log","id","filter","row","then","data","error","success","map","idx","root","angColumnsWithButtons"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,GAAT,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,4BAAT,QAA6C,wBAA7C;AAEA,SAASC,eAAT,QAAgC,oCAAhC;;AAIA;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAqBF,4BAA3B;AAGA,IAAIG,GAAG,GAAG,KAAV;;AAEA,SAASC,gBAAT,GAAwC;AAAA;;AACpC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAM,EAAN,CAAhC;;AAEA,QAAMY,WAAW,GAAKC,UAAD,IAAqB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,UAAU,CAACG,EAAhE;AACAL,IAAAA,OAAO,CAACD,IAAI,CAACO,MAAL,CAAaC,GAAD,IAAcA,GAAG,CAACF,EAAJ,KAAWH,UAAU,CAACG,EAAhD,CAAD,CAAP;AACH,GAHD,CAJoC,CAQpC;AACA;;;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,eAAe,GAAGc,IAAlB,CAAwBC,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXP,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,KAAjB;AACH,OAFD,MAEO,IAAID,IAAI,CAACE,OAAT,EAAkB;AACrBX,QAAAA,OAAO,CAACS,IAAI,CAACE,OAAL,CAAaZ,IAAd,CAAP;AACAU,QAAAA,IAAI,CAACE,OAAL,CAAaZ,IAAb,CAAkBa,GAAlB,CAAsB,CAACL,GAAD,EAAMM,GAAN,KAAc;AAChCN,UAAAA,GAAG,CAACF,EAAJ,GAASQ,GAAG,GAAG,CAAf;AACH,SAFD;AAGH,OALM,MAKA;AACHV,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,KAXD;AAYA,WAAO,MAAM;AACTJ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAFD;AAGH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACgB,IAAxB;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEf,IAAjB;AAAuB,MAAA,OAAO,EAAEH,GAAG,KAAK,IAAR,GAAeD,cAAf,GAAgCoB;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAnESlB,gB;UACWP,S;;;KADXO,gB;AAsET,eAAeA,gBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { Box, Button } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { clientReservationsDictionary } from '../../utils/dictionary';\nimport { engColumn } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { GetReservationApiData } from '../../interface/Reservation';\nimport { GridColumns } from '@material-ui/data-grid';\n\n// const { engColumns, turksihColumns } = clientReservationsDictionary;\nconst { turksihColumns } = clientReservationsDictionary;\n\n\nlet lan = 'eng';\n\nfunction ListReservations(): JSX.Element{\n    const classes = useStyles();\n    const [rows, setRows] = useState<any>([]);\n\n    const handleClick =  (cellValues: any) => {\n        console.log('this is clicked from here here we are', cellValues.id);\n        setRows(rows.filter((row: any) => row.id !== cellValues.id));\n    }\n    // const tableButton = renderButtonCell(handleClick);\n    // const angColumnsWithButtons = engColumns.concat(tableButton);\n\n    console.log(rows)\n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log(data.error)\n            } else if (data.success) {\n                setRows(data.success.rows)\n                data.success.rows.map((row, idx) => {\n                    row.id = idx + 1;\n                })\n            } else {\n                console.log('Externam error')\n            }\n        })\n        return () => {\n            setRows([]);\n        }\n    }, []);\n\n    return (\n        <Box className={classes.root}>\n            <DataTable rows={rows} columns={lan === 'tr' ? turksihColumns : angColumnsWithButtons} />\n        </Box>\n    )\n}\n\n// function renderButtonCell (handleClick: (cellValues: any) => void) {\n//     const buttons = [{\n//         field: \"Edit\",\n//         renderCell: (cellValues: any) => {\n//           return (\n//             <Button\n//               variant=\"contained\"\n//               color=\"primary\"\n//               onClick={() => {console.log('this is hirted')}}\n//             >\n//               Edit\n//             </Button>\n//           );\n//         }\n//       },\n//       {\n//         field: \"Cancel\",\n//         renderCell: (cellValues: any) => {\n//           return (\n//             <Button\n//               variant=\"contained\"\n//               color=\"secondary\"\n//               onClick={() => handleClick(cellValues)}\n//             >\n//               Cancel\n//             </Button>\n//           );\n//         }\n//       }]\n//     return buttons;\n// };\n\n\nexport default ListReservations;"]},"metadata":{},"sourceType":"module"}