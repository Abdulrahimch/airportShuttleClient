{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservationPaymentStat } from '../../../../helpers/APICalls/agencyReservation';\nimport { format } from 'date-fns';\nimport { reservationDetailsEngColumns, reservationDetailsTurksihColumns, paymentDetailsEngColumns, paymentDetailsTurkishColumns, totalDetailsEngColumns, totalDetailsTurkishColumns, detailsEngColumns, detailsTurksihColumns } from '../../../../utils/dictionary';\nimport Search from '../../../../components/Search/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\n\nfunction Details(_ref) {\n  _s();\n\n  let {\n    clientId,\n    debt\n  } = _ref;\n  const {\n    language\n  } = useLanguage();\n  const reservationColumns = language === 'eng' ? reservationDetailsEngColumns() : reservationDetailsTurksihColumns();\n  const paymentColumns = language === 'eng' ? paymentDetailsEngColumns() : paymentDetailsTurkishColumns();\n  const totalColumns = language === 'eng' ? totalDetailsEngColumns() : totalDetailsTurkishColumns();\n  const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n  const [reservationRows, setReservationRows] = useState([]);\n  const [paymentRows, setPaymentRows] = useState([]);\n  const [detailsRows, setDetailsRows] = useState([]);\n  const [useEffectTrigger, setUseEffectTrigger] = useState(false);\n  const [from, setFrom] = useState(new Date());\n  const date = new Date();\n  const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n  const reservationTotal = useRef(0);\n  const paymentTotal = useRef(0);\n  const totalsRows = useRef([{\n    id: 1,\n    reservationTotal: 0,\n    paymentTotal: 0,\n    currency: 'TL',\n    debt: debt\n  }]);\n\n  const invokeUseEffect = () => {\n    setUseEffectTrigger(!useEffectTrigger);\n  };\n\n  useEffect(() => {\n    // getClientReservation(clientId).then((data) => {\n    //     if (data.error) {\n    //         console.log(data.error)\n    //     } else if (data.success) {\n    //         data.success.reservations.map((reservation, idx) => {\n    //             reservation.id = idx + 1;\n    //             const date = new Date(reservation.selectedDate);\n    //             reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n    //             reservationTotal.current =  reservation.cost ? reservation.cost : 0;\n    //             })\n    //         totalsRows.current[0].reservationTotal = reservationTotal.current;\n    //         setReservationRows(data.success.reservations);\n    //     } else {\n    //         console.log('External Error, please try again Later!')\n    //     }\n    // });\n    // getClientPayments(clientId).then((data) => {\n    //     if(data.error) {\n    //         console.log(data.error.message)\n    //     } else if (data.success) {\n    //         data.success.payment.map((item, idx) => {\n    //             item.id = idx + 1;\n    //             item.property = item.client?.property;\n    //             paymentTotal.current = item.paidInTL;\n    //         });\n    //         totalsRows.current[0].paymentTotal = paymentTotal.current;\n    //         setPaymentRows(data.success.payment);\n    //     }\n    // });\n    // setDetailsRows(reservationRows.concat(paymentRows))\n    // return () => {\n    //     setReservationRows([]);\n    //     setPaymentRows([]);\n    //     setDetailsRows([]);\n    // }\n    getClientReservationPaymentStat(clientId).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else if (data.success) {\n        console.log('data success is: ', data.success);\n        data.success.reservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          const date = new Date(reservation.selectedDate);\n          reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n          reservationTotal.current = reservation.cost ? reservation.cost : 0;\n        });\n        data.success.payments.map((item, idx) => {\n          var _item$client;\n\n          item.id = idx + 1;\n          item.property = (_item$client = item.client) === null || _item$client === void 0 ? void 0 : _item$client.property;\n          paymentTotal.current = item.paidInTL;\n        });\n        totalsRows.current[0].reservationTotal = reservationTotal.current;\n        totalsRows.current[0].paymentTotal = paymentTotal.current;\n        setReservationRows(data.success.reservations);\n        setPaymentRows(data.success.payments);\n        setDetailsRows(reservationRows.concat(paymentRows));\n      } else {\n        console.log('External Error, please try again Later!');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        from: from,\n        to: to,\n        setFrom: setFrom,\n        setTo: setTo,\n        invokeUseEffect: invokeUseEffect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: detailsRows,\n        columns: detailsColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: totalsRows.current,\n        columns: totalColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Details, \"CPmF66WEytGreAlZTMAWs3EMbD0=\", false, function () {\n  return [useLanguage];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx"],"names":["Box","useEffect","useState","useRef","DataTable","useLanguage","getClientReservationPaymentStat","format","reservationDetailsEngColumns","reservationDetailsTurksihColumns","paymentDetailsEngColumns","paymentDetailsTurkishColumns","totalDetailsEngColumns","totalDetailsTurkishColumns","detailsEngColumns","detailsTurksihColumns","Search","Details","clientId","debt","language","reservationColumns","paymentColumns","totalColumns","detailsColumns","reservationRows","setReservationRows","paymentRows","setPaymentRows","detailsRows","setDetailsRows","useEffectTrigger","setUseEffectTrigger","from","setFrom","Date","date","to","setTo","setHours","getHours","reservationTotal","paymentTotal","totalsRows","id","currency","invokeUseEffect","then","data","error","console","log","success","reservations","map","reservation","idx","selectedDate","current","cost","payments","item","property","client","paidInTL","concat"],"mappings":"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","sourcesContent":["import {  Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservation, getClientReservationPaymentStat } from '../../../../helpers/APICalls/agencyReservation';\nimport { getClientPayments } from '../../../../helpers/APICalls/agencyPayment';\nimport { format } from 'date-fns';\n\nimport { \n        reservationDetailsEngColumns,  reservationDetailsTurksihColumns,\n        paymentDetailsEngColumns, paymentDetailsTurkishColumns,\n        totalDetailsEngColumns, totalDetailsTurkishColumns,\n        detailsEngColumns, detailsTurksihColumns\n        } from '../../../../utils/dictionary';\nimport Search from '../../../../components/Search/Search';\n\ninterface Props {\n    clientId: string;\n    debt: number;\n};\n\ninterface Total {\n    id: number;\n    reservationTotal?: number;\n    paymentTotal?: number;\n    currency: string;\n    debt: number;\n}\n\nfunction Details({ clientId, debt }: Props): JSX.Element {\n    const { language } = useLanguage();\n    const reservationColumns = language === 'eng' ? reservationDetailsEngColumns() : reservationDetailsTurksihColumns();\n    const paymentColumns = language === 'eng' ? paymentDetailsEngColumns() : paymentDetailsTurkishColumns();\n    const totalColumns = language === 'eng' ? totalDetailsEngColumns() : totalDetailsTurkishColumns();\n    const detailsColumns = language === 'eng' ? detailsEngColumns() : detailsTurksihColumns();\n    \n    const [reservationRows, setReservationRows] = useState<any>([]);\n    const [paymentRows, setPaymentRows] = useState<any>([]);\n    const [detailsRows, setDetailsRows] = useState<any>([]);\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [from, setFrom] = useState(new Date());\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n\n    const reservationTotal = useRef(0);\n    const paymentTotal = useRef(0);\n    const totalsRows = useRef<Total[]>([{id: 1, reservationTotal: 0, paymentTotal: 0, currency: 'TL', debt: debt}]); \n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    useEffect(() => {\n        // getClientReservation(clientId).then((data) => {\n        //     if (data.error) {\n        //         console.log(data.error)\n        //     } else if (data.success) {\n        //         data.success.reservations.map((reservation, idx) => {\n        //             reservation.id = idx + 1;\n        //             const date = new Date(reservation.selectedDate);\n        //             reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n        //             reservationTotal.current =  reservation.cost ? reservation.cost : 0;\n                    \n        //             })\n        //         totalsRows.current[0].reservationTotal = reservationTotal.current;\n        //         setReservationRows(data.success.reservations);\n                \n        //     } else {\n        //         console.log('External Error, please try again Later!')\n        //     }\n        // });\n        // getClientPayments(clientId).then((data) => {\n        //     if(data.error) {\n        //         console.log(data.error.message)\n        //     } else if (data.success) {\n        //         data.success.payment.map((item, idx) => {\n        //             item.id = idx + 1;\n        //             item.property = item.client?.property;\n        //             paymentTotal.current = item.paidInTL;\n        //         });\n        //         totalsRows.current[0].paymentTotal = paymentTotal.current;\n        //         setPaymentRows(data.success.payment);\n                \n        //     }\n        // });\n        // setDetailsRows(reservationRows.concat(paymentRows))\n        // return () => {\n        //     setReservationRows([]);\n        //     setPaymentRows([]);\n        //     setDetailsRows([]);\n        // }\n        getClientReservationPaymentStat(clientId).then((data) => {\n                if (data.error) {\n                    console.log(data.error)\n                } else if (data.success) {\n                    console.log('data success is: ', data.success);\n                    data.success.reservations.map((reservation, idx) => {\n                        reservation.id = idx + 1;\n                        const date = new Date(reservation.selectedDate);\n                        reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                        reservationTotal.current =  reservation.cost ? reservation.cost : 0;\n                        });\n                    data.success.payments.map((item, idx) => {\n                        item.id = idx + 1;\n                        item.property = item.client?.property;\n                        paymentTotal.current = item.paidInTL;\n                    });\n                    totalsRows.current[0].reservationTotal = reservationTotal.current;\n                    totalsRows.current[0].paymentTotal = paymentTotal.current;\n                    setReservationRows(data.success.reservations);\n                    setPaymentRows(data.success.payments);\n                    setDetailsRows(reservationRows.concat(paymentRows));\n                    \n                } else {\n                    console.log('External Error, please try again Later!')\n                }\n            });\n    }, []);\n    return (\n        <>  \n            <Box display='flex' flexDirection='column'>\n                <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n\n                {/* <DataTable rows={reservationRows} columns={reservationColumns}/>\n                <DataTable rows={paymentRows} columns={paymentColumns} /> */}\n                <DataTable rows={detailsRows} columns={detailsColumns} />\n                <DataTable rows={totalsRows.current} columns={totalColumns} />\n            </Box>\n        </>\n    )\n}\nexport default Details"]},"metadata":{},"sourceType":"module"}