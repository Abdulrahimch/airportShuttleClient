{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/NewReservation/NewReservationForm/NewReservationForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, InputLabel, TextField, Grid, Select, MenuItem, Button, CircularProgress, FormHelperText } from '@material-ui/core';\nimport { Formik, FieldArray, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst airports = [{\n  value: 1,\n  name: 'Istanbul Airport'\n}, {\n  value: 2,\n  name: 'Sabiha Airport'\n}];\nconst resorts = [{\n  value: 1,\n  name: 'Sultan Ahmet'\n}, {\n  value: 2,\n  name: 'Sirkeci'\n}, {\n  value: 3,\n  name: 'Taksim'\n}, {\n  value: 4,\n  name: 'Fatih'\n}, {\n  value: 5,\n  name: 'Laleli'\n}];\n\nfunction NewReservationForm(form, _ref) {\n  _s();\n\n  let {\n    handleSubmit\n  } = _ref;\n  const classes = useStyles();\n  const {\n    type,\n    from,\n    to,\n    pax,\n    hotel,\n    fullName,\n    passenger,\n    driverNote,\n    flightNo\n  } = form.form;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          type: 0,\n          from: 0,\n          to: 0,\n          hotel: '',\n          pax: 0,\n          flightNo: '',\n          driverNote: '',\n          passengers: []\n        },\n        validationSchema: Yup.object().shape({\n          type: Yup.string().required('This Field is required'),\n          from: Yup.string().required('This Field is required'),\n          to: Yup.string().required('This Field is required'),\n          hotel: Yup.string().required('This Field is required'),\n          flightNo: Yup.string().required('This Field is required'),\n          driverNote: Yup.string(),\n          pax: Yup.number().min(1).max(10).default(1)\n        }),\n        onSubmit: handleSubmit,\n        children: _ref2 => {\n          let {\n            handleSubmit,\n            handleChange,\n            values,\n            touched,\n            errors,\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: classes.form,\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  className: classes.itemContainer,\n                  spacing: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"type\",\n                      className: classes.inputLabel,\n                      children: type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"type\",\n                      name: \"type\",\n                      autoWidth: true,\n                      MenuProps: {\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      },\n                      value: values.type,\n                      onChange: handleChange,\n                      classes: {\n                        select: classes.select\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 1,\n                        children: \"Airport to Resort\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 2,\n                        children: \"Resort to Airport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      error: Boolean(errors.type),\n                      children: errors.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: pax\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"pax\",\n                      name: \"pax\",\n                      autoWidth: true,\n                      MenuProps: {\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      },\n                      value: values.pax,\n                      onChange: handleChange,\n                      classes: {\n                        select: classes.select\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 1,\n                        className: classes.menuItem,\n                        children: \"1\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 2,\n                        children: \"2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 4,\n                        children: \"4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 8,\n                        children: \"8\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      error: Boolean(errors.pax),\n                      children: errors.pax\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  className: classes.itemContainer,\n                  spacing: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: from\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"from\",\n                      name: \"from\",\n                      autoWidth: true,\n                      MenuProps: {\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      },\n                      value: values.from,\n                      onChange: handleChange,\n                      classes: {\n                        select: classes.select\n                      },\n                      children: values.type === 1 ? airports.map(airport => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: airport.value,\n                        children: airport.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 49\n                      }, this)) : resorts.map(resort => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: resort.value,\n                        children: resort.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 49\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      error: Boolean(errors.from),\n                      children: errors.from\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: to\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"to\",\n                      name: \"to\",\n                      autoWidth: true,\n                      MenuProps: {\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      },\n                      value: values.to,\n                      onChange: handleChange,\n                      classes: {\n                        select: classes.select\n                      },\n                      children: values.type === 2 ? airports.map(airport => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: airport.value,\n                        children: airport.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 49\n                      }, this)) : resorts.map(resort => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: resort.value,\n                        children: resort.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 49\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                      error: Boolean(errors.to),\n                      children: errors.to\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  className: classes.itemContainer,\n                  spacing: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: hotel\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"hotel\",\n                      name: \"hotel\",\n                      error: Boolean(errors.hotel),\n                      helperText: errors.hotel,\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.hotel,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: flightNo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"flightNo\",\n                      name: \"flightNo\",\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.flightNo,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  className: classes.inputLabel,\n                  children: driverNote\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"driverNote\",\n                  name: \"driverNote\",\n                  multiline: true,\n                  rows: 4,\n                  InputProps: {\n                    classes: {\n                      input: classes.inputs\n                    },\n                    disableUnderline: true\n                  },\n                  value: values.driverNote,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                lg: 6,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  className: classes.itemContainer,\n                  spacing: 4,\n                  children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                    name: \"passengers\",\n                    children: fieldArrayProps => {\n                      const {\n                        push,\n                        remove,\n                        form\n                      } = fieldArrayProps;\n                      const {\n                        values\n                      } = form;\n                      const {\n                        pax,\n                        passengers\n                      } = values;\n                      let allPassengers = new Array(pax).fill('');\n                      return /*#__PURE__*/_jsxDEV(Form, {\n                        children: allPassengers.map((passenger, index) => /*#__PURE__*/_jsxDEV(Box, {\n                          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                            className: classes.fieldInputLabel,\n                            children: [passenger, \" \", index + 1]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 264,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(Field, {\n                            id: `passengers[${index}]`,\n                            name: `passengers[${index}]`,\n                            className: classes.select,\n                            style: {\n                              position: 'relative'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 267,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 263,\n                          columnNumber: 65\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 53\n                      }, this);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"large\",\n                  type: \"submit\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  className: classes.submit,\n                  children: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    className: classes.circularProgress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 53\n                  }, this) : 'Submit'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewReservationForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewReservationForm;\nexport default NewReservationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewReservationForm\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/NewReservation/NewReservationForm/NewReservationForm.tsx"],"names":["Box","InputLabel","TextField","Grid","Select","MenuItem","Button","CircularProgress","FormHelperText","Formik","FieldArray","Field","Form","Yup","useStyles","airports","value","name","resorts","NewReservationForm","form","handleSubmit","classes","type","from","to","pax","hotel","fullName","passenger","driverNote","flightNo","passengers","object","shape","string","required","number","min","max","default","handleChange","values","touched","errors","isSubmitting","itemContainer","inputLabel","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","select","Boolean","menuItem","map","airport","resort","input","inputs","disableUnderline","fieldArrayProps","push","remove","allPassengers","Array","fill","index","fieldInputLabel","position","submit","circularProgress"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Box, InputLabel, TextField, Grid, Select, MenuItem, Button, CircularProgress, FormControl, Paper, Menu, FormHelperText } from '@material-ui/core';\nimport { Formik, FieldArray, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\n\nconst airports = [\n    {value: 1, name: 'Istanbul Airport'}, \n    {value: 2, name:'Sabiha Airport'}\n ];\nconst resorts = [\n    {value: 1, name: 'Sultan Ahmet'},\n    {value: 2, name: 'Sirkeci'},\n    {value: 3, name: 'Taksim'},\n    {value: 4, name: 'Fatih'},\n    {value: 5, name: 'Laleli'}\n];\n\ninterface Props {\n    form: {\n        type: string;\n        from: string;\n        to: string;\n        pax: string;\n        hotel: string;\n        fullName: string;\n        passenger: string;\n        driverNote: string;\n        flightNo: string;\n    }\n}\n\nfunction NewReservationForm(form: Props, { handleSubmit }: any): JSX.Element {\n    const classes = useStyles();\n    const  { type, from, to, pax, hotel, fullName, passenger, driverNote, flightNo } = form.form;\n\n    return (\n        <>\n            <Box>\n                <Formik\n                    initialValues={{\n                        type: 0,\n                        from: 0,\n                        to: 0,\n                        hotel: '',\n                        pax: 0,\n                        flightNo: '',\n                        driverNote: '',\n                        passengers: []\n                    }}\n                    validationSchema={Yup.object().shape({ \n                        type: Yup.string().required('This Field is required'),\n                        from:  Yup.string().required('This Field is required'),\n                        to: Yup.string().required('This Field is required'),\n                        hotel: Yup.string().required('This Field is required'),\n                        flightNo: Yup.string().required('This Field is required'),\n                        driverNote: Yup.string(),\n                        pax: Yup.number().min(1).max(10).default(1),\n                    })}\n                    onSubmit={handleSubmit}\n                >   \n                    {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={1}>Airport to Resort</MenuItem>\n                                            <MenuItem value={2}>Resort to Airport</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item> \n                                        <InputLabel className={classes.inputLabel}>\n                                            {pax}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"pax\"\n                                            name=\"pax\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.pax}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={1} className={classes.menuItem}>1</MenuItem>\n                                            <MenuItem value={2}>2</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                            <MenuItem value={8}>8</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.pax)}>{errors.pax}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {from}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"from\"\n                                            name=\"from\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.from}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                            >\n                                            {values.type === 1 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.from)}>{errors.from}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {to}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"to\"\n                                            name=\"to\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                  vertical: \"bottom\",\n                                                  horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                  vertical: \"top\",\n                                                  horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.to}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {values.type === 2 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.to)}>{errors.to}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={6}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {hotel}\n                                        </InputLabel>\n                                        <TextField \n                                            id='hotel'\n                                            name='hotel'\n                                            error={Boolean(errors.hotel)}\n                                            helperText={errors.hotel}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.hotel}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {flightNo}\n                                        </InputLabel>\n                                        <TextField \n                                            id='flightNo'\n                                            name='flightNo'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.flightNo}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.inputLabel}>\n                                    {driverNote}\n                                </InputLabel>\n                                <TextField \n                                    id='driverNote'\n                                    name='driverNote'\n                                    multiline\n                                    rows={4}\n                                    InputProps= {{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                    value={values.driverNote}\n                                    onChange={handleChange}\n                                />\n                            </Grid>\n                            <Grid item lg={6}>\n                                <Grid item container className={classes.itemContainer} spacing={4} >\n                                    <FieldArray name=\"passengers\">\n                                        {\n                                            (fieldArrayProps) => {\n                                                const { push, remove, form } = fieldArrayProps;\n                                                const { values } = form;\n                                                const { pax, passengers } = values;\n                                                let allPassengers = new Array(pax).fill('');\n                                                return ( \n                                                    <Form>\n                                                        {\n                                                            allPassengers.map((passenger: any, index: number) => (\n                                                                <Box>\n                                                                    <InputLabel className={classes.fieldInputLabel}>\n                                                                        {passenger} {index + 1} \n                                                                    </InputLabel>\n                                                                    <Field\n                                                                        id={`passengers[${index}]`}\n                                                                        name={`passengers[${index}]`}\n                                                                        className={classes.select}\n                                                                        style={{ position: 'relative' }}\n                                                                        \n                                                                    />\n                                                                </Box>\n                                                            ))\n                                                        }\n                                                    </Form>\n                                                )   \n                                            }\n                                        }\n                                    </FieldArray>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n                                    {isSubmitting ? <CircularProgress className={classes.circularProgress} /> : 'Submit'} \n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                    )}\n                </Formik>\n            </Box>\n        </>\n    )\n}\nexport default NewReservationForm;\n"]},"metadata":{},"sourceType":"module"}