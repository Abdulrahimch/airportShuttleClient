{"ast":null,"code":"import _slicedToArray from\"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{Box}from\"@material-ui/core\";import CustomDialog from\"../../../../components/CustomDialog/CustomDialog\";import DataTable from\"../../../../components/DataTable/DataTable\";import{useLanguage}from\"../../../../context/useLanguageContext\";import{engDriverColumn,turksihDriverColumns}from\"../../../../utils/dictionary\";import UpdateDriver from\"../UpdateDriver/UpdateDriver\";import{getDrivers}from'../../../../helpers/APICalls/driver';import{useSnackBar}from'../../../../context/useSnackbarContext';import{useHistory}from'react-router-dom';import{format}from'date-fns';import DeleteDriver from'../DeleteDriver/DeleteDriver';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ListDrivers=function ListDrivers(){// const initRows = [{id: 1, firstName: 'abood', lastName: 'shiha', email: 'abood@gmail.com', carNumber: '656'} ]\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),rows=_useState4[0],setRows=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),initValues=_useState6[0],setInitValues=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),dialogUpdate=_useState8[0],setDialogUpdate=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),openDeleteDialog=_useState10[0],setOpenDeleteDialog=_useState10[1];var _useSnackBar=useSnackBar(),updateSnackBarMessage=_useSnackBar.updateSnackBarMessage;var history=useHistory();var _useLanguage=useLanguage(),language=_useLanguage.language;useEffect(function(){getDrivers().then(function(data){if(data.error){updateSnackBarMessage(data.error);}else if(data.success){data.success.drivers.map(function(driver,idx){driver.id=idx+1;var date=driver.createdAt?new Date(driver.createdAt):new Date();driver.createdAt=format(date,'dd-MM-yyyy kk:mm');});setRows(data.success.drivers);}else{updateSnackBarMessage('An unexpected error occurred. Please try again !');}});return function(){setRows([]);};},[history]);var handleEditClick=function handleEditClick(values){setInitValues(values.row);setOpen(true);};var handleCancelClick=function handleCancelClick(values){setInitValues(values.row);setOpenDeleteDialog(true);};var handleClose=function handleClose(){setOpen(false);};var handleDeleteDialogClose=function handleDeleteDialogClose(){setOpenDeleteDialog(!openDeleteDialog);};var columns=language==='eng'?engDriverColumn(handleEditClick,handleCancelClick):turksihDriverColumns(handleEditClick,handleCancelClick);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(DataTable,{rows:rows,columns:columns}),/*#__PURE__*/_jsx(CustomDialog,{open:open,onClose:handleClose,style:\"updateReservation\",children:/*#__PURE__*/_jsx(UpdateDriver,{initValues:initValues,handleClose:handleClose,rows:rows,setRows:setRows})}),/*#__PURE__*/_jsx(CustomDialog,{open:openDeleteDialog,onClose:handleDeleteDialogClose,style:\"updateReservation\",children:/*#__PURE__*/_jsx(DeleteDriver,{initValues:initValues,handleDeleteDialogClose:handleDeleteDialogClose,rows:rows,setRows:setRows})})]})});};export default ListDrivers;","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/ListDrivers/ListDrivers.tsx"],"names":["useEffect","useState","Box","CustomDialog","DataTable","useLanguage","engDriverColumn","turksihDriverColumns","UpdateDriver","getDrivers","useSnackBar","useHistory","format","DeleteDriver","ListDrivers","open","setOpen","rows","setRows","initValues","setInitValues","dialogUpdate","setDialogUpdate","openDeleteDialog","setOpenDeleteDialog","updateSnackBarMessage","history","language","then","data","error","success","drivers","map","driver","idx","id","date","createdAt","Date","handleEditClick","values","row","handleCancelClick","handleClose","handleDeleteDialogClose","columns"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'; \nimport { Box, Typography } from \"@material-ui/core\";\nimport CustomDialog from \"../../../../components/CustomDialog/CustomDialog\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\nimport { engDriverColumn, turksihDriverColumns } from \"../../../../utils/dictionary\";\nimport UpdateDriver from \"../UpdateDriver/UpdateDriver\";\nimport { Driver } from '../../../../interface/Driver';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport { useHistory } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport DeleteDriver from '../DeleteDriver/DeleteDriver';\n\n\nconst ListDrivers = (): JSX.Element => {\n    // const initRows = [{id: 1, firstName: 'abood', lastName: 'shiha', email: 'abood@gmail.com', carNumber: '656'} ]\n\n    const [open, setOpen] = useState<boolean>(false);\n    const [rows, setRows] = useState<Driver []>([]);\n    const [initValues, setInitValues] = useState<any>();\n    const [dialogUpdate, setDialogUpdate] = useState<boolean>(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n    const { updateSnackBarMessage } = useSnackBar(); \n    const history = useHistory();\n    const { language } = useLanguage();\n\n    useEffect(() => {\n        getDrivers().then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error)\n            }else if (data.success) {\n                data.success.drivers.map((driver, idx) => {\n                    driver.id = idx + 1;\n                    const date = driver.createdAt ? new Date(driver.createdAt) : new Date();\n                    driver.createdAt = format(date, 'dd-MM-yyyy kk:mm')\n                });\n                setRows(data.success.drivers);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n        return () => {\n            setRows([]);\n        };\n    }, [history])\n\n    const handleEditClick = (values: any) => {\n        setInitValues(values.row)\n        setOpen(true);\n    }\n    const handleCancelClick = (values: any) => {\n        setInitValues(values.row);\n        setOpenDeleteDialog(true);\n    }\n\n    const handleClose = () => {\n        setOpen(false)\n    };\n\n    const handleDeleteDialogClose = () => {\n        setOpenDeleteDialog(!openDeleteDialog)\n    }\n\n    const columns = language === 'eng' ? engDriverColumn(handleEditClick, handleCancelClick) : turksihDriverColumns(handleEditClick, handleCancelClick)\n    return (\n        <>\n            <Box>\n                <DataTable rows={rows} columns={columns} />\n                <CustomDialog open={open} onClose={handleClose} style=\"updateReservation\">\n                    <UpdateDriver initValues={initValues} handleClose={handleClose} rows={rows} setRows={setRows} />\n                </CustomDialog>\n                <CustomDialog open={openDeleteDialog} onClose={handleDeleteDialogClose} style=\"updateReservation\">\n                    <DeleteDriver initValues={initValues} handleDeleteDialogClose={handleDeleteDialogClose} rows={rows} setRows={setRows}/>\n                </CustomDialog>\n            </Box>\n        </>\n    )\n};\n\nexport default ListDrivers;"]},"metadata":{},"sourceType":"module"}