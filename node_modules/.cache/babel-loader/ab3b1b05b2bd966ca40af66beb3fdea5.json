{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx\",\n    _s = $RefreshSig$();\n\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport { useEffect, useState } from 'react';\nimport ListPayments from './ListPayments/ListPayments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgencyPayments() {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const [openAddPayment, setOpenAddPayment] = useState(false);\n  const [openAllPayments, setOpenAllPayments] = useState(false);\n  const [details, setDetails] = useState(false);\n  const [rows, setRows] = useState([]);\n  const [clientId, setClientId] = useState('');\n\n  const handleDialogClose = () => {\n    setOpenAddPayment(false);\n  };\n\n  const handleAddPaymentClick = cellValues => {\n    console.log('cellValues are: ', cellValues);\n    setClientId(cellValues.row._id);\n    setOpenAddPayment(true);\n  };\n\n  const handleAllPaymentsClick = () => {\n    console.log('all payment has been clicked');\n    setOpenAllPayments(true);\n  };\n\n  const handleDetailsClick = () => {\n    console.log('Details  has been clicked');\n  };\n\n  const columns = language === 'eng' ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n  useEffect(() => {\n    getClients().then(data => {\n      if (data.error) {\n        console.log('data error');\n      } else if (data.success) {\n        data.success.clients.map((client, idx) => {\n          client.id = idx + 1;\n        });\n        setRows(data.success.clients);\n      } else {\n        console.log('external error');\n      }\n    });\n  }, [openAddPayment]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAddPayment,\n      onClose: handleDialogClose,\n      style: 'addPayment',\n      children: /*#__PURE__*/_jsxDEV(AddPayment, {\n        clientId: clientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAllPayments,\n      onClose: handleDialogClose,\n      style: 'addPayment',\n      isFullScreen: true,\n      children: /*#__PURE__*/_jsxDEV(ListPayments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AgencyPayments, \"+DMdWJIF8l0lnLa88vc8PrrmTxQ=\", false, function () {\n  return [useLanguage];\n});\n\n_c = AgencyPayments;\nexport default AgencyPayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyPayments\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx"],"names":["DataTable","useLanguage","CustomDialog","AddPayment","getClients","agencyPaymentEngColumns","agencyPaymentTurkishColumns","useEffect","useState","ListPayments","AgencyPayments","language","openAddPayment","setOpenAddPayment","openAllPayments","setOpenAllPayments","details","setDetails","rows","setRows","clientId","setClientId","handleDialogClose","handleAddPaymentClick","cellValues","console","log","row","_id","handleAllPaymentsClick","handleDetailsClick","columns","then","data","error","success","clients","map","client","idx","id"],"mappings":"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","sourcesContent":["import DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\n\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport { useEffect, useState } from 'react';\nimport ListPayments from './ListPayments/ListPayments';\n\nfunction AgencyPayments(): JSX.Element {\n    const { language } = useLanguage();\n    const [openAddPayment, setOpenAddPayment] = useState<boolean>(false);\n    const [openAllPayments, setOpenAllPayments] = useState<boolean>(false);\n    const [details, setDetails] = useState<boolean>(false);\n    const [rows, setRows] = useState<any>([]);\n    const [clientId, setClientId] = useState<string>('');\n\n    const handleDialogClose = () => {\n        setOpenAddPayment(false)\n    }\n    const handleAddPaymentClick = (cellValues: any) => {\n        console.log('cellValues are: ', cellValues)\n        setClientId(cellValues.row._id)\n        setOpenAddPayment(true)\n    };\n\n    const handleAllPaymentsClick = () => {\n        console.log('all payment has been clicked')\n        setOpenAllPayments(true)\n    };\n\n    const handleDetailsClick = () => {\n        console.log('Details  has been clicked')\n    };\n\n    const columns = language === 'eng'  \n                                    ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) \n                                    : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n    \n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log('data error')\n            } else if (data.success) {\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                })\n                setRows(data.success.clients);\n            } else {\n                console.log('external error')\n            }\n        });\n    }, [openAddPayment])\n    \n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog \n                open={openAddPayment} \n                onClose={handleDialogClose}\n                style={'addPayment'}\n            >\n                <AddPayment clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={openAllPayments} \n                onClose={handleDialogClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <ListPayments />\n            </CustomDialog>\n        </>\n        \n    )\n}\n\nexport default AgencyPayments;"]},"metadata":{},"sourceType":"module"}