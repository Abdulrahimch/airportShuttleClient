{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport DataTable from \"../../../components/DataTable/DataTable\";\nimport { turkishClientColumn, engClientColumn } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { deleteClient, getClients } from '../../../helpers/APICalls/user';\nimport { format } from 'date-fns';\nimport { useHistory } from 'react-router-dom';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListClients = () => {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const [rows, setRows] = useState([]);\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const history = useHistory();\n  useEffect(() => {\n    getClients().then(data => {\n      if (data.error) {\n        console.log(data.error);\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        data.success.clients.map((client, idx) => {\n          client.id = idx + 1;\n          const date = new Date(client.createdAt ? client.createdAt : Date.now());\n          client.createdAt = format(date, 'dd-MM-yyyy kk:mm');\n        });\n        setRows(data.success.clients);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  }, [history]);\n\n  const handleEditClick = () => {\n    console.log('edit is hitted');\n  };\n\n  const handleCancelClick = values => {\n    const id = values.row._id;\n    deleteClient(id).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateSnackBarMessage('Client has been deleted successfully!');\n        setRows(rows.filter(row => row.id !== values.id));\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  const columns = language === 'tr' ? turkishClientColumn(handleEditClick, handleCancelClick) : engClientColumn(handleEditClick, handleCancelClick);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Are you sure you want to delete this client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            btxText: \"Yes\",\n            style: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            btxText: \"No\",\n            style: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ListClients, \"bTnEc8VnHy3FZt5VRdfKrfcQxcY=\", false, function () {\n  return [useLanguage, useSnackBar, useHistory];\n});\n\n_c = ListClients;\nexport default ListClients;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListClients\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/ListClients/ListClients.tsx"],"names":["useState","useEffect","DataTable","turkishClientColumn","engClientColumn","useLanguage","useSnackBar","deleteClient","getClients","format","useHistory","CustomDialog","ListClients","language","rows","setRows","updateSnackBarMessage","history","then","data","error","console","log","message","success","clients","map","client","idx","id","date","Date","createdAt","now","handleEditClick","handleCancelClick","values","row","_id","filter","columns","openDialog","handleCloseDialog"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport DataTable from \"../../../components/DataTable/DataTable\";\nimport { turkishClientColumn, engClientColumn } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { deleteClient, getClients } from '../../../helpers/APICalls/user';\nimport { format } from 'date-fns';\nimport { Client } from '../../../interface/Client';\nimport { useHistory } from 'react-router-dom';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\n\nconst ListClients = (): JSX.Element => {\n    const { language } = useLanguage();\n    const [rows, setRows] = useState<Client []>([]);\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory();\n\n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log(data.error);\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                    const date = new Date(client.createdAt ? client.createdAt : Date.now());\n                    client.createdAt = format(date, 'dd-MM-yyyy kk:mm')\n                });\n                setRows(data.success.clients);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }, [history])\n\n    const handleEditClick = () => {\n        console.log('edit is hitted');\n    };\n\n    const handleCancelClick = (values: any) => {\n        const id = values.row._id;\n        deleteClient(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('Client has been deleted successfully!');\n                setRows(rows.filter(row => row.id !== values.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    };\n\n    const columns = language === 'tr' ? turkishClientColumn(handleEditClick, handleCancelClick) \n                                        : engClientColumn(handleEditClick, handleCancelClick);\n\n    return (\n        <>\n            <DataTable rows={rows} columns={columns}/>\n            <CustomDialog open={openDialog} onClose={handleCloseDialog}>\n                <>\n                    <Box display='flex' alignItems='center' flexDirection=\"column\">\n                        <Typography>\n                            Are you sure you want to delete this client\n                        </Typography>\n                        <CustomButton btxText='Yes' style='edit'/>\n                        <CustomButton btxText='No' style='delete'/>\n\n                    </Box>\n                </>\n            </CustomDialog>\n        </>\n    )\n};\n\nexport default ListClients;"]},"metadata":{},"sourceType":"module"}