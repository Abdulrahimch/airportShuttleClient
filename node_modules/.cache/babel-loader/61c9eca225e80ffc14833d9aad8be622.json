{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from \"formik\";\nimport { Grid, InputLabel, Select, MenuItem, FormHelperText, TextField } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport CustomButton from '../../../../../components/Button/CustomButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst currencies = [{\n  value: 'TL',\n  label: 'TL'\n}, {\n  value: 'USD',\n  label: '$'\n}, {\n  value: 'EUR',\n  label: 'â‚¬'\n}];\n;\n\nfunction AddPaymentForm(_ref) {\n  _s();\n\n  let {\n    form\n  } = _ref;\n  const {\n    type,\n    note,\n    paid,\n    currency,\n    exchangeRate,\n    paidInTL\n  } = form;\n  const classes = useStyles();\n\n  const handleSubmit = values => {\n    console.log('submitted...');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        type: '',\n        paid: 0,\n        currency: 'TL',\n        exchangeRate: 0,\n        paidInTL: 0,\n        note: ''\n      },\n      validationSchema: Yup.object().shape({\n        type: Yup.string().required('This Field is required'),\n        paid: Yup.number().min(1).default(0),\n        currency: Yup.string().required('This Field is required'),\n        exchangeRate: Yup.number().min(1).default(1),\n        paidInTL: Yup.number().min(1).default(0),\n        note: Yup.string()\n      }),\n      onSubmit: values => {\n        handleSubmit(values);\n      },\n      children: _ref2 => {\n        let {\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors,\n          isSubmitting\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: classes.form,\n          noValidate: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                className: classes.itemContainer,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"type\",\n                    className: classes.inputLabel,\n                    children: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    id: \"type\",\n                    name: \"type\",\n                    autoWidth: true,\n                    MenuProps: {\n                      anchorOrigin: {\n                        vertical: \"bottom\",\n                        horizontal: \"left\"\n                      },\n                      transformOrigin: {\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                      },\n                      getContentAnchorEl: null\n                    },\n                    value: values.type,\n                    onChange: handleChange,\n                    classes: {\n                      select: classes.select\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'cash',\n                      children: \"cash\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'credit card',\n                      children: \"credit card\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: Boolean(errors.type),\n                    children: errors.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: note\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"note\",\n                    name: \"note\",\n                    error: Boolean(errors.note),\n                    helperText: errors.note,\n                    InputProps: {\n                      classes: {\n                        input: classes.inputs\n                      },\n                      disableUnderline: true\n                    },\n                    value: values.note,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                className: classes.itemContainer,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: paid\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"paid\",\n                    name: \"paid\",\n                    error: Boolean(errors.paid),\n                    helperText: errors.paid,\n                    InputProps: {\n                      classes: {\n                        input: classes.inputs\n                      },\n                      disableUnderline: true\n                    },\n                    value: values.paid,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: currency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    id: \"currency\",\n                    name: \"currency\",\n                    autoWidth: true,\n                    MenuProps: {\n                      anchorOrigin: {\n                        vertical: \"bottom\",\n                        horizontal: \"left\"\n                      },\n                      transformOrigin: {\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                      },\n                      getContentAnchorEl: null\n                    },\n                    value: values.currency,\n                    onChange: handleChange,\n                    classes: {\n                      select: classes.select\n                    },\n                    children: currencies.map(_ref3 => {\n                      let {\n                        value,\n                        label\n                      } = _ref3;\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: value,\n                        children: label\n                      }, label, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 49\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                    error: Boolean(errors.currency),\n                    children: errors.currency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                className: classes.itemContainer,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: exchangeRate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"exchangeRate\",\n                    name: \"exchangeRate\",\n                    error: Boolean(errors.exchangeRate),\n                    helperText: errors.exchangeRate,\n                    InputProps: {\n                      classes: {\n                        input: classes.inputs\n                      },\n                      disableUnderline: true\n                    },\n                    value: values.currency === 'TL' ? values.exchangeRate = 1 : values.exchangeRate,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: paidInTL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"paidInTL\",\n                    name: \"paidInTL\",\n                    error: Boolean(errors.paidInTL),\n                    helperText: errors.paidInTL,\n                    disabled: true,\n                    InputProps: {\n                      classes: {\n                        input: classes.inputs\n                      },\n                      disableUnderline: true\n                    },\n                    value: values.paid * values.exchangeRate,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(CustomButton, {\n                  style: \"submit\",\n                  btnText: \"submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddPaymentForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddPaymentForm;\nexport default AddPaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPaymentForm\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AddPayment/AddPaymentForm/AddPaymentForm.tsx"],"names":["Formik","Grid","InputLabel","Select","MenuItem","FormHelperText","TextField","Yup","useStyles","CustomButton","currencies","value","label","AddPaymentForm","form","type","note","paid","currency","exchangeRate","paidInTL","classes","handleSubmit","values","console","log","object","shape","string","required","number","min","default","handleChange","touched","errors","isSubmitting","itemContainer","inputLabel","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","select","Boolean","input","inputs","disableUnderline","map"],"mappings":"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","sourcesContent":["import { Formik } from \"formik\";\nimport { Grid, InputLabel, Select, MenuItem, FormHelperText, TextField } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport CustomButton from '../../../../../components/Button/CustomButton';\n\nconst currencies = [\n    {\n        value: 'TL',\n        label: 'TL',\n    },\n    {\n      value: 'USD',\n      label: '$',\n    },\n    {\n      value: 'EUR',\n      label: 'â‚¬',\n    },\n  ];\n\ninterface Props {\n    form: {\n        type: string;\n        paid: string;\n        currency: string;\n        note: string;\n        exchangeRate: string;\n        paidInTL: string;\n    }\n};\n\nfunction AddPaymentForm({ form }: Props): JSX.Element {\n    const { type, note, paid, currency, exchangeRate, paidInTL } = form;\n\n    const classes = useStyles();\n    const handleSubmit = (values: any) => {\n        console.log('submitted...')\n    }\n    return (\n        <>\n            <Formik\n                initialValues={{ \n                    type: '',\n                    paid: 0,\n                    currency: 'TL',\n                    exchangeRate: 0,\n                    paidInTL: 0,\n                    note: ''\n                 }}\n                 validationSchema={Yup.object().shape({ \n                    type: Yup.string().required('This Field is required'),\n                    paid: Yup.number().min(1).default(0),\n                    currency: Yup.string().required('This Field is required'),\n                    exchangeRate: Yup.number().min(1).default(1),\n                    paidInTL: Yup.number().min(1).default(0),\n                    note: Yup.string(),                    \n                })}\n                onSubmit={(values) => {handleSubmit(values)}}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors, isSubmitting, }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column' alignItems='center'>\n                            <Grid item>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            {type}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            <MenuItem value={'cash'}>cash</MenuItem>\n                                            <MenuItem value={'credit card'}>credit card</MenuItem>\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.type)}>{errors.type}</FormHelperText>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {note}\n                                        </InputLabel>\n                                        <TextField \n                                            id='note'\n                                            name='note'\n                                            error={Boolean(errors.note)}\n                                            helperText={errors.note}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.note}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item >\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paid}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paid'\n                                            name='paid'\n                                            error={Boolean(errors.paid)}\n                                            helperText={errors.paid}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paid}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {currency}\n                                        </InputLabel>\n                                        <Select\n                                            id=\"currency\"\n                                            name=\"currency\"\n                                            autoWidth\n                                            MenuProps={{\n                                                anchorOrigin: {\n                                                vertical: \"bottom\",\n                                                horizontal: \"left\"\n                                                },\n                                                transformOrigin: {\n                                                vertical: \"top\",\n                                                horizontal: \"left\"\n                                                },\n                                                getContentAnchorEl: null\n                                            }}\n                                            value={values.currency}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                        >\n                                            {currencies.map(({ value, label }) => (\n                                                <MenuItem key={label} value={value}>{label}</MenuItem>\n                                            ))}\n                                        </Select>\n                                        <FormHelperText error={Boolean(errors.currency)}>{errors.currency}</FormHelperText>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container className={classes.itemContainer} spacing={4}>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {exchangeRate}\n                                        </InputLabel>\n                                        <TextField \n                                            id='exchangeRate'\n                                            name='exchangeRate'\n                                            error={Boolean(errors.exchangeRate)}\n                                            helperText={errors.exchangeRate}\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.currency === 'TL' ?  values.exchangeRate = 1 : values.exchangeRate}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            {paidInTL}\n                                        </InputLabel>\n                                        <TextField \n                                            id='paidInTL'\n                                            name='paidInTL'\n                                            error={Boolean(errors.paidInTL)}\n                                            helperText={errors.paidInTL}\n                                            disabled\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.paid * values.exchangeRate}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <CustomButton style=\"submit\" btnText=\"submit\" />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                )}\n\n            </Formik>\n        </>\n    )\n}\nexport default AddPaymentForm;"]},"metadata":{},"sourceType":"module"}