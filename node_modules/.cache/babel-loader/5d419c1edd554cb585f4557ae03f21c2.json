{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { agencyListPaymentEngColumns } from '../../../../utils/dictionary';\nimport { getPayments } from '../../../../helpers/APICalls/agencyPayment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListPayments() {\n  _s();\n\n  const [rows, setRows] = useState([]);\n\n  const handleCancelClick = () => {\n    console.log('cancdel has been clicked');\n  };\n\n  console.log(Rows);\n  const columns = agencyListPaymentEngColumns(handleCancelClick);\n  useEffect(() => {\n    getPayments().then(data => {\n      if (data.error) {\n        console.log(data.error.message);\n      } else if (data.success) {\n        data.success.payment.map((item, idx) => {\n          var _item$client, _item$client2;\n\n          item.id = idx + 1;\n          item.property = (_item$client = item.client) === null || _item$client === void 0 ? void 0 : _item$client.property;\n          item.email = (_item$client2 = item.client) === null || _item$client2 === void 0 ? void 0 : _item$client2.email;\n        });\n        setRows(data.success.payment);\n      } else {\n        console.log('EXternal Error!');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    rows: rows,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListPayments, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = ListPayments;\n;\nexport default ListPayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPayments\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx"],"names":["useEffect","useState","DataTable","agencyListPaymentEngColumns","getPayments","ListPayments","rows","setRows","handleCancelClick","console","log","Rows","columns","then","data","error","message","success","payment","map","item","idx","id","property","client","email"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,SAASC,2BAAT,QAA4C,8BAA5C;AACA,SAASC,WAAT,QAA4B,4CAA5B;;;AAGA,SAASC,YAAT,GAAqC;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAM,EAAN,CAAhC;;AAEA,QAAMO,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,GAFD;;AAGAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,QAAMC,OAAO,GAAGT,2BAA2B,CAACK,iBAAD,CAA3C;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW,GAAGS,IAAd,CAAoBC,IAAD,IAAU;AACzB,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXN,QAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,KAAL,CAAWC,OAAvB;AACH,OAFD,MAEO,IAAIF,IAAI,CAACG,OAAT,EAAkB;AACrBH,QAAAA,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAAA;;AACpCD,UAAAA,IAAI,CAACE,EAAL,GAAUD,GAAG,GAAG,CAAhB;AACAD,UAAAA,IAAI,CAACG,QAAL,mBAAgBH,IAAI,CAACI,MAArB,iDAAgB,aAAaD,QAA7B;AACAH,UAAAA,IAAI,CAACK,KAAL,oBAAaL,IAAI,CAACI,MAAlB,kDAAa,cAAaC,KAA1B;AACH,SAJD;AAKAlB,QAAAA,OAAO,CAACO,IAAI,CAACG,OAAL,CAAaC,OAAd,CAAP;AACH,OAPM,MAOA;AACHT,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ,KAbD;AAcC,GAfI,EAeF,EAfE,CAAT;AAgBA,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,EAAEJ,IAAjB;AAAuB,IAAA,OAAO,EAAEM;AAAhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA3BQP,Y;;KAAAA,Y;AA2BR;AAED,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { agencyListPaymentEngColumns } from '../../../../utils/dictionary';\nimport { getPayments } from '../../../../helpers/APICalls/agencyPayment';\n\n\nfunction ListPayments(): JSX.Element {\n    const [rows, setRows] = useState<any>([]);\n\n    const handleCancelClick = () => {\n        console.log('cancdel has been clicked');\n    }\n    console.log(Rows)\n    const columns = agencyListPaymentEngColumns(handleCancelClick);\n    useEffect(() => {\n        getPayments().then((data) => {\n            if (data.error){\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.payment.map((item, idx) => {\n                    item.id = idx + 1;\n                    item.property = item.client?.property;\n                    item.email = item.client?.email;\n                })\n                setRows(data.success.payment);\n            } else {\n                console.log('EXternal Error!');\n            }\n        });\n        }, [])\n    return (\n        <DataTable rows={rows} columns={columns} />\n    )\n};\n\nexport default ListPayments;"]},"metadata":{},"sourceType":"module"}