{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx\",\n    _s = $RefreshSig$();\n\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport { useEffect, useState } from 'react';\nimport ListPayments from './ListPayments/ListPayments';\nimport { IconButton } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgencyPayments() {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const [openAddPayment, setOpenAddPayment] = useState(false);\n  const [openAllPayments, setOpenAllPayments] = useState(false);\n  const [details, setDetails] = useState(false);\n  const [rows, setRows] = useState([]);\n  const [clientId, setClientId] = useState('');\n\n  const handleDialogClose = event => {\n    console.log(event === null || event === void 0 ? void 0 : event.target.id);\n    setOpenAddPayment(false);\n  };\n\n  const handleAddPaymentClick = cellValues => {\n    console.log('cellValues are: ', cellValues);\n    setClientId(cellValues.row._id);\n    setOpenAddPayment(true);\n  };\n\n  const handleAllPaymentsClick = () => {\n    console.log('all payment has been clicked');\n    setOpenAllPayments(true);\n  };\n\n  const handleDetailsClick = () => {\n    console.log('Details  has been clicked');\n  };\n\n  const columns = language === 'eng' ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n  useEffect(() => {\n    getClients().then(data => {\n      if (data.error) {\n        console.log('data error');\n      } else if (data.success) {\n        data.success.clients.map((client, idx) => {\n          client.id = idx + 1;\n        });\n        setRows(data.success.clients);\n      } else {\n        console.log('external error');\n      }\n    });\n  }, [openAddPayment]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAddPayment,\n      onClose: handleDialogClose,\n      style: 'addPayment',\n      children: /*#__PURE__*/_jsxDEV(AddPayment, {\n        clientId: clientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAllPayments,\n      onClose: handleDialogClose,\n      style: 'addPayment',\n      isFullScreen: true,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        id: \"iconButton\",\n        edge: \"start\",\n        color: \"inherit\",\n        onClick: handleDialogClose,\n        \"aria-label\": \"close\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListPayments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AgencyPayments, \"+DMdWJIF8l0lnLa88vc8PrrmTxQ=\", false, function () {\n  return [useLanguage];\n});\n\n_c = AgencyPayments;\nexport default AgencyPayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyPayments\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx"],"names":["DataTable","useLanguage","CustomDialog","AddPayment","getClients","CloseIcon","agencyPaymentEngColumns","agencyPaymentTurkishColumns","useEffect","useState","ListPayments","IconButton","AgencyPayments","language","openAddPayment","setOpenAddPayment","openAllPayments","setOpenAllPayments","details","setDetails","rows","setRows","clientId","setClientId","handleDialogClose","event","console","log","target","id","handleAddPaymentClick","cellValues","row","_id","handleAllPaymentsClick","handleDetailsClick","columns","then","data","error","success","clients","map","client","idx"],"mappings":"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","sourcesContent":["import DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport { useEffect, useState } from 'react';\nimport ListPayments from './ListPayments/ListPayments';\nimport { IconButton } from '@material-ui/core';\n\nfunction AgencyPayments(): JSX.Element {\n    const { language } = useLanguage();\n    const [openAddPayment, setOpenAddPayment] = useState<boolean>(false);\n    const [openAllPayments, setOpenAllPayments] = useState<boolean>(false);\n    const [details, setDetails] = useState<boolean>(false);\n    const [rows, setRows] = useState<any>([]);\n    const [clientId, setClientId] = useState<string>('');\n\n    const handleDialogClose = (event?: any) => {\n        console.log(event?.target.id);\n        setOpenAddPayment(false)\n    }\n    const handleAddPaymentClick = (cellValues: any) => {\n        console.log('cellValues are: ', cellValues)\n        setClientId(cellValues.row._id)\n        setOpenAddPayment(true)\n    };\n\n    const handleAllPaymentsClick = () => {\n        console.log('all payment has been clicked')\n        setOpenAllPayments(true)\n    };\n\n    const handleDetailsClick = () => {\n        console.log('Details  has been clicked')\n    };\n\n    const columns = language === 'eng'  \n                                    ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) \n                                    : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n    \n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log('data error')\n            } else if (data.success) {\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                })\n                setRows(data.success.clients);\n            } else {\n                console.log('external error')\n            }\n        });\n    }, [openAddPayment])\n    \n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog \n                open={openAddPayment} \n                onClose={handleDialogClose}\n                style={'addPayment'}\n            >\n                <AddPayment clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={openAllPayments} \n                onClose={handleDialogClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <IconButton\n                    id='iconButton'\n                    edge=\"start\"\n                    color=\"inherit\"\n                    onClick={handleDialogClose}\n                    aria-label=\"close\"\n                 >\n                        <CloseIcon />\n                </IconButton>\n                <ListPayments />\n            </CustomDialog>\n        </>\n        \n    )\n}\n\nexport default AgencyPayments;"]},"metadata":{},"sourceType":"module"}