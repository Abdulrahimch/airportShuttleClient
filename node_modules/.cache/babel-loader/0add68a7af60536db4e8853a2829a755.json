{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgencyPayments() {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const history = useHistory();\n  const [openAddPayment, setOpenAddPayment] = useState(false);\n  const [openAllPayments, setOpenAllPayments] = useState(false);\n  const [details, setDetails] = useState(false);\n  const [rows, setRows] = useState([]);\n  const [clientId, setClientId] = useState('');\n  const [debt, setDebt] = useState(0);\n\n  const handleAddPaymentClick = cellValues => {\n    setClientId(cellValues.row._id);\n    setOpenAddPayment(true);\n  };\n\n  const handleAddPaymentClose = () => {\n    setOpenAddPayment(false);\n  };\n\n  const handleAllPaymentsClick = cellValues => {\n    setClientId(cellValues.row._id);\n    setOpenAllPayments(true);\n  };\n\n  const handleAllPaymentsClose = () => {\n    setOpenAllPayments(false);\n  };\n\n  const handleDetailsClick = cellValues => {\n    setDebt(cellValues.row.debt);\n    setClientId(cellValues.row._id);\n    setDetails(true);\n  };\n\n  const handleDetailsClose = () => {\n    setDetails(false);\n  };\n\n  const columns = language === 'eng' ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n  useEffect(() => {\n    console.log('useEffect is hitted');\n    getClients().then(data => {\n      if (data.error) {\n        console.log('data error');\n      } else if (data.success) {\n        data.success.clients.map((client, idx) => {\n          client.id = idx + 1;\n          client.status = 'client';\n        });\n        setRows(data.success.clients);\n      } else {\n        console.log('external error');\n      }\n    }); // return () => {\n    //     setRows([])\n    // };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AgencyPayments, \"7vY14C1x2CKSHIVz2kEoJOCi8Ow=\", false, function () {\n  return [useLanguage, useHistory];\n});\n\n_c = AgencyPayments;\nexport default AgencyPayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyPayments\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx"],"names":["useEffect","useState","DataTable","useLanguage","getClients","agencyPaymentEngColumns","agencyPaymentTurkishColumns","useHistory","AgencyPayments","language","history","openAddPayment","setOpenAddPayment","openAllPayments","setOpenAllPayments","details","setDetails","rows","setRows","clientId","setClientId","debt","setDebt","handleAddPaymentClick","cellValues","row","_id","handleAddPaymentClose","handleAllPaymentsClick","handleAllPaymentsClose","handleDetailsClick","handleDetailsClose","columns","console","log","then","data","error","success","clients","map","client","idx","id","status"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport ListPayments from './ListPayments/ListPayments';\nimport Details from './Details/Details';\nimport { IconButton, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nfunction AgencyPayments(): JSX.Element {\n    const { language } = useLanguage();\n    const history = useHistory();\n\n    const [openAddPayment, setOpenAddPayment] = useState<boolean>(false);\n    const [openAllPayments, setOpenAllPayments] = useState<boolean>(false);\n    const [details, setDetails] = useState<boolean>(false);\n\n    const [rows, setRows] = useState<any>([]);\n    const [clientId, setClientId] = useState<string>('');\n    const [debt, setDebt] = useState<number>(0)\n\n    const handleAddPaymentClick = (cellValues: any) => {\n        setClientId(cellValues.row._id)\n        setOpenAddPayment(true)\n    };\n\n    const handleAddPaymentClose = () => {\n        setOpenAddPayment(false)\n    }\n\n    const handleAllPaymentsClick = (cellValues: any) => {\n        setClientId(cellValues.row._id);\n        setOpenAllPayments(true)\n    };\n\n    const handleAllPaymentsClose = () => {\n        setOpenAllPayments(false)\n    };\n\n    const handleDetailsClick = (cellValues: any) => {\n        setDebt(cellValues.row.debt)\n        setClientId(cellValues.row._id);\n        setDetails(true);\n    };\n\n    const handleDetailsClose = () => {\n        setDetails(false)\n    };\n\n    const columns = language === 'eng'  \n                                    ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) \n                                    : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n    \n    useEffect(() => {\n        console.log('useEffect is hitted');\n        getClients().then((data) => {\n            if (data.error) {\n                console.log('data error')\n            } else if (data.success) {\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                    client.status = 'client'\n                });\n                setRows(data.success.clients);\n            } else {\n                console.log('external error')\n            }\n        });\n        // return () => {\n        //     setRows([])\n        // };\n    }, [history])\n    \n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            {/* <CustomDialog \n                open={openAddPayment} \n                onClose={handleAddPaymentClose}\n                style={'addPayment'}\n            >\n                <AddPayment clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={openAllPayments} \n                onClose={handleAllPaymentsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleAllPaymentsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            All Payments\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <ListPayments clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={details} \n                onClose={handleDetailsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleDetailsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            Reservations and Payments details\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Details clientId={clientId} debt={debt}/>\n            </CustomDialog> */}\n        </>\n        \n    )\n}\n\nexport default AgencyPayments;"]},"metadata":{},"sourceType":"module"}