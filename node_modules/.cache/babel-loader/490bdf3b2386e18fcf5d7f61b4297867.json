{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport ListPayments from './ListPayments/ListPayments';\nimport Details from './Details/Details';\nimport { IconButton, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgencyPayments() {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const history = useHistory();\n  const [openAddPayment, setOpenAddPayment] = useState(false);\n  const [openAllPayments, setOpenAllPayments] = useState(false);\n  const [details, setDetails] = useState(false);\n  const [rows, setRows] = useState([]);\n  const [clientId, setClientId] = useState('');\n  const [debt, setDebt] = useState(0);\n\n  const handleAddPaymentClick = cellValues => {\n    setClientId(cellValues.row._id);\n    setOpenAddPayment(true);\n  };\n\n  const handleAddPaymentClose = () => {\n    setOpenAddPayment(false);\n  };\n\n  const handleAllPaymentsClick = cellValues => {\n    setClientId(cellValues.row._id);\n    setOpenAllPayments(true);\n  };\n\n  const handleAllPaymentsClose = () => {\n    setOpenAllPayments(false);\n  };\n\n  const handleDetailsClick = cellValues => {\n    setDebt(cellValues.row.debt);\n    setClientId(cellValues.row._id);\n    setDetails(true);\n  };\n\n  const handleDetailsClose = () => {\n    setDetails(false);\n  };\n\n  const columns = language === 'eng' ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n  useEffect(() => {\n    getClients().then(data => {\n      if (data.error) {\n        console.log('data error');\n      } else if (data.success) {\n        data.success.clients.map((client, idx) => {\n          client.id = idx + 1;\n          client.status = 'client';\n        });\n        setRows(data.success.clients);\n      } else {\n        console.log('external error');\n      }\n    });\n    return () => {\n      setRows([]);\n    };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAddPayment,\n      onClose: handleAddPaymentClose,\n      style: 'addPayment',\n      children: /*#__PURE__*/_jsxDEV(AddPayment, {\n        clientId: clientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAllPayments,\n      onClose: handleAllPaymentsClose,\n      style: 'addPayment',\n      isFullScreen: true,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: handleAllPaymentsClose,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: \"All Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListPayments, {\n        clientId: clientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: details,\n      onClose: handleDetailsClose,\n      style: 'addPayment',\n      isFullScreen: true,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: handleDetailsClose,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: \"Reservations and Payments details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        clientId: clientId,\n        debt: debt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AgencyPayments, \"7vY14C1x2CKSHIVz2kEoJOCi8Ow=\", false, function () {\n  return [useLanguage, useHistory];\n});\n\n_c = AgencyPayments;\nexport default AgencyPayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyPayments\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx"],"names":["useEffect","useState","DataTable","useLanguage","CustomDialog","AddPayment","getClients","CloseIcon","agencyPaymentEngColumns","agencyPaymentTurkishColumns","ListPayments","Details","IconButton","AppBar","Toolbar","Typography","useHistory","AgencyPayments","language","history","openAddPayment","setOpenAddPayment","openAllPayments","setOpenAllPayments","details","setDetails","rows","setRows","clientId","setClientId","debt","setDebt","handleAddPaymentClick","cellValues","row","_id","handleAddPaymentClose","handleAllPaymentsClick","handleAllPaymentsClose","handleDetailsClick","handleDetailsClose","columns","then","data","error","console","log","success","clients","map","client","idx","id","status"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport ListPayments from './ListPayments/ListPayments';\nimport Details from './Details/Details';\nimport { IconButton, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nfunction AgencyPayments(): JSX.Element {\n    const { language } = useLanguage();\n    const history = useHistory();\n\n    const [openAddPayment, setOpenAddPayment] = useState<boolean>(false);\n    const [openAllPayments, setOpenAllPayments] = useState<boolean>(false);\n    const [details, setDetails] = useState<boolean>(false);\n\n    const [rows, setRows] = useState<any>([]);\n    const [clientId, setClientId] = useState<string>('');\n    const [debt, setDebt] = useState<number>(0)\n\n    const handleAddPaymentClick = (cellValues: any) => {\n        setClientId(cellValues.row._id)\n        setOpenAddPayment(true)\n    };\n\n    const handleAddPaymentClose = () => {\n        setOpenAddPayment(false)\n    }\n\n    const handleAllPaymentsClick = (cellValues: any) => {\n        setClientId(cellValues.row._id);\n        setOpenAllPayments(true)\n    };\n\n    const handleAllPaymentsClose = () => {\n        setOpenAllPayments(false)\n    };\n\n    const handleDetailsClick = (cellValues: any) => {\n        setDebt(cellValues.row.debt)\n        setClientId(cellValues.row._id);\n        setDetails(true);\n    };\n\n    const handleDetailsClose = () => {\n        setDetails(false)\n    };\n\n    const columns = language === 'eng'  \n                                    ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) \n                                    : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n    \n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log('data error')\n            } else if (data.success) {\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                    client.status = 'client'\n                });\n                setRows(data.success.clients);\n            } else {\n                console.log('external error')\n            }\n        });\n        return () => {\n            setRows([])\n        };\n    }, [history])\n    \n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog \n                open={openAddPayment} \n                onClose={handleAddPaymentClose}\n                style={'addPayment'}\n            >\n                <AddPayment clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={openAllPayments} \n                onClose={handleAllPaymentsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleAllPaymentsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            All Payments\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <ListPayments clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={details} \n                onClose={handleDetailsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleDetailsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            Reservations and Payments details\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Details clientId={clientId} debt={debt}/>\n            </CustomDialog>\n        </>\n        \n    )\n}\n\nexport default AgencyPayments;"]},"metadata":{},"sourceType":"module"}