{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { format } from 'date-fns';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { Box } from \"@material-ui/core\";\nimport { agencyTurksihColumns, agencyEngColumns } from '../../../utils/dictionary/listAgencyReservation';\nimport { getReservations, updateReservation } from '../../../helpers/APICalls/agencyReservation';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport CustomDialog from \"../../../components/CustomDialog/CustomDialog\";\nimport AssignDriver from \"../Drivers/AssignDriver/AssignDriver\";\nimport Search from \"../../../components/Search/Search\";\nimport ListPassengers from \"./ListPassengers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListAgencyReservations() {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const [rows, setRows] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openShowDialog, setOpenShowDialog] = useState(false);\n  const [useEffectTrigger, setUseEffectTrigger] = useState(false);\n  const [reservation, setReservation] = useState();\n  const [from, setFrom] = useState(new Date());\n  const date = new Date();\n  const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n  const handleProcessedClick = cellValues => {\n    const id = cellValues.row._id;\n    const inputs = {\n      status: 'processed'\n    };\n    updateReservation(inputs, id).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        updateSnackBarMessage('reservation has been processed successfully!');\n        setRows(rows.filter(row => row.id !== cellValues.id));\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  const handleUnprocessedClick = cellValues => {\n    const id = cellValues.row._id;\n    const inputs = {\n      status: 'unprocessed'\n    };\n    updateReservation(inputs, id).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        updateSnackBarMessage('reservation has been unprocessed successfully!');\n        setRows(rows.filter(row => row.id !== cellValues.id));\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  const handleConfirmClick = cellValues => {\n    setReservation(cellValues.row);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const invokeUseEffect = () => {\n    setUseEffectTrigger(!useEffectTrigger);\n  };\n\n  const handleShowClick = cellValues => {\n    console.log(cellValues.row.passengers); // setPassengers();\n\n    setOpenShowDialog(true);\n  };\n\n  const handleShowDialogClose = () => {\n    setOpenShowDialog(false);\n  };\n\n  useEffect(() => {\n    getReservations(from, to).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        console.log(data.success);\n        data.success.reservations.map((reservation, idx) => {\n          var _reservation$client;\n\n          reservation.id = idx + 1;\n          reservation.status = 'reservation';\n          const date = new Date(reservation.selectedDate);\n          reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n          reservation.property = (_reservation$client = reservation.client) === null || _reservation$client === void 0 ? void 0 : _reservation$client.propertyName;\n        });\n        setRows(data.success.reservations);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n    return () => {\n      setRows([]);\n    };\n  }, [useEffectTrigger]);\n  const columns = language === 'eng' ? agencyEngColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) : agencyTurksihColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      from: from,\n      to: to,\n      setFrom: setFrom,\n      setTo: setTo,\n      invokeUseEffect: invokeUseEffect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(AssignDriver, {\n        reservation: reservation,\n        invokeUseEffect: invokeUseEffect,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openShowDialog,\n      onClose: handleShowDialogClose,\n      children: /*#__PURE__*/_jsxDEV(ListPassengers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListAgencyReservations, \"tWXfl0wafGsQ6/gRUyjwriV46vk=\", false, function () {\n  return [useLanguage, useSnackBar];\n});\n\n_c = ListAgencyReservations;\n;\nexport default ListAgencyReservations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListAgencyReservations\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Reservation/ListAgencyReservations.tsx"],"names":["useEffect","useState","format","DataTable","Box","agencyTurksihColumns","agencyEngColumns","getReservations","updateReservation","useLanguage","useSnackBar","CustomDialog","AssignDriver","Search","ListPassengers","ListAgencyReservations","language","updateSnackBarMessage","rows","setRows","open","setOpen","openShowDialog","setOpenShowDialog","useEffectTrigger","setUseEffectTrigger","reservation","setReservation","from","setFrom","Date","date","to","setTo","setHours","getHours","handleProcessedClick","cellValues","id","row","_id","inputs","status","then","data","error","success","filter","handleUnprocessedClick","handleConfirmClick","handleClose","invokeUseEffect","handleShowClick","console","log","passengers","handleShowDialogClose","reservations","map","idx","selectedDate","property","client","propertyName","columns"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,SAAP,MAAsB,yCAAtB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,QAAuD,iDAAvD;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,6CAAnD;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,sBAAT,GAA+C;AAAA;;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAeP,WAAW,EAAhC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAA4BP,WAAW,EAA7C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAM,EAAN,CAAhC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAsCtB,QAAQ,CAAU,KAAV,CAApD;AACA,QAAM,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAU,KAAV,CAAxD;AACA,QAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,EAA9C;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,IAAI6B,IAAJ,EAAD,CAAhC;AACA,QAAMC,IAAI,GAAG,IAAID,IAAJ,EAAb;AACA,QAAM,CAACE,EAAD,EAAKC,KAAL,IAAchC,QAAQ,CAAC,IAAI6B,IAAJ,CAASC,IAAI,CAACG,QAAL,CAAcH,IAAI,CAACI,QAAL,KAAkB,EAAhC,CAAT,CAAD,CAA5B;;AAEA,QAAMC,oBAAoB,GAAIC,UAAD,IAAqB;AAC9C,UAAMC,EAAE,GAAGD,UAAU,CAACE,GAAX,CAAeC,GAA1B;AACA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAf;AACAlC,IAAAA,iBAAiB,CAACiC,MAAD,EAASH,EAAT,CAAjB,CAA8BK,IAA9B,CAAoCC,IAAD,IAAU;AACzC,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ5B,QAAAA,qBAAqB,CAAC2B,IAAI,CAACC,KAAN,CAArB;AACH,OAFD,MAEO,IAAID,IAAI,CAACE,OAAT,EAAkB;AACrB7B,QAAAA,qBAAqB,CAAC,8CAAD,CAArB;AACAE,QAAAA,OAAO,CAACD,IAAI,CAAC6B,MAAL,CAAaR,GAAD,IAAcA,GAAG,CAACD,EAAJ,KAAWD,UAAU,CAACC,EAAhD,CAAD,CAAP;AACH,OAHM,MAGA;AACHrB,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KATD;AAUH,GAbD;;AAeA,QAAM+B,sBAAsB,GAAIX,UAAD,IAAqB;AAChD,UAAMC,EAAE,GAAGD,UAAU,CAACE,GAAX,CAAeC,GAA1B;AACA,UAAMC,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAf;AACAlC,IAAAA,iBAAiB,CAACiC,MAAD,EAASH,EAAT,CAAjB,CAA8BK,IAA9B,CAAoCC,IAAD,IAAU;AACzC,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ5B,QAAAA,qBAAqB,CAAC2B,IAAI,CAACC,KAAN,CAArB;AACH,OAFD,MAEO,IAAID,IAAI,CAACE,OAAT,EAAkB;AACrB7B,QAAAA,qBAAqB,CAAC,gDAAD,CAArB;AACAE,QAAAA,OAAO,CAACD,IAAI,CAAC6B,MAAL,CAAaR,GAAD,IAAcA,GAAG,CAACD,EAAJ,KAAWD,UAAU,CAACC,EAAhD,CAAD,CAAP;AACH,OAHM,MAGA;AACHrB,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KATD;AAUH,GAbD;;AAeA,QAAMgC,kBAAkB,GAAIZ,UAAD,IAAqB;AAC5CV,IAAAA,cAAc,CAACU,UAAU,CAACE,GAAZ,CAAd;AACAlB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAHD;;AAKA,QAAM6B,WAAW,GAAG,MAAM;AACtB7B,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,QAAM8B,eAAe,GAAG,MAAM;AAC1B1B,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,GAFD;;AAIA,QAAM4B,eAAe,GAAIf,UAAD,IAAqB;AACzCgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAU,CAACE,GAAX,CAAegB,UAA3B,EADyC,CAEzC;;AACAhC,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAJD;;AAMA,QAAMiC,qBAAqB,GAAG,MAAM;AAChCjC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,eAAe,CAACqB,IAAD,EAAOI,EAAP,CAAf,CAA0BW,IAA1B,CAAgCC,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACC,KAAT,EAAe;AACX5B,QAAAA,qBAAqB,CAAC2B,IAAI,CAACC,KAAN,CAArB;AACH,OAFD,MAEO,IAAID,IAAI,CAACE,OAAT,EAAkB;AACrBO,QAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACE,OAAjB;AACAF,QAAAA,IAAI,CAACE,OAAL,CAAaW,YAAb,CAA0BC,GAA1B,CAA8B,CAAChC,WAAD,EAAciC,GAAd,KAAsB;AAAA;;AAChDjC,UAAAA,WAAW,CAACY,EAAZ,GAAiBqB,GAAG,GAAG,CAAvB;AACAjC,UAAAA,WAAW,CAACgB,MAAZ,GAAqB,aAArB;AACA,gBAAMX,IAAI,GAAG,IAAID,IAAJ,CAASJ,WAAW,CAACkC,YAArB,CAAb;AACAlC,UAAAA,WAAW,CAACK,IAAZ,GAAmB7B,MAAM,CAAC6B,IAAD,EAAO,kBAAP,CAAzB;AACAL,UAAAA,WAAW,CAACmC,QAAZ,0BAAuBnC,WAAW,CAACoC,MAAnC,wDAAuB,oBAAoBC,YAA3C;AACH,SAND;AAOA5C,QAAAA,OAAO,CAACyB,IAAI,CAACE,OAAL,CAAaW,YAAd,CAAP;AACH,OAVM,MAUA;AACHxC,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AAEJ,KAjBD;AAkBA,WAAO,MAAM;AACTE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAFD;AAGH,GAtBQ,EAsBN,CAACK,gBAAD,CAtBM,CAAT;AAwBA,QAAMwC,OAAO,GAAGhD,QAAQ,KAAK,KAAb,GAAqBV,gBAAgB,CAAC8B,oBAAD,EAAuBY,sBAAvB,EAA+CC,kBAA/C,EAAmEG,eAAnE,CAArC,GACqB/C,oBAAoB,CAAC+B,oBAAD,EAAuBY,sBAAvB,EAA+CC,kBAA/C,EAAmEG,eAAnE,CADzD;AAGA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAExB,IAAd;AAAoB,MAAA,EAAE,EAAEI,EAAxB;AAA4B,MAAA,OAAO,EAAEH,OAArC;AAA8C,MAAA,KAAK,EAAEI,KAArD;AAA4D,MAAA,eAAe,EAAEkB;AAA7E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEjC,IAAjB;AAAuB,MAAA,OAAO,EAAE8C;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAE5C,IAApB;AAA0B,MAAA,OAAO,EAAE8B,WAAnC;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,WAAW,EAAExB,WAA3B;AAAwC,QAAA,eAAe,EAAEyB,eAAzD;AAA0E,QAAA,WAAW,EAAED;AAAvF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAE5B,cAApB;AAAoC,MAAA,OAAO,EAAEkC,qBAA7C;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAxGQzC,sB;UACgBN,W,EACaC,W;;;KAF7BK,sB;AAwGR;AAED,eAAeA,sBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { format } from 'date-fns';\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { Box } from \"@material-ui/core\";\nimport { agencyTurksihColumns, agencyEngColumns } from '../../../utils/dictionary/listAgencyReservation';\nimport { getReservations, updateReservation } from '../../../helpers/APICalls/agencyReservation';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport CustomDialog from \"../../../components/CustomDialog/CustomDialog\";\nimport AssignDriver from \"../Drivers/AssignDriver/AssignDriver\";\nimport { Reservation } from '../../../interface/agencyReservation';\nimport Search from \"../../../components/Search/Search\";\nimport ListPassengers from \"./ListPassengers\";\n\nfunction ListAgencyReservations(): JSX.Element {\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n    const [rows, setRows] = useState<any>([]);\n    const [open, setOpen] = useState<boolean>(false)\n    const [openShowDialog, setOpenShowDialog] = useState<boolean>(false)\n    const [useEffectTrigger, setUseEffectTrigger] = useState<boolean>(false);\n    const [reservation, setReservation] = useState<Reservation>()\n    const [from, setFrom] = useState(new Date());\n    const date = new Date();\n    const [to, setTo] = useState(new Date(date.setHours(date.getHours() + 24)));\n\n    const handleProcessedClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        const inputs = { status: 'processed' };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been processed successfully!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n\n    const handleUnprocessedClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        const inputs = { status: 'unprocessed' };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been unprocessed successfully!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    };\n\n    const handleConfirmClick = (cellValues: any) => {\n        setReservation(cellValues.row);\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const invokeUseEffect = () => {\n        setUseEffectTrigger(!useEffectTrigger)\n    };\n\n    const handleShowClick = (cellValues: any) => {\n        console.log(cellValues.row.passengers);\n        // setPassengers();\n        setOpenShowDialog(true);\n    };\n\n    const handleShowDialogClose = () => {\n        setOpenShowDialog(false);\n    };\n\n    useEffect(() => {\n        getReservations(from, to).then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                console.log(data.success)\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.status = 'reservation';\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n                    reservation.property = reservation.client?.propertyName;\n                });\n                setRows(data.success.reservations);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n\n        });\n        return () => {\n            setRows([]);\n        }\n    }, [useEffectTrigger]);\n\n    const columns = language === 'eng' ? agencyEngColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick) \n                                       : agencyTurksihColumns(handleProcessedClick, handleUnprocessedClick, handleConfirmClick, handleShowClick);\n\n    return (\n        <Box>\n            <Search from={from} to={to} setFrom={setFrom} setTo={setTo} invokeUseEffect={invokeUseEffect}/>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog open={open} onClose={handleClose}>\n                <AssignDriver reservation={reservation} invokeUseEffect={invokeUseEffect} handleClose={handleClose} />\n            </CustomDialog>\n            <CustomDialog open={openShowDialog} onClose={handleShowDialogClose}>\n                <ListPassengers  />\n            </CustomDialog>\n        </Box>\n    )\n};\n\nexport default ListAgencyReservations;"]},"metadata":{},"sourceType":"module"}