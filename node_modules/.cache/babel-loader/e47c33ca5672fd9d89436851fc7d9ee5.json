{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useSnackbarContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext, createContext, useCallback } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SnackBarContext = /*#__PURE__*/createContext({\n  updateSnackBarMessage: () => null\n});\nexport const SnackBarProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [message, setMessage] = useState(null);\n  const [open, setOpen] = useState(false);\n  const updateSnackBarMessage = useCallback(message => {\n    setMessage(message);\n    setOpen(true);\n  }, []);\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n  const snackbarHandleClose = useCallback((event, reason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SnackBarContext.Provider, {\n    value: {\n      updateSnackBarMessage\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: open,\n      autoHideDuration: 6000,\n      onClose: snackbarHandleClose,\n      message: message,\n      action: /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SnackBarProvider, \"zbC1aqtu0alVOv+of2jHc+LqTzk=\");\n\n_c = SnackBarProvider;\nexport function useSnackBar() {\n  _s2();\n\n  return useContext(SnackBarContext);\n}\n\n_s2(useSnackBar, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackBarProvider\");","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/context/useSnackbarContext.tsx"],"names":["useState","useContext","createContext","useCallback","Snackbar","IconButton","CloseIcon","SnackBarContext","updateSnackBarMessage","SnackBarProvider","children","message","setMessage","open","setOpen","handleClose","snackbarHandleClose","event","reason","vertical","horizontal","useSnackBar"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,aAA/B,EAAiFC,WAAjF,QAAoG,OAApG;AACA,OAAOC,QAAP,MAA8C,4BAA9C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAMA,OAAO,MAAMC,eAAe,gBAAGL,aAAa,CAAmB;AAC7DM,EAAAA,qBAAqB,EAAE,MAAM;AADgC,CAAnB,CAArC;AAIP,OAAO,MAAMC,gBAAmC,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA;AAAF,GAA8B;AAChF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAgB,IAAhB,CAAtC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAU,KAAV,CAAhC;AAEA,QAAMQ,qBAAqB,GAAGL,WAAW,CAAEQ,OAAD,IAAqB;AAC7DC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHwC,EAGtC,EAHsC,CAAzC;AAKA,QAAMC,WAAW,GAAGZ,WAAW,CAAC,MAAM;AACpCW,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,QAAME,mBAAmB,GAAGb,WAAW,CAAC,CAACc,KAAD,EAAwBC,MAAxB,KAAwD;AAC9F,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC5BJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHsC,EAGpC,EAHoC,CAAvC;AAKA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEN,MAAAA;AAAF,KAAjC;AAAA,eACGE,QADH,eAEE,QAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZS,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAEP,IALR;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAEG,mBAPX;AAQE,MAAA,OAAO,EAAEL,OARX;AASE,MAAA,MAAM,eACJ,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,sBAAW,OAApC;AAA4C,QAAA,KAAK,EAAC,SAAlD;AAA4D,QAAA,OAAO,EAAEI,WAArE;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtCM;;GAAMN,gB;;KAAAA,gB;AAwCb,OAAO,SAASY,WAAT,GAAyC;AAAA;;AAC9C,SAAOpB,UAAU,CAACM,eAAD,CAAjB;AACD;;IAFec,W","sourcesContent":["import { useState, useContext, createContext, FunctionComponent, SyntheticEvent, useCallback } from 'react';\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface ISnackBarContext {\n  updateSnackBarMessage: (message: string) => void;\n}\n\nexport const SnackBarContext = createContext<ISnackBarContext>({\n  updateSnackBarMessage: () => null,\n});\n\nexport const SnackBarProvider: FunctionComponent = ({ children }): JSX.Element => {\n  const [message, setMessage] = useState<string | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const updateSnackBarMessage = useCallback((message: string) => {\n    setMessage(message);\n    setOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const snackbarHandleClose = useCallback((event: SyntheticEvent, reason: SnackbarCloseReason) => {\n    if (reason === 'clickaway') return;\n    setOpen(false);\n  }, []);\n\n  return (\n    <SnackBarContext.Provider value={{ updateSnackBarMessage }}>\n      {children}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={snackbarHandleClose}\n        message={message}\n        action={\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        }\n      />\n    </SnackBarContext.Provider>\n  );\n};\n\nexport function useSnackBar(): ISnackBarContext {\n  return useContext(SnackBarContext);\n}\n"]},"metadata":{},"sourceType":"module"}