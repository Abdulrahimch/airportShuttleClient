{"ast":null,"code":"import{Formik}from'formik';import*as Yup from'yup';import{CircularProgress,InputLabel,TextField,Button,Grid}from'@material-ui/core';import useStyles from'./useStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function LoginForm(_ref){var handleSubmit=_ref.handleSubmit;var classes=useStyles();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{username:'',password:''},validationSchema:Yup.object().shape({username:Yup.string().required('Username is reqeuired!').min(3,'Username is too short'),password:Yup.string().required('Password is requried!').min(5,'Password is too short!')}),onSubmit:handleSubmit,children:function children(_ref2){var handleSubmit=_ref2.handleSubmit,handleChange=_ref2.handleChange,values=_ref2.values,touched=_ref2.touched,errors=_ref2.errors,isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,className:classes.form,noValidate:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",justifyContent:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.label,children:\"username\"}),/*#__PURE__*/_jsx(TextField,{id:\"username\",name:\"username\",error:Boolean(errors.username),helperText:errors.username,value:values.username,onChange:handleChange,InputLabelProps:{shrink:true},InputProps:{classes:{input:classes.inputs},disableUnderline:true}}),/*#__PURE__*/_jsx(InputLabel,{className:classes.label,children:\"password\"}),/*#__PURE__*/_jsx(TextField,{id:\"password\",name:\"password\",type:\"password\",error:Boolean(errors.password),helperText:errors.password,value:values.password,onChange:handleChange,InputLabelProps:{shrink:true},InputProps:{classes:{input:classes.inputs},disableUnderline:true}})]}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Button,{size:\"large\",type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.submit,children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{className:classes.circularProgress}):'Login'})})]})});}})});}export default LoginForm;","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Login/LoginForm/LoginForm.tsx"],"names":["Formik","Yup","CircularProgress","InputLabel","TextField","Button","Grid","useStyles","LoginForm","handleSubmit","classes","username","password","object","shape","string","required","min","handleChange","values","touched","errors","isSubmitting","form","label","Boolean","shrink","input","inputs","disableUnderline","submit","circularProgress"],"mappings":"AAAA,OAASA,MAAT,KAAsC,QAAtC,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,CAAuCC,SAAvC,CAAkDC,MAAlD,CAA0DC,IAA1D,KAAsE,mBAAtE,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,6IAqBA,QAASC,CAAAA,SAAT,MAA0D,IAApCC,CAAAA,YAAoC,MAApCA,YAAoC,CACtD,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,mBACI,sCACI,KAAC,MAAD,EACI,aAAa,CAAE,CACXI,QAAQ,CAAE,EADC,CAEXC,QAAQ,CAAE,EAFC,CADnB,CAKI,gBAAgB,CAAEX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB,CACjCH,QAAQ,CAAEV,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,EAAgDC,GAAhD,CAAoD,CAApD,CAAuD,uBAAvD,CADuB,CAEjCL,QAAQ,CAAEX,GAAG,CAACc,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,EAA+CC,GAA/C,CAAmD,CAAnD,CAAsD,wBAAtD,CAFuB,CAAnB,CALtB,CASI,QAAQ,CAAER,YATd,UAWK,4BAAGA,CAAAA,YAAH,OAAGA,YAAH,CAAiBS,YAAjB,OAAiBA,YAAjB,CAA+BC,MAA/B,OAA+BA,MAA/B,CAAuCC,OAAvC,OAAuCA,OAAvC,CAAgDC,MAAhD,OAAgDA,MAAhD,CAAwDC,YAAxD,OAAwDA,YAAxD,oBACD,aAAM,QAAQ,CAAEb,YAAhB,CAA8B,SAAS,CAAEC,OAAO,CAACa,IAAjD,CAAuD,UAAU,KAAjE,uBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,QAA1B,CAAmC,cAAc,CAAC,QAAlD,CAA2D,UAAU,CAAC,QAAtE,wBACI,MAAC,IAAD,EAAM,IAAI,KAAV,wBACI,KAAC,UAAD,EAAY,SAAS,CAAEb,OAAO,CAACc,KAA/B,sBADJ,cAII,KAAC,SAAD,EACI,EAAE,CAAC,UADP,CAEI,IAAI,CAAC,UAFT,CAGI,KAAK,CAAEC,OAAO,CAACJ,MAAM,CAACV,QAAR,CAHlB,CAII,UAAU,CAAEU,MAAM,CAACV,QAJvB,CAKI,KAAK,CAAEQ,MAAM,CAACR,QALlB,CAMI,QAAQ,CAAEO,YANd,CAOI,eAAe,CAAE,CACbQ,MAAM,CAAE,IADK,CAPrB,CAUI,UAAU,CAAE,CACRhB,OAAO,CAAE,CAAEiB,KAAK,CAAEjB,OAAO,CAACkB,MAAjB,CADD,CAERC,gBAAgB,CAAE,IAFV,CAVhB,EAJJ,cAoBI,KAAC,UAAD,EAAY,SAAS,CAAEnB,OAAO,CAACc,KAA/B,sBApBJ,cAuBI,KAAC,SAAD,EACI,EAAE,CAAC,UADP,CAEI,IAAI,CAAC,UAFT,CAGI,IAAI,CAAC,UAHT,CAII,KAAK,CAAEC,OAAO,CAACJ,MAAM,CAACT,QAAR,CAJlB,CAKI,UAAU,CAAES,MAAM,CAACT,QALvB,CAMI,KAAK,CAAEO,MAAM,CAACP,QANlB,CAOI,QAAQ,CAAEM,YAPd,CAQI,eAAe,CAAE,CACbQ,MAAM,CAAE,IADK,CARrB,CAWI,UAAU,CAAE,CACRhB,OAAO,CAAE,CAAEiB,KAAK,CAAEjB,OAAO,CAACkB,MAAjB,CADD,CAERC,gBAAgB,CAAE,IAFV,CAXhB,EAvBJ,GADJ,cAyCI,KAAC,IAAD,EAAM,IAAI,KAAV,uBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,IAAI,CAAC,QAA1B,CAAmC,OAAO,CAAC,WAA3C,CAAuD,KAAK,CAAC,SAA7D,CAAuE,SAAS,CAAEnB,OAAO,CAACoB,MAA1F,UACCR,YAAY,cAAG,KAAC,gBAAD,EAAkB,SAAS,CAAEZ,OAAO,CAACqB,gBAArC,EAAH,CAA+D,OAD5E,EADJ,EAzCJ,GADJ,EADC,EAXL,EADJ,EADJ,CAmEH,CACD,cAAevB,CAAAA,SAAf","sourcesContent":["import { Formik, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport { CircularProgress, InputLabel, TextField, Button, Grid } from '@material-ui/core';\nimport useStyles from './useStyles';\n\ninterface Props {\n    handleSubmit: (\n      {\n        username,\n        password,\n      }: {\n        username: string;\n        password: string;\n      },\n      {\n        setStatus,\n        setSubmitting,\n      }: FormikHelpers<{\n        username: string;\n        password: string;\n      }>,\n    ) => void;\n  }\n\nfunction LoginForm ({ handleSubmit }: Props): JSX.Element { \n    const classes = useStyles();\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    username: '',\n                    password: ''\n                }}\n                validationSchema={Yup.object().shape({\n                    username: Yup.string().required('Username is reqeuired!').min(3, 'Username is too short'),\n                    password: Yup.string().required('Password is requried!').min(5, 'Password is too short!')\n                })}\n                onSubmit={handleSubmit}\n            >\n                {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Grid container direction='column' justifyContent='center' alignItems='center'>\n                        <Grid item>\n                            <InputLabel className={classes.label}>\n                                username\n                            </InputLabel>\n                            <TextField\n                                id='username'\n                                name='username'\n                                error={Boolean(errors.username)}\n                                helperText={errors.username}\n                                value={values.username}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    classes: { input: classes.inputs },\n                                    disableUnderline: true\n                                }}\n\n                            />\n                            <InputLabel className={classes.label}>\n                                password\n                            </InputLabel>\n                            <TextField\n                                id='password'\n                                name='password'\n                                type='password'\n                                error={Boolean(errors.password)}\n                                helperText={errors.password}\n                                value={values.password}\n                                onChange={handleChange}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    classes: { input: classes.inputs },\n                                    disableUnderline: true\n                                }}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.submit}>\n                            {isSubmitting ? <CircularProgress className={classes.circularProgress} /> : 'Login'} \n                            </Button>\n                        </Grid>\n                    </Grid> \n                </form>\n                )}   \n            </Formik>\n        </>\n    )\n}\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}