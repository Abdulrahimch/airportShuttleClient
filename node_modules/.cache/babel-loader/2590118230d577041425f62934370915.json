{"ast":null,"code":"import _objectSpread from\"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import DriverForm from\"../DriverForm/DriverForm\";import{Box,Typography}from\"@material-ui/core\";import useStyles from\"./useStyles\";import{updateDriver}from\"../../../../helpers/APICalls/driver\";import{useSnackBar}from'../../../../context/useSnackbarContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UpdateDriver=function UpdateDriver(_ref){var initValues=_ref.initValues,handleClose=_ref.handleClose,rows=_ref.rows,setRows=_ref.setRows;var _useStyles=useStyles(),title=_useStyles.title;var _useSnackBar=useSnackBar(),updateSnackBarMessage=_useSnackBar.updateSnackBarMessage;var handleSubmit=function handleSubmit(inputs){var id=initValues._id;updateDriver(inputs,id).then(function(data){if(data.error){updateSnackBarMessage(data.error);}else if(data.success){setRows(rows.map(function(row){var _data$success;return row.id===initValues.id?_objectSpread(_objectSpread({},row),(_data$success=data.success)===null||_data$success===void 0?void 0:_data$success.driver):row;}));updateSnackBarMessage('Driver has been updated successfully!');handleClose();}else{updateSnackBarMessage('An unexpected error occurred. Please try again !');}});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{className:title,children:\"update driver\"}),/*#__PURE__*/_jsx(DriverForm,{handleSubmit:handleSubmit,initValues:initValues})]})});};export default UpdateDriver;","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/UpdateDriver/UpdateDriver.tsx"],"names":["DriverForm","Box","Typography","useStyles","updateDriver","useSnackBar","UpdateDriver","initValues","handleClose","rows","setRows","title","updateSnackBarMessage","handleSubmit","inputs","id","_id","then","data","error","success","map","row","driver"],"mappings":"0IACA,MAAOA,CAAAA,UAAP,KAAuB,0BAAvB,CAEA,OAASC,GAAT,CAAcC,UAAd,KAAgC,mBAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,YAAT,KAA6B,qCAA7B,CACA,OAASC,WAAT,KAA4B,wCAA5B,C,6IASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAoE,IAAjEC,CAAAA,UAAiE,MAAjEA,UAAiE,CAArDC,WAAqD,MAArDA,WAAqD,CAAxCC,IAAwC,MAAxCA,IAAwC,CAAlCC,OAAkC,MAAlCA,OAAkC,CACrF,eAAkBP,SAAS,EAA3B,CAAQQ,KAAR,YAAQA,KAAR,CACA,iBAAkCN,WAAW,EAA7C,CAAQO,qBAAR,cAAQA,qBAAR,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAoB,CACrC,GAAMC,CAAAA,EAAE,CAAGR,UAAU,CAACS,GAAtB,CACAZ,YAAY,CAACU,MAAD,CAASC,EAAT,CAAZ,CAAyBE,IAAzB,CAA8B,SAACC,IAAD,CAAU,CACpC,GAAIA,IAAI,CAACC,KAAT,CAAgB,CACZP,qBAAqB,CAACM,IAAI,CAACC,KAAN,CAArB,CACH,CAFD,IAEM,IAAID,IAAI,CAACE,OAAT,CAAkB,CACpBV,OAAO,CAACD,IAAI,CAACY,GAAL,CAAS,SAAAC,GAAG,0BAAIA,CAAAA,GAAG,CAACP,EAAJ,GAAWR,UAAU,CAACQ,EAAtB,gCAAgCO,GAAhC,iBAAwCJ,IAAI,CAACE,OAA7C,wCAAwC,cAAcG,MAAtD,EAAiED,GAArE,EAAZ,CAAD,CAAP,CACAV,qBAAqB,CAAC,uCAAD,CAArB,CACAJ,WAAW,GACd,CAJK,IAIC,CACHI,qBAAqB,CAAC,kDAAD,CAArB,CACH,CACJ,CAVD,EAWH,CAbD,CAcA,mBACI,sCACI,MAAC,GAAD,yBACI,KAAC,UAAD,EAAY,SAAS,CAAED,KAAvB,2BADJ,cAII,KAAC,UAAD,EAAY,YAAY,CAAEE,YAA1B,CAAwC,UAAU,CAAEN,UAApD,EAJJ,GADJ,EADJ,CAWH,CA5BD,CA8BA,cAAeD,CAAAA,YAAf","sourcesContent":["import CustomDialog from \"../../../../components/CustomDialog/CustomDialog\";\nimport DriverForm from \"../DriverForm/DriverForm\";\nimport { Driver } from '../../../../interface/Driver';\nimport { Box, Typography } from \"@material-ui/core\";\nimport useStyles from \"./useStyles\";\nimport { updateDriver } from \"../../../../helpers/APICalls/driver\";\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\n\ninterface Props {\n    initValues: Driver;\n    handleClose: () => void;\n    rows: Driver [];\n    setRows: any;\n}\n\nconst UpdateDriver = ({ initValues, handleClose, rows, setRows }: Props): JSX.Element => {\n    const { title } = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n    const handleSubmit = (inputs: Driver) => {\n        const id = initValues._id;\n        updateDriver(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            }else if (data.success) {\n                setRows(rows.map(row => row.id === initValues.id ? { ...row, ...data.success?.driver } : row));\n                updateSnackBarMessage('Driver has been updated successfully!');\n                handleClose();\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }\n    return (\n        <>\n            <Box>\n                <Typography className={title}>\n                    update driver\n                </Typography>\n                <DriverForm handleSubmit={handleSubmit} initValues={initValues} />\n            </Box>\n        </>\n        \n    )\n};\n\nexport default UpdateDriver;\n"]},"metadata":{},"sourceType":"module"}