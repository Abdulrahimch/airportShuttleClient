{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { Box, Button } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { clientReservationsDictionary } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  engColumns,\n  turksihColumns\n} = clientReservationsDictionary;\nlet lan = 'eng';\n\nfunction ListReservations() {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n\n  const handleClick = cellValues => {\n    console.log('this is clicked from here here we are', cellValues.id);\n    const tempRows = rows.filter(row => row.id !== cellValues.id);\n    setRows(tempRows);\n  };\n\n  const x = TableButtons(handleClick);\n  let newColumns = engColumns.concat(x);\n  console.log(rows);\n  useEffect(() => {\n    getReservations().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else if (data.success) {\n        setRows(data.success.rows);\n        data.success.rows.map((row, idx) => {\n          row.id = idx + 1;\n        });\n      } else {\n        console.log('Externam error');\n      }\n    });\n    return () => {\n      setRows([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: lan === 'tr' ? turksihColumns : newColumns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListReservations, \"QhZRz5N6UNmfyDDz0Qxv5sb0dZg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListReservations;\n\nfunction TableButtons(handleClick) {\n  const tableButtons = [{\n    field: \"Edit\",\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          console.log('this is hirted');\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    field: \"Cancel\",\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => handleClick(cellValues),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this);\n    }\n  }];\n  return tableButtons;\n}\n\n_c2 = TableButtons;\n;\nexport default ListReservations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListReservations\");\n$RefreshReg$(_c2, \"TableButtons\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx"],"names":["useEffect","useState","useStyles","Box","Button","DataTable","clientReservationsDictionary","getReservations","engColumns","turksihColumns","lan","ListReservations","classes","rows","setRows","handleClick","cellValues","console","log","id","tempRows","filter","row","x","TableButtons","newColumns","concat","then","data","error","success","map","idx","root","tableButtons","field","renderCell"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { Box, Button } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { clientReservationsDictionary } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { GetReservationApiData } from '../../interface/Reservation';\nimport { GridColumns } from '@material-ui/data-grid';\n\nconst { engColumns, turksihColumns } = clientReservationsDictionary;\n\n\n\n\n\nlet lan = 'eng';\n\nfunction ListReservations(): JSX.Element{\n    const classes = useStyles();\n    const [rows, setRows] = useState<any>([]);\n    const handleClick =  (cellValues: any) => {\n        console.log('this is clicked from here here we are', cellValues.id);\n        const tempRows = rows.filter((row: any) => row.id !== cellValues.id)\n        setRows(tempRows);\n    }\n\n    const x = TableButtons(handleClick);\n    let newColumns = engColumns.concat(x);\n\n    console.log(rows)\n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log(data.error)\n            } else if (data.success) {\n                setRows(data.success.rows)\n                data.success.rows.map((row, idx) => {\n                    row.id = idx + 1;\n                })\n            } else {\n                console.log('Externam error')\n            }\n        })\n        return () => {\n            setRows([]);\n        }\n    }, []);\n\n    return (\n        <Box className={classes.root}>\n            <DataTable rows={rows} columns={lan === 'tr' ? turksihColumns : newColumns} />\n        </Box>\n    )\n}\n\nfunction TableButtons (handleClick: (cellValues: any) => void) {\n    const tableButtons = [{\n        field: \"Edit\",\n        renderCell: (cellValues: any) => {\n          return (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {console.log('this is hirted')}}\n            >\n              Edit\n            </Button>\n          );\n        }\n      },\n      {\n        field: \"Cancel\",\n        renderCell: (cellValues: any) => {\n          return (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => handleClick(cellValues)}\n            >\n              Cancel\n            </Button>\n          );\n        }\n      }]\n    return tableButtons;\n};\n\n\nexport default ListReservations;"]},"metadata":{},"sourceType":"module"}