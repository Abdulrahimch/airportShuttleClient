{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { Box } from '@material-ui/core';\nimport { clientPaymentDictionary } from '../../utils/dictionary';\nimport { useLanguage } from \"../../context/useLanguageContext\";\nimport { getmyPayments } from \"../../helpers/APICalls/agencyPayment\";\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  engColumns,\n  turksihColumns\n} = clientPaymentDictionary;\n\nfunction ClientPayment() {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  const {\n    language\n  } = useLanguage();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const history = useHistory();\n  useEffect(() => {\n    getmyPayments().then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        data.success.payment.map((item, idx) => {\n          item.id = idx + 1;\n        });\n        setRows(data.success.payment);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: language === 'tr' ? turksihColumns : engColumns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClientPayment, \"9JnGVfoughFxu9FWzS+HznWr1Ik=\", false, function () {\n  return [useLanguage, useSnackBar, useHistory];\n});\n\n_c = ClientPayment;\nexport default ClientPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientPayment\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx"],"names":["DataTable","Box","clientPaymentDictionary","useLanguage","getmyPayments","useSnackBar","useEffect","useState","useHistory","engColumns","turksihColumns","ClientPayment","rows","setRows","language","updateSnackBarMessage","history","then","data","error","success","payment","map","item","idx","id"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,sCAAtB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,uBAAT,QAAwC,wBAAxC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,aAAT,QAA8B,sCAA9B;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAM;AAAEC,EAAAA,UAAF;AAAeC,EAAAA;AAAf,IAAkCR,uBAAxC;;AAEA,SAASS,aAAT,GAAsC;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAK,EAAL,CAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeX,WAAW,EAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAA4BV,WAAW,EAA7C;AACA,QAAMW,OAAO,GAAGR,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,aAAa,GAAGa,IAAhB,CAAsBC,IAAD,IAAU;AAC3B,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXJ,QAAAA,qBAAqB,CAACG,IAAI,CAACC,KAAN,CAArB;AACH,OAFD,MAEO,IAAID,IAAI,CAACE,OAAT,EAAiB;AACpBF,QAAAA,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACpCD,UAAAA,IAAI,CAACE,EAAL,GAAUD,GAAG,GAAE,CAAf;AAEH,SAHD;AAIAX,QAAAA,OAAO,CAACK,IAAI,CAACE,OAAL,CAAaC,OAAd,CAAP;AACH,OANM,MAMA;AACHN,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KAZD;AAaH,GAdQ,EAcN,CAACC,OAAD,CAdM,CAAT;AAeA,sBACI,QAAC,GAAD;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEJ,IAAjB;AAAuB,MAAA,OAAO,EAAEE,QAAQ,KAAK,IAAb,GAAoBJ,cAApB,GAAqCD;AAArE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1BQE,a;UAEgBR,W,EACaE,W,EAClBG,U;;;KAJXG,a;AA4BT,eAAeA,aAAf","sourcesContent":["import DataTable from \"../../components/DataTable/DataTable\";\nimport { Box } from '@material-ui/core';\nimport { clientPaymentDictionary } from '../../utils/dictionary';\nimport { useLanguage } from \"../../context/useLanguageContext\";\nimport { getmyPayments } from \"../../helpers/APICalls/agencyPayment\";\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nconst { engColumns,  turksihColumns } = clientPaymentDictionary;\n\nfunction ClientPayment(): JSX.Element {\n    const [rows, setRows] = useState<[]>([])\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n    const history = useHistory();\n\n    useEffect(() => {\n        getmyPayments().then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                data.success.payment.map((item, idx) => {\n                    item.id = idx +1;\n\n                })\n                setRows(data.success.payment);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    }, [history])\n    return (\n        <Box>\n            <DataTable rows={rows} columns={language === 'tr' ? turksihColumns : engColumns} />\n        </Box>\n    )\n}\n\nexport default ClientPayment;"]},"metadata":{},"sourceType":"module"}