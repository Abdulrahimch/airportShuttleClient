{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useStyles from './useStyles';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Box, Menu, MenuItem } from '@material-ui/core';\nimport { AgencyTabsDictionary } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  englishTabs,\n  turkishTabs\n} = AgencyTabsDictionary;\n\nfunction AgencyHeader() {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const {\n    language\n  } = useLanguage();\n  const options = ['All Drivers', 'Add Driver'];\n  let tabs = [];\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  function tabFormation() {\n    if (language === 'tr') tabs = turkishTabs;else tabs = englishTabs;\n    return tabs.map((_ref, idx) => {\n      let {\n        label,\n        to\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Tab, {\n        label: label,\n        component: Link,\n        to: to,\n        className: classes.tabs\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      \"aria-label\": \"wrapped label tabs example\",\n      TabIndicatorProps: {\n        style: {\n          display: \"none\"\n        }\n      },\n      children: tabFormation()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"lock-menu\",\n      anchorEl: anchorEl,\n      open: open,\n      onClose: handleClose,\n      MenuListProps: {\n        'aria-labelledby': 'lock-button',\n        role: 'listbox'\n      },\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        disabled: index === 0,\n        selected: index === selectedIndex,\n        onClick: event => handleMenuItemClick(event, index),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AgencyHeader, \"r9F9/zprV7c7YJqgIGNySJ411gE=\", false, function () {\n  return [useStyles, useLanguage];\n});\n\n_c = AgencyHeader;\nexport default AgencyHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyHeader\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx"],"names":["useState","useStyles","Link","Tabs","Tab","Box","Menu","MenuItem","AgencyTabsDictionary","useLanguage","englishTabs","turkishTabs","AgencyHeader","classes","anchorEl","setAnchorEl","open","setOpen","language","options","tabs","handleClose","tabFormation","map","idx","label","to","root","style","display","role","option","index","selectedIndex","event","handleMenuItemClick"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,QAA/B,QAA+C,mBAA/C;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,WAAT,QAA4B,qCAA5B;;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAgBC,EAAAA;AAAhB,IAAgCH,oBAAtC;;AAGA,SAASI,YAAT,GAAqC;AAAA;;AACjC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAqB,IAArB,CAAxC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAU,KAAV,CAAhC;AAEA,QAAM;AAAEkB,IAAAA;AAAF,MAAeT,WAAW,EAAhC;AAEA,QAAMU,OAAO,GAAG,CACZ,aADY,EAEZ,YAFY,CAAhB;AAKA,MAAIC,IAAI,GAAG,EAAX;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFH;;AAIA,WAASO,YAAT,GAAwB;AACpB,QAAIJ,QAAQ,KAAK,IAAjB,EAAuBE,IAAI,GAAGT,WAAP,CAAvB,KACKS,IAAI,GAAGV,WAAP;AACL,WAAOU,IAAI,CAACG,GAAL,CAAS,OAAgBC,GAAhB;AAAA,UAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD;AAAA,0BACZ,QAAC,GAAD;AAEI,QAAA,KAAK,EAAED,KAFX;AAGI,QAAA,SAAS,EAAEvB,IAHf;AAII,QAAA,EAAE,EAAEwB,EAJR;AAKI,QAAA,SAAS,EAAEb,OAAO,CAACO;AALvB,SACSI,GADT;AAAA;AAAA;AAAA;AAAA,cADY;AAAA,KAAT,CAAP;AASH;;AAAA;AAED,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACc,IAAxB;AAAA,4BACI,QAAC,IAAD;AACI,oBAAW,4BADf;AAEI,MAAA,iBAAiB,EAAE;AACfC,QAAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE;AADN;AADQ,OAFvB;AAAA,gBAQKP,YAAY;AARjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,IAAD;AACI,MAAA,EAAE,EAAC,WADP;AAEI,MAAA,QAAQ,EAAER,QAFd;AAGI,MAAA,IAAI,EAAEE,IAHV;AAII,MAAA,OAAO,EAAEK,WAJb;AAKI,MAAA,aAAa,EAAE;AACf,2BAAmB,aADJ;AAEfS,QAAAA,IAAI,EAAE;AAFS,OALnB;AAAA,gBAUKX,OAAO,CAACI,GAAR,CAAY,CAACQ,MAAD,EAASC,KAAT,kBACb,QAAC,QAAD;AAEA,QAAA,QAAQ,EAAEA,KAAK,KAAK,CAFpB;AAGA,QAAA,QAAQ,EAAEA,KAAK,KAAKC,aAHpB;AAIA,QAAA,OAAO,EAAGC,KAAD,IAAWC,mBAAmB,CAACD,KAAD,EAAQF,KAAR,CAJvC;AAAA,kBAMCD;AAND,SACKA,MADL;AAAA;AAAA;AAAA;AAAA,cADC;AAVL;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAnEQnB,Y;UACWX,S,EAIKQ,W;;;KALhBG,Y;AAqET,eAAeA,YAAf","sourcesContent":["import { useState } from 'react';  \nimport useStyles from './useStyles';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Box, Menu, MenuItem } from '@material-ui/core';\nimport { AgencyTabsDictionary } from '../../../utils/dictionary';\nimport { useLanguage } from '../../../context/useLanguageContext';\n\nconst { englishTabs,  turkishTabs } = AgencyTabsDictionary;\n\n\nfunction AgencyHeader(): JSX.Element {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [open, setOpen] = useState<boolean>(false);\n\n    const { language } = useLanguage();\n\n    const options = [\n        'All Drivers',\n        'Add Driver',\n      ];\n\n    let tabs = [];\n\n    const handleClose = () => {\n        setAnchorEl(null);\n      };\n    \n    function tabFormation() {\n        if (language === 'tr') tabs = turkishTabs;\n        else tabs = englishTabs;\n        return tabs.map(({ label, to }, idx) => (\n            <Tab\n                key={idx}\n                label={label}\n                component={Link}\n                to={to}\n                className={classes.tabs}\n            />\n        ));\n    };\n\n    return (\n        <Box className={classes.root}>\n            <Tabs\n                aria-label=\"wrapped label tabs example\"\n                TabIndicatorProps={{\n                    style: {\n                        display: \"none\",\n                    },\n                }}\n            >\n                {tabFormation()}\n            </Tabs>\n            <Menu\n                id=\"lock-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                'aria-labelledby': 'lock-button',\n                role: 'listbox',\n                }}\n            >\n                {options.map((option, index) => (\n                <MenuItem\n                key={option}\n                disabled={index === 0}\n                selected={index === selectedIndex}\n                onClick={(event) => handleMenuItemClick(event, index)}\n                >\n                {option}\n                </MenuItem>\n            ))}\n      </Menu>\n        </Box>\n    )\n}\n\nexport default AgencyHeader;"]},"metadata":{},"sourceType":"module"}