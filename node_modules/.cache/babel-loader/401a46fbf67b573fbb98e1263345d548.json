{"ast":null,"code":"import axios from 'axios';\nexport const updateReservation = (inputs, id) => {\n  return axios.patch(`/agency-reservation/${id}`, inputs).then(res => res.data).catch(error => error.response.data);\n};\nexport const deleteReservation = async id => {\n  return await axios.delete(`/reservation/${id}`).then(res => res.data).catch(error => error.response.data);\n};\nexport const getClientReservation = async id => {\n  return await axios.get(`/agency-reservation/${id}`).then(res => res.data).catch(error => error.response.data);\n};\nexport const getClientPaymentStat = async id => {\n  return await axios.get(`/agency-reservation/stat/${id}`).then(res => res.data).catch(error => error.response.data);\n};\nexport const getReservations = async (from, to) => {\n  return await axios.get(`/agency-reservation`, {\n    params: {\n      from: from,\n      to: to\n    }\n  }).then(res => res.data).catch(error => error.response.data);\n};","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/helpers/APICalls/agencyReservation.ts"],"names":["axios","updateReservation","inputs","id","patch","then","res","data","catch","error","response","deleteReservation","delete","getClientReservation","get","getClientPaymentStat","getReservations","from","to","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAeA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,MAAD,EAAiBC,EAAjB,KAAgE;AAC7F,SAAOH,KAAK,CAACI,KAAN,CAAa,uBAAsBD,EAAG,EAAtC,EAAyCD,MAAzC,EACEG,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IADpB,EAEEC,KAFF,CAEQC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeH,IAFhC,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMI,iBAAiB,GAAG,MAAOR,EAAP,IAAsD;AACnF,SAAO,MAAMH,KAAK,CAACY,MAAN,CAAc,gBAAeT,EAAG,EAAhC,EACIE,IADJ,CACUC,GAAD,IAASA,GAAG,CAACC,IADtB,EAEIC,KAFJ,CAEUC,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeH,IAFlC,CAAb;AAGH,CAJM;AAMP,OAAO,MAAMM,oBAAoB,GAAG,MAAOV,EAAP,IAAsD;AACtF,SAAO,MAAMH,KAAK,CAACc,GAAN,CAAW,uBAAsBX,EAAG,EAApC,EACIE,IADJ,CACUC,GAAD,IAASA,GAAG,CAACC,IADtB,EAEIC,KAFJ,CAEWC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeH,IAFpC,CAAb;AAGH,CAJM;AAMP,OAAO,MAAMQ,oBAAoB,GAAG,MAAOZ,EAAP,IAAsD;AACtF,SAAO,MAAMH,KAAK,CAACc,GAAN,CAAW,4BAA2BX,EAAG,EAAzC,EACIE,IADJ,CACUC,GAAD,IAASA,GAAG,CAACC,IADtB,EAEIC,KAFJ,CAEWC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeH,IAFpC,CAAb;AAGH,CAJM;AAMP,OAAO,MAAMS,eAAe,GAAG,OAAOC,IAAP,EAAmBC,EAAnB,KAAgE;AAC3F,SAAO,MAAMlB,KAAK,CAACc,GAAN,CAAW,qBAAX,EAAiC;AAC1CK,IAAAA,MAAM,EAAE;AACJF,MAAAA,IAAI,EAAEA,IADF;AAEJC,MAAAA,EAAE,EAAEA;AAFA;AADkC,GAAjC,EAMZb,IANY,CAMNC,GAAD,IAASA,GAAG,CAACC,IANN,EAOZC,KAPY,CAOLC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeH,IAPpB,CAAb;AAQH,CATM","sourcesContent":["import axios from 'axios';\nimport { GetReservationApiData } from '../../interface/agencyReservation';\n\n// export const getReservations = (): Promise<GetReservationApiData> => {\n//     return axios.get('/agency-reservation')\n//         .then((res) => res.data )\n//         .catch((error) => error.response.data);\n// };\n\ninterface Inputs {\n    status?: string;\n    confirmed?: boolean;\n    driver?: string\n}\n\nexport const updateReservation = (inputs: Inputs, id: string): Promise<GetReservationApiData> => {\n    return axios.patch(`/agency-reservation/${id}`, inputs)\n            .then((res) => res.data)\n            .catch(error => error.response.data);\n};\n\nexport const deleteReservation = async (id: string): Promise<GetReservationApiData> => {\n    return await axios.delete(`/reservation/${id}`)\n                    .then((res) => res.data)\n                    .catch(error => error.response.data);\n};\n\nexport const getClientReservation = async (id: string): Promise<GetReservationApiData> => {\n    return await axios.get(`/agency-reservation/${id}`)\n                    .then((res) => res.data)\n                    .catch((error) => error.response.data);\n};\n\nexport const getClientPaymentStat = async (id: string): Promise<GetReservationApiData> => {\n    return await axios.get(`/agency-reservation/stat/${id}`)\n                    .then((res) => res.data)\n                    .catch((error) => error.response.data);\n};\n\nexport const getReservations = async (from: Date, to: Date): Promise<GetReservationApiData> => {\n    return await axios.get(`/agency-reservation`, {\n        params: {\n            from: from,\n            to: to\n        }\n    })\n    .then((res) => res.data)\n    .catch((error) => error.response.data);\n};\n"]},"metadata":{},"sourceType":"module"}