{"ast":null,"code":"import _slicedToArray from\"/home/cisco/airportShuttleDeploy/airportShuttleV2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Box,Grid,Paper,Typography}from'@material-ui/core';import{useEffect,useRef,useState}from'react';import useStyles from'./useStyles';import AddReservationForm from'./AddReservationForm/AddReservationForm';import{useHistory}from'react-router-dom';import{NewReservationDictionary}from'../../../utils/dictionary';import{postReservation}from'../../../helpers/APICalls/reservation';import{useSnackBar}from'../../../context/useSnackbarContext';import{useLanguage}from'../../../context/useLanguageContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var turkishPage=NewReservationDictionary.turkishPage,engPage=NewReservationDictionary.engPage;function AddReservation(){var classes=useStyles();var _useState=useState({title:'',form:engPage.form}),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var history=useHistory();var _useSnackBar=useSnackBar(),updateSnackBarMessage=_useSnackBar.updateSnackBarMessage;var _useLanguage=useLanguage(),language=_useLanguage.language;var initValues=useRef({type:0,from:0,to:0,property:'',pax:0,flightNo:'',driverNote:'',selectedDate:new Date(),timezone:0,passengers:[]});var handleSubmit=function handleSubmit(values){postReservation(values).then(function(data){if(data.error){updateSnackBarMessage(data.error.message);}else if(data.success){updateSnackBarMessage('reservation has been created successfully');}else{updateSnackBarMessage('An unexpected error occurred. Please try again !');}});};useEffect(function(){if(language==='tr'){setPage(turkishPage);}else setPage(engPage);},[history,language]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Grid,{container:true,component:Paper,className:classes.root,alignItems:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:12,md:12,lg:12,children:/*#__PURE__*/_jsx(Box,{display:\"flex\",flexDirection:\"column\",minHeight:\"100vh\",children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",color:\"primary\",className:classes.title,children:page.title}),/*#__PURE__*/_jsx(AddReservationForm,{form:page.form,handleSubmit:handleSubmit,initValues:initValues.current})]})})})})});}export default AddReservation;","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/ClientReservations/AddReservation/AddReservation.tsx"],"names":["Box","Grid","Paper","Typography","useEffect","useRef","useState","useStyles","AddReservationForm","useHistory","NewReservationDictionary","postReservation","useSnackBar","useLanguage","turkishPage","engPage","AddReservation","classes","title","form","page","setPage","history","updateSnackBarMessage","language","initValues","type","from","to","property","pax","flightNo","driverNote","selectedDate","Date","timezone","passengers","handleSubmit","values","then","data","error","message","success","root","current"],"mappings":"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","sourcesContent":["import { Box, Grid, Paper, Typography } from '@material-ui/core';\nimport {  useEffect, useRef, useState } from 'react';\nimport useStyles from './useStyles';\nimport AddReservationForm from './AddReservationForm/AddReservationForm';\nimport { useHistory } from 'react-router-dom';\nimport { NewReservationDictionary } from '../../../utils/dictionary';\nimport { Page, FormValues } from '../../../interface/Reservation';\nimport { postReservation } from '../../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../../context/useSnackbarContext';\nimport { useLanguage } from '../../../context/useLanguageContext';\n\nconst { turkishPage, engPage } = NewReservationDictionary;\n\nfunction AddReservation(): JSX.Element {\n    const classes = useStyles();\n    const [page, setPage] = useState<Page>({title: '', form: engPage.form});\n    const history = useHistory();\n    const { updateSnackBarMessage } = useSnackBar();\n    const { language } = useLanguage();\n    const initValues = useRef(\n        {\n            type: 0,\n            from: 0,\n            to: 0,\n            property: '',\n            pax: 0,\n            flightNo: '',\n            driverNote: '',\n            selectedDate: new Date(),\n            timezone: 0,\n            passengers: []\n        }\n    );\n\n    const handleSubmit = (values: FormValues) => {\n        postReservation(values).then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success){\n                updateSnackBarMessage('reservation has been created successfully');\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    };\n\n    useEffect(() => { \n        if (language === 'tr') {\n            setPage(turkishPage); \n        } else setPage(engPage);\n    }, [history, language])\n\n    return (\n        <>\n            <Grid container component={Paper} className={classes.root} alignItems='center'>\n                <Grid item xs={12} sm={12} md={12} lg={12} >\n                    <Box\n                        display=\"flex\"\n                        flexDirection=\"column\"\n                        minHeight=\"100vh\"\n                    >\n                        <Box>\n                            <Typography variant=\"h2\" color=\"primary\" className={classes.title}>\n                                { page.title} \n                            </Typography>\n                            <AddReservationForm form={page.form} handleSubmit={handleSubmit} initValues={initValues.current}/>\n                        </Box>\n                    </Box>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default AddReservation;"]},"metadata":{},"sourceType":"module"}