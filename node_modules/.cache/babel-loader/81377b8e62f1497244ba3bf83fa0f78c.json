{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservation } from '../../../../helpers/APICalls/agencyReservation';\nimport { getClientPayments } from '../../../../helpers/APICalls/agencyPayment';\nimport { reservationDetailsEngColumns, reservationDetailsTurksihColumns, paymentDetailsEngColumns, paymentDetailsTurkishColumns, totalDetailsEngColumns, totalDetailsTurkishColumns } from '../../../../utils/dictionary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\n\nfunction Details(_ref) {\n  _s();\n\n  let {\n    clientId\n  } = _ref;\n  const {\n    language\n  } = useLanguage();\n  const reservationColumns = language === 'eng' ? reservationDetailsEngColumns() : reservationDetailsTurksihColumns();\n  const paymentColumns = language === 'eng' ? paymentDetailsEngColumns() : paymentDetailsTurkishColumns();\n  const totalColumns = language === 'eng' ? totalDetailsEngColumns() : totalDetailsTurkishColumns();\n  const [reservationRows, setReservationRows] = useState([]);\n  const [paymentRows, setPaymentRows] = useState([]); // const [totalRows, setTotalRows] = useState<any>([]);\n\n  const reservationTotal = useRef(0);\n  const paymentTotal = useRef(0);\n  const totalsRows = useRef([{\n    id: 1,\n    reservationTotal: 0,\n    paymentTotal: 0\n  }]);\n  useEffect(() => {\n    getClientReservation(clientId).then(data => {\n      if (data.error) {\n        console.log(data.error.message);\n      } else if (data.success) {\n        data.success.reservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          reservationTotal.current = reservation.cost ? reservation.cost : 0;\n        });\n        totalsRows.current[0].reservationTotal = reservationTotal.current;\n        setReservationRows(data.success.reservations);\n      } else {\n        console.log('External Error, please try again Later!');\n      }\n    });\n    getClientPayments(clientId).then(data => {\n      if (data.error) {\n        console.log(data.error.message);\n      } else if (data.success) {\n        data.success.payment.map((item, idx) => {\n          item.id = idx + 1;\n          paymentTotal.current = item.paidInTL;\n        });\n        totalsRows.current[0].paymentTotal = paymentTotal.current;\n        setPaymentRows(data.success.payment);\n      }\n    });\n    return () => {\n      setReservationRows([]);\n      setPaymentRows([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(DataTable, {\n        rows: reservationRows,\n        columns: reservationColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: paymentRows,\n        columns: paymentColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: totalsRows.current,\n        columns: totalColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Details, \"GGzCCcDbU1tSWNA8hFQlAjNzOb0=\", false, function () {\n  return [useLanguage];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx"],"names":["Box","useEffect","useState","useRef","DataTable","useLanguage","getClientReservation","getClientPayments","reservationDetailsEngColumns","reservationDetailsTurksihColumns","paymentDetailsEngColumns","paymentDetailsTurkishColumns","totalDetailsEngColumns","totalDetailsTurkishColumns","Details","clientId","language","reservationColumns","paymentColumns","totalColumns","reservationRows","setReservationRows","paymentRows","setPaymentRows","reservationTotal","paymentTotal","totalsRows","id","then","data","error","console","log","message","success","reservations","map","reservation","idx","current","cost","payment","item","paidInTL"],"mappings":"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","sourcesContent":["import { AppBar, Box, Toolbar, Typography } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservation } from '../../../../helpers/APICalls/agencyReservation';\nimport { getClientPayments } from '../../../../helpers/APICalls/agencyPayment';\n\nimport { \n        reservationDetailsEngColumns,  reservationDetailsTurksihColumns,\n        paymentDetailsEngColumns, paymentDetailsTurkishColumns,\n        totalDetailsEngColumns, totalDetailsTurkishColumns\n        } from '../../../../utils/dictionary';\nimport { GridRowData } from '@material-ui/data-grid';\n\ninterface Props {\n    clientId: string;\n};\n\ninterface Total {\n    id: number;\n    reservationTotal?: number;\n    paymentTotal?: number;\n}\n\nfunction Details({ clientId }: Props): JSX.Element {\n    const { language } = useLanguage();\n    const reservationColumns = language === 'eng' ? reservationDetailsEngColumns() : reservationDetailsTurksihColumns();\n    const paymentColumns = language === 'eng' ? paymentDetailsEngColumns() : paymentDetailsTurkishColumns();\n    const totalColumns = language === 'eng' ? totalDetailsEngColumns() : totalDetailsTurkishColumns();\n    \n    const [reservationRows, setReservationRows] = useState<any>([]);\n    const [paymentRows, setPaymentRows] = useState<any>([]);\n    // const [totalRows, setTotalRows] = useState<any>([]);\n\n    const reservationTotal = useRef(0);\n    const paymentTotal = useRef(0);\n    const totalsRows = useRef<Total[]>([{id: 1, reservationTotal: 0, paymentTotal: 0}]); \n\n    \n    useEffect(() => {\n        getClientReservation(clientId).then((data) => {\n            if (data.error) {\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservationTotal.current =  reservation.cost ? reservation.cost : 0;\n                    \n                    })\n                totalsRows.current[0].reservationTotal = reservationTotal.current;\n                setReservationRows(data.success.reservations);\n                \n            } else {\n                console.log('External Error, please try again Later!')\n            }\n        });\n        getClientPayments(clientId).then((data) => {\n            if(data.error) {\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.payment.map((item, idx) => {\n                    item.id = idx + 1;\n                    paymentTotal.current = item.paidInTL;\n                });\n                totalsRows.current[0].paymentTotal = paymentTotal.current;\n                setPaymentRows(data.success.payment);\n                \n            }\n        });\n\n        return () => {\n            setReservationRows([]);\n            setPaymentRows([]);\n        }\n    }, []);\n    return (\n        <>  \n            <Box display='flex' flexDirection='column'>\n                <DataTable rows={reservationRows} columns={reservationColumns}/>\n                <DataTable rows={paymentRows} columns={paymentColumns} />\n                <DataTable rows={totalsRows.current} columns={totalColumns} />\n            </Box>\n        </>\n    )\n}\nexport default Details"]},"metadata":{},"sourceType":"module"}