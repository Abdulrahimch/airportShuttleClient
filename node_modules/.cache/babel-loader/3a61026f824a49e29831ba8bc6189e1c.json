{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservation } from '../../../../helpers/APICalls/agencyReservation';\nimport { getClientPayments } from '../../../../helpers/APICalls/agencyPayment';\nimport { reservationDetailsEngColumns, reservationDetailsTurksihColumns, paymentDetailsEngColumns, paymentDetailsTurkishColumns, totalDetailsEngColumns, totalDetailsTurkishColumns } from '../../../../utils/dictionary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\n\nfunction Details(_ref) {\n  _s();\n\n  let {\n    clientId\n  } = _ref;\n  const {\n    language\n  } = useLanguage();\n  const reservationColumns = language === 'eng' ? reservationDetailsEngColumns() : reservationDetailsTurksihColumns();\n  const paymentColumns = language === 'eng' ? paymentDetailsEngColumns() : paymentDetailsTurkishColumns();\n  const totalColumns = language === 'eng' ? totalDetailsEngColumns() : totalDetailsTurkishColumns();\n  const [reservationRows, setReservationRows] = useState([]);\n  const [paymentRows, setPaymentRows] = useState([]);\n  const [totalRows, setTotalRows] = useState([]);\n  const reservationTotal = useRef(0);\n  const paymentTotal = useRef(0);\n  const totalsRows = useRef([]);\n  console.log(reservationRows);\n  useEffect(() => {\n    getClientReservation(clientId).then(data => {\n      if (data.error) {\n        console.log(data.error.message);\n      } else if (data.success) {\n        data.success.reservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          reservationTotal.current = reservation.cost ? reservation.cost : 0;\n        });\n        setReservationRows(data.success.reservations);\n        totalsRows.current.push({\n          reservationsTotal: reservationTotal.current\n        });\n      } else {\n        console.log('External Error, please try again Later!');\n      }\n    });\n    getClientPayments(clientId).then(data => {\n      if (data.error) {\n        console.log(data.error.message);\n      } else if (data.success) {\n        data.success.payment.map((item, idx) => {\n          item.id = idx + 1;\n          paymentTotal.current = item.paidInTL;\n        });\n        setPaymentRows(data.success.payment);\n        totalsRows.current.push({\n          paymentTotal: paymentTotal.current\n        });\n      }\n    });\n    return () => {\n      setReservationRows([]);\n      setPaymentRows([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(DataTable, {\n        rows: reservationRows,\n        columns: reservationColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: paymentRows,\n        columns: paymentColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: totalsRows,\n        columns: totalColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Details, \"myv3ItnqUea/o5C0GB85KKcKMqE=\", false, function () {\n  return [useLanguage];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/Details/Details.tsx"],"names":["Box","useEffect","useState","useRef","DataTable","useLanguage","getClientReservation","getClientPayments","reservationDetailsEngColumns","reservationDetailsTurksihColumns","paymentDetailsEngColumns","paymentDetailsTurkishColumns","totalDetailsEngColumns","totalDetailsTurkishColumns","Details","clientId","language","reservationColumns","paymentColumns","totalColumns","reservationRows","setReservationRows","paymentRows","setPaymentRows","totalRows","setTotalRows","reservationTotal","paymentTotal","totalsRows","console","log","then","data","error","message","success","reservations","map","reservation","idx","id","current","cost","push","reservationsTotal","payment","item","paidInTL"],"mappings":";;;AAAA,SAAiBA,GAAjB,QAAiD,mBAAjD;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,SAASC,WAAT,QAA4B,wCAA5B;AACA,SAASC,oBAAT,QAAqC,gDAArC;AACA,SAASC,iBAAT,QAAkC,4CAAlC;AAEA,SACQC,4BADR,EACuCC,gCADvC,EAEQC,wBAFR,EAEkCC,4BAFlC,EAGQC,sBAHR,EAGgCC,0BAHhC,QAIe,8BAJf;;;AASC;;AAOD,SAASC,OAAT,OAAmD;AAAA;;AAAA,MAAlC;AAAEC,IAAAA;AAAF,GAAkC;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAeX,WAAW,EAAhC;AACA,QAAMY,kBAAkB,GAAGD,QAAQ,KAAK,KAAb,GAAqBR,4BAA4B,EAAjD,GAAsDC,gCAAgC,EAAjH;AACA,QAAMS,cAAc,GAAGF,QAAQ,KAAK,KAAb,GAAqBN,wBAAwB,EAA7C,GAAkDC,4BAA4B,EAArG;AACA,QAAMQ,YAAY,GAAGH,QAAQ,KAAK,KAAb,GAAqBJ,sBAAsB,EAA3C,GAAgDC,0BAA0B,EAA/F;AAEA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAM,EAAN,CAAtD;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAM,EAAN,CAA9C;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAM,EAAN,CAA1C;AAEA,QAAMwB,gBAAgB,GAAGvB,MAAM,CAAC,CAAD,CAA/B;AACA,QAAMwB,YAAY,GAAGxB,MAAM,CAAC,CAAD,CAA3B;AACA,QAAMyB,UAAU,GAAGzB,MAAM,CAAU,EAAV,CAAzB;AAEA0B,EAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,oBAAoB,CAACS,QAAD,CAApB,CAA+BgB,IAA/B,CAAqCC,IAAD,IAAU;AAC1C,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,KAAL,CAAWC,OAAvB;AACH,OAFD,MAEO,IAAIF,IAAI,CAACG,OAAT,EAAkB;AACrBH,QAAAA,IAAI,CAACG,OAAL,CAAaC,YAAb,CAA0BC,GAA1B,CAA8B,CAACC,WAAD,EAAcC,GAAd,KAAsB;AAChDD,UAAAA,WAAW,CAACE,EAAZ,GAAiBD,GAAG,GAAG,CAAvB;AACAb,UAAAA,gBAAgB,CAACe,OAAjB,GAA4BH,WAAW,CAACI,IAAZ,GAAmBJ,WAAW,CAACI,IAA/B,GAAsC,CAAlE;AAEC,SAJL;AAKArB,QAAAA,kBAAkB,CAACW,IAAI,CAACG,OAAL,CAAaC,YAAd,CAAlB;AACAR,QAAAA,UAAU,CAACa,OAAX,CAAmBE,IAAnB,CAAwB;AAAEC,UAAAA,iBAAiB,EAAGlB,gBAAgB,CAACe;AAAvC,SAAxB;AACH,OARM,MAQA;AACHZ,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACH;AACJ,KAdD;AAeAvB,IAAAA,iBAAiB,CAACQ,QAAD,CAAjB,CAA4BgB,IAA5B,CAAkCC,IAAD,IAAU;AACvC,UAAGA,IAAI,CAACC,KAAR,EAAe;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,KAAL,CAAWC,OAAvB;AACH,OAFD,MAEO,IAAIF,IAAI,CAACG,OAAT,EAAkB;AACrBH,QAAAA,IAAI,CAACG,OAAL,CAAaU,OAAb,CAAqBR,GAArB,CAAyB,CAACS,IAAD,EAAOP,GAAP,KAAe;AACpCO,UAAAA,IAAI,CAACN,EAAL,GAAUD,GAAG,GAAG,CAAhB;AACAZ,UAAAA,YAAY,CAACc,OAAb,GAAuBK,IAAI,CAACC,QAA5B;AACH,SAHD;AAIAxB,QAAAA,cAAc,CAACS,IAAI,CAACG,OAAL,CAAaU,OAAd,CAAd;AACAjB,QAAAA,UAAU,CAACa,OAAX,CAAmBE,IAAnB,CAAwB;AAAEhB,UAAAA,YAAY,EAAGA,YAAY,CAACc;AAA9B,SAAxB;AACH;AACJ,KAXD;AAaA,WAAO,MAAM;AACTpB,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH,KAHD;AAIH,GAjCQ,EAiCN,EAjCM,CAAT;AAkCA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,aAAa,EAAC,QAAlC;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEH,eAAjB;AAAkC,QAAA,OAAO,EAAEH;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEK,WAAjB;AAA8B,QAAA,OAAO,EAAEJ;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEU,UAAjB;AAA6B,QAAA,OAAO,EAAET;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AASH;;GA1DQL,O;UACgBT,W;;;KADhBS,O;AA2DT,eAAeA,OAAf","sourcesContent":["import { AppBar, Box, Toolbar, Typography } from '@material-ui/core';\nimport { useEffect, useState, useRef } from 'react';\nimport DataTable from '../../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../../context/useLanguageContext';\nimport { getClientReservation } from '../../../../helpers/APICalls/agencyReservation';\nimport { getClientPayments } from '../../../../helpers/APICalls/agencyPayment';\n\nimport { \n        reservationDetailsEngColumns,  reservationDetailsTurksihColumns,\n        paymentDetailsEngColumns, paymentDetailsTurkishColumns,\n        totalDetailsEngColumns, totalDetailsTurkishColumns\n        } from '../../../../utils/dictionary';\nimport { GridRowData } from '@material-ui/data-grid';\n\ninterface Props {\n    clientId: string;\n};\n\ninterface Total {\n    reservationsTotal: number;\n    paymentTotal: number;\n}\n\nfunction Details({ clientId }: Props): JSX.Element {\n    const { language } = useLanguage();\n    const reservationColumns = language === 'eng' ? reservationDetailsEngColumns() : reservationDetailsTurksihColumns();\n    const paymentColumns = language === 'eng' ? paymentDetailsEngColumns() : paymentDetailsTurkishColumns();\n    const totalColumns = language === 'eng' ? totalDetailsEngColumns() : totalDetailsTurkishColumns();\n    \n    const [reservationRows, setReservationRows] = useState<any>([]);\n    const [paymentRows, setPaymentRows] = useState<any>([]);\n    const [totalRows, setTotalRows] = useState<any>([]);\n\n    const reservationTotal = useRef(0);\n    const paymentTotal = useRef(0);\n    const totalsRows = useRef<Total[]>([]); \n\n    console.log(reservationRows);\n    useEffect(() => {\n        getClientReservation(clientId).then((data) => {\n            if (data.error) {\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservationTotal.current =  reservation.cost ? reservation.cost : 0;\n                    \n                    })\n                setReservationRows(data.success.reservations);\n                totalsRows.current.push({ reservationsTotal:  reservationTotal.current })\n            } else {\n                console.log('External Error, please try again Later!')\n            }\n        });\n        getClientPayments(clientId).then((data) => {\n            if(data.error) {\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.payment.map((item, idx) => {\n                    item.id = idx + 1;\n                    paymentTotal.current = item.paidInTL;\n                });\n                setPaymentRows(data.success.payment);\n                totalsRows.current.push({ paymentTotal:  paymentTotal.current })\n            }\n        });\n\n        return () => {\n            setReservationRows([]);\n            setPaymentRows([]);\n        }\n    }, []);\n    return (\n        <>  \n            <Box display='flex' flexDirection='column'>\n                <DataTable rows={reservationRows} columns={reservationColumns}/>\n                <DataTable rows={paymentRows} columns={paymentColumns} />\n                <DataTable rows={totalsRows} columns={totalColumns} />\n            </Box>\n        </>\n    )\n}\nexport default Details"]},"metadata":{},"sourceType":"module"}