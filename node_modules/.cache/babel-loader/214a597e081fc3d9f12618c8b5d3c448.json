{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Box, Tab } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport CustomDialog from '../../components/CustomDialog/CustomDialog';\nimport { useHistory } from 'react-router-dom';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport { turkishTabs, engTabs } from '../../utils/dictionary';\nimport DriverDetail from '../Agency/Drivers/DriverDetail/DriverDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst driverInitValue = {\n  name: '',\n  img: '',\n  carNumber: '',\n  phoneNumber: 0,\n  email: ''\n};\n\nfunction ListReservations() {\n  _s();\n\n  const {\n    root\n  } = useStyles();\n  const history = useHistory();\n  const {\n    language\n  } = useLanguage();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const [confirmedReservations, setConfirmedReservations] = useState([]);\n  const [unConfirmedReservations, setUnConfirmedReservations] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openDetailDialog, setOpenDetailDialog] = useState(false);\n  const [driver, setDriver] = useState(driverInitValue);\n  const [value, setValue] = useState('1');\n  const [initValues, setInitValues] = useState({\n    type: 0,\n    from: 0,\n    to: 0,\n    property: '',\n    pax: 5,\n    flightNo: '',\n    driverNote: '',\n    selectedDate: new Date(),\n    timezone: 0,\n    passengers: []\n  });\n\n  const handleDialogClose = () => {\n    setOpen(false);\n  };\n\n  const handleCacelClick = cellValues => {\n    const id = cellValues.row._id;\n    deleteReservation(id).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateSnackBarMessage('reservation deleted!');\n        setConfirmedReservations(confirmedReservations.filter(row => row.id !== cellValues.id));\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  const handleEditClick = cellValues => {\n    setInitValues(cellValues.row);\n    setOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleDriverDetails = cellValues => {\n    setDriver(cellValues.row.driver);\n    setOpenDetailDialog(true);\n  };\n\n  const onDetailDialogClose = () => {\n    setOpenDetailDialog(false);\n  };\n\n  const columns = language === 'tr' ? turksihColumns(handleEditClick, handleCacelClick, handleDriverDetails) : engColumn(handleEditClick, handleCacelClick, handleDriverDetails);\n  const tabs = language === 'tr' ? turkishTabs : engTabs;\n  useEffect(() => {\n    getReservations().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else if (data.success) {\n        data.success.reservations.confirmedReservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          reservation.status = 'reservation';\n          const date = new Date(reservation.selectedDate);\n          reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n        });\n        setConfirmedReservations(data.success.reservations.confirmedReservations);\n        data.success.reservations.unConfirmedReservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          const date = new Date(reservation.selectedDate);\n          reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n        });\n        setUnConfirmedReservations(data.success.reservations.unConfirmedReservations);\n      } else {\n        console.log('External error');\n      }\n    });\n    return () => {\n      setConfirmedReservations([]);\n      setUnConfirmedReservations([]);\n    };\n  }, [history, open]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%'\n      },\n      className: root,\n      children: [/*#__PURE__*/_jsxDEV(TabContext, {\n        value: value,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: /*#__PURE__*/_jsxDEV(TabList, {\n            onChange: handleChange,\n            \"aria-label\": \"lab API tabs example\",\n            children: tabs.map((_ref, idx) => {\n              let {\n                label,\n                value\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                label: label,\n                value: value\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"1\",\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            rows: confirmedReservations,\n            columns: columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: \"2\",\n          style: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            rows: unConfirmedReservations,\n            columns: columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n        open: openDetailDialog,\n        onClose: onDetailDialogClose,\n        style: \"updateReservation\",\n        children: /*#__PURE__*/_jsxDEV(DriverDetail, {\n          driver: driver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ListReservations, \"rZO5aICIigXSGbw6tTNYrxLd6L0=\", false, function () {\n  return [useStyles, useHistory, useLanguage, useSnackBar];\n});\n\n_c = ListReservations;\nexport default ListReservations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListReservations\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx"],"names":["useEffect","useState","useStyles","format","Box","Tab","DataTable","engColumn","turksihColumns","getReservations","deleteReservation","useSnackBar","CustomDialog","useHistory","useLanguage","TabContext","TabList","TabPanel","turkishTabs","engTabs","DriverDetail","driverInitValue","name","img","carNumber","phoneNumber","email","ListReservations","root","history","language","updateSnackBarMessage","confirmedReservations","setConfirmedReservations","unConfirmedReservations","setUnConfirmedReservations","open","setOpen","openDetailDialog","setOpenDetailDialog","driver","setDriver","value","setValue","initValues","setInitValues","type","from","to","property","pax","flightNo","driverNote","selectedDate","Date","timezone","passengers","handleDialogClose","handleCacelClick","cellValues","id","row","_id","then","data","error","message","success","filter","handleEditClick","handleChange","event","newValue","handleDriverDetails","onDetailDialogClose","columns","tabs","console","log","reservations","map","reservation","idx","status","date","width","borderBottom","borderColor","label"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Box, Tab } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport CustomDialog from '../../components/CustomDialog/CustomDialog';\nimport { useHistory } from 'react-router-dom';\nimport { useLanguage } from '../../context/useLanguageContext';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport { turkishTabs, engTabs } from '../../utils/dictionary';\nimport DriverDetail from '../Agency/Drivers/DriverDetail/DriverDetail';\nimport { Driver } from '../../interface/Driver';\n\nconst driverInitValue = {\n    name: '',\n    img: '',\n    carNumber: '',\n    phoneNumber: 0,\n    email: ''\n};\n\nfunction ListReservations(): JSX.Element{\n    const { root } = useStyles();\n    const history = useHistory();\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n\n    const [confirmedReservations, setConfirmedReservations] = useState<any>([]);\n    const [unConfirmedReservations, setUnConfirmedReservations] = useState<any>([]);\n    const [open, setOpen] = useState<boolean>(false);\n    const [openDetailDialog, setOpenDetailDialog] = useState<boolean>(false);\n    const [driver, setDriver] = useState<Driver>(driverInitValue);\n    const [value, setValue] = useState('1');\n    const [initValues, setInitValues] = useState( {\n        type: 0,\n        from: 0,\n        to: 0,\n        property: '',\n        pax: 5,\n        flightNo: '',\n        driverNote: '',\n        selectedDate: new Date(),\n        timezone: 0,\n        passengers: []\n        });\n\n    const handleDialogClose = () => {\n        setOpen(false)\n    };\n\n    const handleCacelClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        deleteReservation(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation deleted!');\n                setConfirmedReservations(confirmedReservations.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n        \n    };\n    const handleEditClick = (cellValues: any) => {\n        setInitValues(cellValues.row)\n        setOpen(true)\n    };\n\n    const handleChange = (event:  any, newValue: string) => {\n        setValue(newValue);\n    };\n\n    const handleDriverDetails = (cellValues: any) => {\n        setDriver(cellValues.row.driver);\n        setOpenDetailDialog(true);\n    };\n\n    const onDetailDialogClose = () => {\n        setOpenDetailDialog(false);\n    };\n\n    const columns = language === 'tr' ? turksihColumns(handleEditClick, handleCacelClick, handleDriverDetails)\n                                      : engColumn(handleEditClick, handleCacelClick, handleDriverDetails);\n    const tabs = language === 'tr' ? turkishTabs : engTabs\n\n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log(data.error)\n            } else if (data.success) {\n                data.success.reservations.confirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    reservation.status = 'reservation';\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setConfirmedReservations(data.success.reservations.confirmedReservations);\n                data.success.reservations.unConfirmedReservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setUnConfirmedReservations(data.success.reservations.unConfirmedReservations);\n            } else {\n                console.log('External error')\n            }\n        })\n        return () => {\n            setConfirmedReservations([]);\n            setUnConfirmedReservations([]);\n        }\n    }, [history, open]);\n\n    \n    \n    return (\n        <>\n            <Box sx={{ width: '100%' }} className={root}>\n                <TabContext value={value}>\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                        <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n                            {tabs.map(({label, value}, idx) => (\n                                <Tab key={idx} label={label} value={value} />\n                            ))}\n                        </TabList>\n                    </Box>\n                    <TabPanel value=\"1\" style={{ width: '100%' }}><DataTable rows={confirmedReservations} columns={columns} /></TabPanel>\n                    <TabPanel value=\"2\" style={{ width: '100%' }}><DataTable rows={unConfirmedReservations} columns={columns} /></TabPanel>\n                </TabContext>\n                <CustomDialog open={openDetailDialog} onClose={onDetailDialogClose} style='updateReservation'>\n                    <DriverDetail driver={driver}/>\n                </CustomDialog>\n            </Box>\n        </>\n    )\n}\n\nexport default ListReservations;"]},"metadata":{},"sourceType":"module"}