{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx\",\n    _s = $RefreshSig$();\n\n// import { useState } from 'react';  \n// import useStyles from './useStyles';\n// import { Link } from 'react-router-dom';\n// import { Tabs, Tab, Box, Menu, MenuItem } from '@material-ui/core';\n// import { useLanguage } from '../../../context/useLanguageContext';\n// function AgencyHeader(): JSX.Element {\n//     const classes = useStyles();\n//     const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n//     const [open, setOpen] = useState<boolean>(false);\n//     const { language } = useLanguage();\n//     const options = [\n//         { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', to: 'drivers' },\n//         { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', to: 'add-driver' }\n//     ];\n//     let tabs = [];\n//     const handleClose = () => {\n//         setAnchorEl(null);\n//         setOpen(false)\n//       };\n//     const handleClick = (event: any) => {\n//         setAnchorEl(event.currentTarget);\n//         setOpen(!open)\n//     }\n//     const AgencyTabsDictionary = {\n//         englishTabs : [\n//             { label: 'add client', to: '/add-client' },\n//             { label: 'reservations', to: '/agency-reservation' },\n//             { label: 'payments', to: '/agency-payment' },\n//             { label: 'dirvers', to: '', handleClick: handleClick}\n//         ],\n//         turkishTabs : [\n//             { label: 'müşteri ekle ', to: '/add-client' },\n//             { label: 'rezervasyonlar', to: '/agency-reservation' },\n//             { label: 'finans', to: '/agency-payment' },\n//             { label: 'sürücüler', to: '', handleClick: handleClick}\n//         ]\n//       };\n//     const { englishTabs,  turkishTabs } = AgencyTabsDictionary;\n//     function tabFormation() {\n//         if (language === 'tr') tabs = turkishTabs;\n//         else tabs = englishTabs;\n//         return tabs.map(({ label, to, handleClick }, idx) => (\n//             <Tab\n//                 key={idx}\n//                 label={label}\n//                 component={Link}\n//                 to={to}\n//                 onClick={handleClick}\n//                 className={classes.tabs}\n//             />\n//         ));\n//     };\n//     return (\n//         <Box className={classes.root}>\n//             <Tabs\n//                 aria-label=\"wrapped label tabs example\"\n//                 TabIndicatorProps={{\n//                     style: {\n//                         display: \"none\",\n//                     },\n//                 }}\n//             >\n//                 {tabFormation()}\n//             </Tabs>\n//             <Menu\n//                 id=\"lock-menu\"\n//                 anchorEl={anchorEl}\n//                 open={open}\n//                 onClose={handleClose}\n//                 classes={{ paper: classes.menu }}\n//                 MenuListProps={{\n//                 'aria-labelledby': 'lock-button',\n//                 role: 'listbox',\n//                 }}\n//             >\n//                 {options.map(({label, to}, idx) => (\n//                 <MenuItem\n//                     key={idx}\n//                     component={Link}\n//                     to={to}\n//                 >\n//                 {label}\n//                 </MenuItem>\n//             ))}\n//       </Menu>\n//         </Box>\n//     )\n// }\n// export default AgencyHeader;\nimport { useState } from 'react';\nimport useStyles from './useStyles';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Box, Menu, MenuItem } from '@material-ui/core';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgencyHeader() {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [anchorCleitnEl, setAnchorCleitnEl] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [openClient, setOpenClient] = useState(false);\n  const {\n    language\n  } = useLanguage(); // const options = [\n  //     { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', to: 'drivers' },\n  //     { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', to: 'add-driver' }\n  // ];\n\n  let tabs = [];\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setOpen(false);\n  };\n\n  const handleClientClose = () => {\n    setAnchorCleitnEl(null);\n    setOpenClient(false);\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n    setOpen(!open);\n  };\n\n  const handleClientClick = event => {\n    setAnchorCleitnEl(event.currentTarget);\n    setOpenClient(!openClient);\n  };\n\n  const AgencyTabsDictionary = {\n    englishTabs: [{\n      label: 'clients ',\n      to: '',\n      handleClick: handleClientClick\n    }, {\n      label: 'reservations',\n      to: '/agency-reservation'\n    }, {\n      label: 'payments',\n      to: '/agency-payment'\n    }, {\n      label: 'dirvers',\n      to: '',\n      handleClick: handleClick\n    }],\n    turkishTabs: [{\n      label: 'müşteriler ',\n      to: '',\n      handleClick: handleClientClick\n    }, {\n      label: 'rezervasyonlar',\n      to: '/agency-reservation'\n    }, {\n      label: 'finans',\n      to: '/agency-payment'\n    }, {\n      label: 'sürücüler',\n      to: '',\n      handleClick: handleClick\n    }]\n  };\n  const menus = [{\n    anchorEl: anchorEl,\n    open: open,\n    onClose: handleClose,\n    options: [{\n      label: language === 'eng' ? 'All Drivers' : 'Sürücüler',\n      to: 'drivers'\n    }, {\n      label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle',\n      to: 'add-driver'\n    }]\n  }, {\n    anchorEl: anchorCleitnEl,\n    open: openClient,\n    onClose: handleClientClose,\n    options: [{\n      label: language === 'eng' ? 'All Clients' : 'Sürücüler',\n      to: 'list-clients'\n    }, {\n      label: language === 'eng' ? 'Add Client' : 'Sürücü Ekle',\n      to: 'add-client'\n    }]\n  }];\n  const {\n    englishTabs,\n    turkishTabs\n  } = AgencyTabsDictionary;\n\n  function tabFormation() {\n    if (language === 'tr') tabs = turkishTabs;else tabs = englishTabs;\n    return tabs.map((_ref, idx) => {\n      let {\n        label,\n        to,\n        handleClick\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Tab, {\n        label: label,\n        component: Link,\n        to: to,\n        onClick: handleClick,\n        className: classes.tabs\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      \"aria-label\": \"wrapped label tabs example\",\n      TabIndicatorProps: {\n        style: {\n          display: \"none\"\n        }\n      },\n      children: tabFormation()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), menus.map(_ref2 => {\n      let {\n        anchorEl,\n        open,\n        onClose,\n        options\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"lock-menu\",\n          anchorEl: anchorEl,\n          open: open,\n          onClose: onClose,\n          classes: {\n            paper: classes.menu\n          },\n          MenuListProps: {\n            'aria-labelledby': 'lock-button',\n            role: 'listbox'\n          },\n          children: options.map((_ref3, idx) => {\n            let {\n              label,\n              to\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              component: Link,\n              to: to,\n              children: label\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AgencyHeader, \"WGmHa6JDLdas5WygYA3IVc8FUtU=\", false, function () {\n  return [useStyles, useLanguage];\n});\n\n_c = AgencyHeader;\nexport default AgencyHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyHeader\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/AgencyHeader/AgencyHeader.tsx"],"names":["useState","useStyles","Link","Tabs","Tab","Box","Menu","MenuItem","useLanguage","AgencyHeader","classes","anchorEl","setAnchorEl","anchorCleitnEl","setAnchorCleitnEl","open","setOpen","openClient","setOpenClient","language","tabs","handleClose","handleClientClose","handleClick","event","currentTarget","handleClientClick","AgencyTabsDictionary","englishTabs","label","to","turkishTabs","menus","onClose","options","tabFormation","map","idx","root","style","display","paper","menu","role"],"mappings":"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","sourcesContent":["// import { useState } from 'react';  \n// import useStyles from './useStyles';\n// import { Link } from 'react-router-dom';\n// import { Tabs, Tab, Box, Menu, MenuItem } from '@material-ui/core';\n// import { useLanguage } from '../../../context/useLanguageContext';\n\n// function AgencyHeader(): JSX.Element {\n//     const classes = useStyles();\n//     const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n//     const [open, setOpen] = useState<boolean>(false);\n\n//     const { language } = useLanguage();\n\n//     const options = [\n//         { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', to: 'drivers' },\n//         { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', to: 'add-driver' }\n//     ];\n\n//     let tabs = [];\n\n//     const handleClose = () => {\n//         setAnchorEl(null);\n//         setOpen(false)\n//       };\n\n//     const handleClick = (event: any) => {\n//         setAnchorEl(event.currentTarget);\n//         setOpen(!open)\n//     }\n\n//     const AgencyTabsDictionary = {\n//         englishTabs : [\n//             { label: 'add client', to: '/add-client' },\n//             { label: 'reservations', to: '/agency-reservation' },\n//             { label: 'payments', to: '/agency-payment' },\n//             { label: 'dirvers', to: '', handleClick: handleClick}\n//         ],\n//         turkishTabs : [\n//             { label: 'müşteri ekle ', to: '/add-client' },\n//             { label: 'rezervasyonlar', to: '/agency-reservation' },\n//             { label: 'finans', to: '/agency-payment' },\n//             { label: 'sürücüler', to: '', handleClick: handleClick}\n//         ]\n//       };\n\n//     const { englishTabs,  turkishTabs } = AgencyTabsDictionary;\n    \n//     function tabFormation() {\n//         if (language === 'tr') tabs = turkishTabs;\n//         else tabs = englishTabs;\n//         return tabs.map(({ label, to, handleClick }, idx) => (\n//             <Tab\n//                 key={idx}\n//                 label={label}\n//                 component={Link}\n//                 to={to}\n//                 onClick={handleClick}\n//                 className={classes.tabs}\n//             />\n//         ));\n//     };\n\n//     return (\n//         <Box className={classes.root}>\n//             <Tabs\n//                 aria-label=\"wrapped label tabs example\"\n//                 TabIndicatorProps={{\n//                     style: {\n//                         display: \"none\",\n//                     },\n//                 }}\n//             >\n//                 {tabFormation()}\n//             </Tabs>\n//             <Menu\n//                 id=\"lock-menu\"\n//                 anchorEl={anchorEl}\n//                 open={open}\n//                 onClose={handleClose}\n//                 classes={{ paper: classes.menu }}\n//                 MenuListProps={{\n//                 'aria-labelledby': 'lock-button',\n//                 role: 'listbox',\n//                 }}\n//             >\n//                 {options.map(({label, to}, idx) => (\n//                 <MenuItem\n//                     key={idx}\n//                     component={Link}\n//                     to={to}\n//                 >\n//                 {label}\n//                 </MenuItem>\n//             ))}\n//       </Menu>\n//         </Box>\n//     )\n// }\n\n// export default AgencyHeader;\n\nimport { useState } from 'react';  \nimport useStyles from './useStyles';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Box, Menu, MenuItem } from '@material-ui/core';\nimport { useLanguage } from '../../../context/useLanguageContext';\n\nfunction AgencyHeader(): JSX.Element {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const [anchorCleitnEl, setAnchorCleitnEl] = useState<null | HTMLElement>(null);\n    const [open, setOpen] = useState<boolean>(false);\n    const [openClient, setOpenClient] = useState<boolean>(false);\n    \n    const { language } = useLanguage();\n\n    // const options = [\n    //     { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', to: 'drivers' },\n    //     { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', to: 'add-driver' }\n    // ];\n\n    let tabs = [];\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setOpen(false)\n    };\n\n    const handleClientClose = () => {\n        setAnchorCleitnEl(null);\n        setOpenClient(false);\n    };\n\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n        setOpen(!open)\n    };\n\n    const handleClientClick = (event: any) => {\n        setAnchorCleitnEl(event.currentTarget);\n        setOpenClient(!openClient)\n    };\n\n    const AgencyTabsDictionary = {\n        englishTabs : [\n            { label: 'clients ', to: '', handleClick: handleClientClick },\n            { label: 'reservations', to: '/agency-reservation' },\n            { label: 'payments', to: '/agency-payment' },\n            { label: 'dirvers', to: '', handleClick: handleClick }\n        ],\n        turkishTabs : [\n            { label: 'müşteriler ', to: '', handleClick: handleClientClick },\n            { label: 'rezervasyonlar', to: '/agency-reservation' },\n            { label: 'finans', to: '/agency-payment' },\n            { label: 'sürücüler', to: '', handleClick: handleClick}\n        ]\n      };\n\n    const menus = [\n        {\n            anchorEl: anchorEl, open: open, onClose: handleClose, \n            options: [\n                { label: language === 'eng' ? 'All Drivers' : 'Sürücüler', to: 'drivers' },\n                { label: language === 'eng' ? 'Add Driver' : 'Sürücü Ekle', to: 'add-driver' }\n            ]\n        },\n        {\n            anchorEl: anchorCleitnEl, open: openClient, onClose: handleClientClose, \n            options: [\n                { label: language === 'eng' ? 'All Clients' : 'Sürücüler', to: 'list-clients' },\n                { label: language === 'eng' ? 'Add Client' : 'Sürücü Ekle', to: 'add-client' }\n            ],\n        }  \n    ];\n\n    const { englishTabs,  turkishTabs } = AgencyTabsDictionary;\n    \n    function tabFormation() {\n        if (language === 'tr') tabs = turkishTabs;\n        else tabs = englishTabs;\n        return tabs.map(({ label, to, handleClick }, idx) => (\n            <Tab\n                key={idx}\n                label={label}\n                component={Link}\n                to={to}\n                onClick={handleClick}\n                className={classes.tabs}\n            />\n        ));\n    };\n\n    return (\n        <Box className={classes.root}>\n            <Tabs\n                aria-label=\"wrapped label tabs example\"\n                TabIndicatorProps={{\n                    style: {\n                        display: \"none\",\n                    },\n                }}\n            >\n                {tabFormation()}\n            </Tabs>\n            {\n                menus.map(({ anchorEl, open, onClose, options }) => (\n                    <>\n                        <Menu\n                            id=\"lock-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={onClose}\n                            classes={{ paper: classes.menu }}\n                            MenuListProps={{\n                            'aria-labelledby': 'lock-button',\n                            role: 'listbox',\n                            }}\n                        >\n                            {options.map(({label, to}, idx) => (\n                            <MenuItem\n                                key={idx}\n                                component={Link}\n                                to={to}\n                            >\n                                {label}\n                            </MenuItem>\n                            ))}\n                        </Menu>\n                    </>\n                ))\n            }\n        </Box>\n    )\n}\n\nexport default AgencyHeader;"]},"metadata":{},"sourceType":"module"}