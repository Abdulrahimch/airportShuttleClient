{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx\",\n    _s = $RefreshSig$();\n\nimport DataTable from \"../../components/DataTable/DataTable\";\nimport { Box } from '@material-ui/core';\nimport { clientPaymentDictionary } from '../../utils/dictionary';\nimport { useLanguage } from \"../../context/useLanguageContext\";\nimport { getmyPayments } from \"../../helpers/APICalls/agencyPayment\";\nconst {\n  engColumns,\n  turksihColumns\n} = clientPaymentDictionary;\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rows = [{\n  id: '123456',\n  date: '2021-01-01',\n  time: '10:00',\n  type: 'cash',\n  note: 'Abdulrahim paid me all his debt',\n  paid: 50,\n  currency: 'Euro',\n  debt: 0\n}];\n\nfunction ClientPayment() {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  useEffect(() => {\n    getmyPayments().then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        updateSnackBarMessage('reservation has been created successfully');\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: language === 'tr' ? turksihColumns : engColumns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ClientPayment, \"x8rRVJxw0IGOPeJgn/IC2R0j7qU=\", false, function () {\n  return [useLanguage, useSnackBar];\n});\n\n_c = ClientPayment;\nexport default ClientPayment;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientPayment\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientPayment/ClientPayment.tsx"],"names":["DataTable","Box","clientPaymentDictionary","useLanguage","getmyPayments","engColumns","turksihColumns","useSnackBar","rows","id","date","time","type","note","paid","currency","debt","ClientPayment","language","updateSnackBarMessage","useEffect","then","data","error","success"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,sCAAtB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,uBAAT,QAAwC,wBAAxC;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAASC,aAAT,QAA8B,sCAA9B;AACA,MAAM;AAAEC,EAAAA,UAAF;AAAeC,EAAAA;AAAf,IAAkCJ,uBAAxC;AACA,SAASK,WAAT,QAA4B,kCAA5B;;AAEA,MAAMC,IAAI,GAAG,CACG;AAACC,EAAAA,EAAE,EAAE,QAAL;AAAeC,EAAAA,IAAI,EAAE,YAArB;AAAmCC,EAAAA,IAAI,EAAE,OAAzC;AAAkDC,EAAAA,IAAI,EAAE,MAAxD;AAAgEC,EAAAA,IAAI,EAAE,iCAAtE;AAAyGC,EAAAA,IAAI,EAAE,EAA/G;AAAmHC,EAAAA,QAAQ,EAAE,MAA7H;AAAqIC,EAAAA,IAAI,EAAE;AAA3I,CADH,CAAb;;AAIA,SAASC,aAAT,GAAsC;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAef,WAAW,EAAhC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAA4BZ,WAAW,EAA7C;AACAa,EAAAA,SAAS,CAAC,MAAM;AACZhB,IAAAA,aAAa,GAAGiB,IAAhB,CAAsBC,IAAD,IAAU;AAC3B,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXJ,QAAAA,qBAAqB,CAACG,IAAI,CAACC,KAAN,CAArB;AACH,OAFD,MAEO,IAAID,IAAI,CAACE,OAAT,EAAiB;AACpBL,QAAAA,qBAAqB,CAAC,2CAAD,CAArB;AACH,OAFM,MAEA;AACHA,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KARD;AASH,GAVQ,CAAT;AAWA,sBACI,QAAC,GAAD;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEX,IAAjB;AAAuB,MAAA,OAAO,EAAEU,QAAQ,KAAK,IAAb,GAAoBZ,cAApB,GAAqCD;AAArE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnBQY,a;UACgBd,W,EACaI,W;;;KAF7BU,a;AAqBT,eAAeA,aAAf","sourcesContent":["import DataTable from \"../../components/DataTable/DataTable\";\nimport { Box } from '@material-ui/core';\nimport { clientPaymentDictionary } from '../../utils/dictionary';\nimport { useLanguage } from \"../../context/useLanguageContext\";\nimport { getmyPayments } from \"../../helpers/APICalls/agencyPayment\";\nconst { engColumns,  turksihColumns } = clientPaymentDictionary;\nimport { useSnackBar } from \"../../context/useSnackbarContext\";\n\nconst rows = [\n                {id: '123456', date: '2021-01-01', time: '10:00', type: 'cash', note: 'Abdulrahim paid me all his debt', paid: 50, currency: 'Euro', debt: 0 }\n             ];\n\nfunction ClientPayment(): JSX.Element {\n    const { language } = useLanguage();\n    const { updateSnackBarMessage } = useSnackBar();\n    useEffect(() => {\n        getmyPayments().then((data) => {\n            if (data.error){\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                updateSnackBarMessage('reservation has been created successfully');\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n    })\n    return (\n        <Box>\n            <DataTable rows={rows} columns={language === 'tr' ? turksihColumns : engColumns} />\n        </Box>\n    )\n}\n\nexport default ClientPayment;"]},"metadata":{},"sourceType":"module"}