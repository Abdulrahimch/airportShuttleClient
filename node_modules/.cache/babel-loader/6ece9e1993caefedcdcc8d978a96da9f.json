{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx\",\n    _s = $RefreshSig$();\n\nimport DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport { useEffect, useState } from 'react';\nimport ListPayments from './ListPayments/ListPayments';\nimport { IconButton, AppBar, Toolbar, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AgencyPayments() {\n  _s();\n\n  const {\n    language\n  } = useLanguage();\n  const [openAddPayment, setOpenAddPayment] = useState(false);\n  const [openAllPayments, setOpenAllPayments] = useState(false);\n  const [details, setDetails] = useState(false);\n  const [rows, setRows] = useState([]);\n  const [clientId, setClientId] = useState('');\n\n  const handleAddPaymentClick = cellValues => {\n    setClientId(cellValues.row._id);\n    setOpenAddPayment(true);\n  };\n\n  const handleAddPaymentClose = () => {\n    setOpenAddPayment(false);\n  };\n\n  const handleAllPaymentsClick = cellValues => {\n    setClientId(cellValues.row._id);\n    setOpenAllPayments(true);\n  };\n\n  const handleAllPaymentsClose = () => {\n    setOpenAllPayments(false);\n  };\n\n  const handleDetailsClick = () => {\n    setDetails(true);\n  };\n\n  const handleDetailsClose = () => {\n    setDetails(false);\n  };\n\n  const columns = language === 'eng' ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n  useEffect(() => {\n    getClients().then(data => {\n      if (data.error) {\n        console.log('data error');\n      } else if (data.success) {\n        data.success.clients.map((client, idx) => {\n          client.id = idx + 1;\n        });\n        setRows(data.success.clients);\n      } else {\n        console.log('external error');\n      }\n    });\n  }, [openAddPayment]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAddPayment,\n      onClose: handleAddPaymentClose,\n      style: 'addPayment',\n      children: /*#__PURE__*/_jsxDEV(AddPayment, {\n        clientId: clientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: openAllPayments,\n      onClose: handleAllPaymentsClose,\n      style: 'addPayment',\n      isFullScreen: true,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: handleAllPaymentsClose,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: \"All Payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListPayments, {\n        clientId: clientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AgencyPayments, \"+DMdWJIF8l0lnLa88vc8PrrmTxQ=\", false, function () {\n  return [useLanguage];\n});\n\n_c = AgencyPayments;\nexport default AgencyPayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgencyPayments\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/AgencyPayments.tsx"],"names":["DataTable","useLanguage","CustomDialog","AddPayment","getClients","CloseIcon","agencyPaymentEngColumns","agencyPaymentTurkishColumns","useEffect","useState","ListPayments","IconButton","AppBar","Toolbar","Typography","AgencyPayments","language","openAddPayment","setOpenAddPayment","openAllPayments","setOpenAllPayments","details","setDetails","rows","setRows","clientId","setClientId","handleAddPaymentClick","cellValues","row","_id","handleAddPaymentClose","handleAllPaymentsClick","handleAllPaymentsClose","handleDetailsClick","handleDetailsClose","columns","then","data","error","console","log","success","clients","map","client","idx","id"],"mappings":"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","sourcesContent":["import DataTable from '../../../components/DataTable/DataTable';\nimport { useLanguage } from '../../../context/useLanguageContext';\nimport CustomDialog from '../../../components/CustomDialog/CustomDialog';\nimport AddPayment from './AddPayment/AddPayment';\nimport { getClients } from '../../../helpers/APICalls/user';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { agencyPaymentEngColumns, agencyPaymentTurkishColumns } from '../../../utils/dictionary';\nimport { useEffect, useState } from 'react';\nimport ListPayments from './ListPayments/ListPayments';\nimport { IconButton, AppBar, Toolbar, Button, Typography } from '@material-ui/core';\n\nfunction AgencyPayments(): JSX.Element {\n    const { language } = useLanguage();\n\n    const [openAddPayment, setOpenAddPayment] = useState<boolean>(false);\n    const [openAllPayments, setOpenAllPayments] = useState<boolean>(false);\n    const [details, setDetails] = useState<boolean>(false);\n\n    const [rows, setRows] = useState<any>([]);\n    const [clientId, setClientId] = useState<string>('');\n\n    const handleAddPaymentClick = (cellValues: any) => {\n        setClientId(cellValues.row._id)\n        setOpenAddPayment(true)\n    };\n\n    const handleAddPaymentClose = () => {\n        setOpenAddPayment(false)\n    }\n\n    const handleAllPaymentsClick = (cellValues: any) => {\n        setClientId(cellValues.row._id)\n        setOpenAllPayments(true)\n    };\n\n    const handleAllPaymentsClose = () => {\n        setOpenAllPayments(false)\n    };\n\n    const handleDetailsClick = () => {\n        setDetails(true)\n    };\n\n    const handleDetailsClose = () => {\n        setDetails(false)\n    };\n\n    const columns = language === 'eng'  \n                                    ? agencyPaymentEngColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick) \n                                    : agencyPaymentTurkishColumns(handleAddPaymentClick, handleAllPaymentsClick, handleDetailsClick);\n    \n    useEffect(() => {\n        getClients().then((data) => {\n            if (data.error) {\n                console.log('data error')\n            } else if (data.success) {\n                data.success.clients.map((client, idx) => {\n                    client.id = idx + 1;\n                })\n                setRows(data.success.clients);\n            } else {\n                console.log('external error')\n            }\n        });\n    }, [openAddPayment])\n    \n    return (\n        <>\n            <DataTable rows={rows} columns={columns} />\n            <CustomDialog \n                open={openAddPayment} \n                onClose={handleAddPaymentClose}\n                style={'addPayment'}\n            >\n                <AddPayment clientId={clientId}/>\n            </CustomDialog>\n            <CustomDialog \n                open={openAllPayments} \n                onClose={handleAllPaymentsClose}\n                style={'addPayment'}\n                isFullScreen={true}\n            >\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={handleAllPaymentsClose}\n                        aria-label=\"close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\">\n                            All Payments\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <ListPayments clientId={clientId}/>\n            </CustomDialog>\n        </>\n        \n    )\n}\n\nexport default AgencyPayments;"]},"metadata":{},"sourceType":"module"}