{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, List, Typography, ListItem, ListItemAvatar, Avatar, ListItemText, Divider } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport clsx from 'clsx';\nimport CustomButton from '../../../../components/Button/CustomButton';\nimport { updateReservation } from '../../../../helpers/APICalls/agencyReservation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignDriver = _ref => {\n  _s();\n\n  let {\n    reservation\n  } = _ref;\n  const {\n    root,\n    listItem\n  } = useStyles();\n  const selected = clsx(listItem, 'selected');\n  const [value, setValue] = useState();\n  const [drivers, setDrivers] = useState([]);\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  useEffect(() => {\n    getDrivers().then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        setDrivers(data.success.drivers);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n    return () => {\n      setDrivers([]);\n    };\n  }, []);\n\n  const handleSubmit = () => {\n    if (value === undefined) {\n      updateSnackBarMessage('Please select a driver');\n      return;\n    }\n\n    ;\n    const id = reservation._id;\n    const inputs = {\n      confirmed: true,\n      driver: value\n    };\n    updateReservation(inputs, id).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        updateSnackBarMessage('reservation has been confirmed successfully!');\n        setRows(rows.map(row => row.id === reservation.id ? { ...row,\n          ...reservation\n        } : row));\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: root,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Please Select Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          style: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: 'background.paper'\n          },\n          children: drivers.map((driver, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              alignItems: \"flex-start\",\n              className: value !== driver._id ? listItem : selected,\n              onClick: () => {\n                setValue(driver._id);\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: `${driver.firstName} ${driver.lastName}`,\n                  src: \"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${driver.firstName} ${driver.lastName}`,\n                secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    style: {\n                      display: 'inline'\n                    },\n                    component: \"span\",\n                    variant: \"body2\",\n                    children: [`Car N0: ${driver.carNumber}`, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 85\n                    }, this), \" \", `Cep: ${driver.phoneNumber}`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              variant: \"inset\",\n              component: \"li\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justifyContent: \"space-evenly\",\n        style: {\n          marginTop: '2em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          btnText: \"Submit\",\n          style: \"dialogSubmit\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          btnText: \"Cancel\",\n          style: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignDriver, \"9VczTL0W4RFWzp+DTMfroiu8jF4=\", false, function () {\n  return [useStyles, useSnackBar];\n});\n\n_c = AssignDriver;\nexport default AssignDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignDriver\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx"],"names":["Grid","List","Typography","ListItem","ListItemAvatar","Avatar","ListItemText","Divider","useEffect","useState","getDrivers","useStyles","useSnackBar","clsx","CustomButton","updateReservation","AssignDriver","reservation","root","listItem","selected","value","setValue","drivers","setDrivers","updateSnackBarMessage","then","data","error","success","handleSubmit","undefined","id","_id","inputs","confirmed","driver","setRows","rows","map","row","width","maxWidth","backgroundColor","idx","firstName","lastName","display","carNumber","phoneNumber","marginTop"],"mappings":"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","sourcesContent":["import { Grid, List, Typography, ListItem, ListItemAvatar, Avatar, ListItemText, Divider, Select } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';  \nimport { Driver } from '../../../../interface/Driver';\nimport clsx from 'clsx';\nimport CustomButton from '../../../../components/Button/CustomButton';\nimport { updateReservation } from '../../../../helpers/APICalls/agencyReservation';\n\ninterface Props {\n    reservation: any;\n}\n\nconst AssignDriver = ({ reservation }: Props): JSX.Element => {\n    const { root, listItem } = useStyles();\n    const selected = clsx(listItem, 'selected');\n\n    const [value, setValue] = useState<string | undefined>();\n    const [drivers, setDrivers] = useState<Driver []>([]);\n\n    const { updateSnackBarMessage } = useSnackBar();\n\n    useEffect(() => {\n        getDrivers().then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                setDrivers(data.success.drivers);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n        return () => {\n            setDrivers([]);\n        }\n    }, []);\n\n    const handleSubmit = () => {\n        if (value === undefined) {\n            updateSnackBarMessage('Please select a driver');\n            return\n        };\n        const id = reservation._id;\n        const inputs = { confirmed: true, driver: value };\n        updateReservation(inputs, id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation has been confirmed successfully!');\n                setRows(rows.map(row => row.id === reservation.id ? {...row, ...reservation} : row));\n                \n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n    }\n\n    return (\n        <>\n            <Grid container direction=\"column\" className={root} >\n                <Grid item>\n                    <Typography>\n                        Please Select Driver\n                    </Typography>\n                        <List style={{ width: '100%', maxWidth: 360, backgroundColor: 'background.paper' }}>\n                            {drivers.map((driver, idx) => (\n                                <>\n                                    <ListItem alignItems=\"flex-start\" className={value !== driver._id ? listItem : selected} onClick={() => {setValue(driver._id)}}>\n                                        <ListItemAvatar>\n                                            <Avatar alt={`${driver.firstName} ${driver.lastName}`} src=\"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\" />\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${driver.firstName} ${driver.lastName}`}\n                                            secondary={\n                                                <>\n                                                <Typography\n                                                    style={{ display: 'inline' }}\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                >\n                                                    {`Car N0: ${driver.carNumber}`} <br /> {`Cep: ${driver.phoneNumber}`}\n                                                </Typography>\n                                                \n                                                </>\n                                            }\n                                        />\n                                    </ListItem>\n                                    <Divider variant=\"inset\" component=\"li\" />\n                                </>\n                            ))}\n                        </List>\n                </Grid>\n                <Grid item container justifyContent='space-evenly' style={{ marginTop: '2em' }}>\n                    <CustomButton btnText=\"Submit\" style='dialogSubmit' onClick={handleSubmit} />\n                    <CustomButton btnText=\"Cancel\" style='cancel' />\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AssignDriver;"]},"metadata":{},"sourceType":"module"}