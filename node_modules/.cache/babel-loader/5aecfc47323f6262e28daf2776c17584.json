{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, List, Typography, ListItem, Button, ListItemAvatar, Avatar, ListItemText, Divider } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignDriver = () => {\n  _s();\n\n  const {\n    root,\n    select\n  } = useStyles();\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n  const [value, setValue] = useState('1');\n  const [drivers, setDrivers] = useState([]);\n  useEffect(() => {\n    getDrivers().then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        console.log(data.success.drivers);\n        setDrivers(data.success.drivers);\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n    return () => {\n      setDrivers([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: root,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Please Select Driver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          style: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: 'background.paper'\n          },\n          children: [drivers.map((driver, idx) => /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            onClick: () => {\n              driver._id ? setValue(driver._id) : null;\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: `${driver.firstName} ${driver.lastName}`,\n                src: \"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: `${driver.firstName} ${driver.lastName}`,\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    display: 'inline'\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  children: \"Ali Connors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 45\n                }, this), \" — I'll be in your neighborhood doing errands this…\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            onClick: () => {\n              setValue('2');\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: \"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Brunch this weekend?\",\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    display: 'inline'\n                  },\n                  component: \"span\",\n                  variant: \"body2\",\n                  children: \"Ali Connors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 45\n                }, this), \" — I'll be in your neighborhood doing errands this…\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            console.log(value);\n          },\n          children: \"click me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignDriver, \"KeHjzjwj1fb+ccYe9ZHktEcN+aU=\", false, function () {\n  return [useStyles, useSnackBar];\n});\n\n_c = AssignDriver;\nexport default AssignDriver;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignDriver\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Drivers/AssignDriver/AssignDriver.tsx"],"names":["Grid","List","Typography","ListItem","Button","ListItemAvatar","Avatar","ListItemText","Divider","useEffect","useState","getDrivers","useStyles","useSnackBar","AssignDriver","root","select","updateSnackBarMessage","value","setValue","drivers","setDrivers","then","data","error","success","console","log","width","maxWidth","backgroundColor","map","driver","idx","_id","firstName","lastName","display"],"mappings":"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","sourcesContent":["import { Grid, List, Typography, ListItem, Button, ListItemAvatar, Avatar, ListItemText, Divider, Select } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { getDrivers } from '../../../../helpers/APICalls/driver';\nimport useStyles from './useStyles';\nimport { useSnackBar } from '../../../../context/useSnackbarContext';  \nimport { Driver } from '../../../../interface/Driver';\n\nconst AssignDriver = (): JSX.Element => {\n    const { root, select } = useStyles();\n    const { updateSnackBarMessage } = useSnackBar();\n    const [value, setValue] = useState<string>('1');\n    const [drivers, setDrivers] = useState<Driver []>([])\n\n    useEffect(() => {\n        getDrivers().then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success){\n                console.log(data.success.drivers);\n                setDrivers(data.success.drivers);\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        });\n        return () => {\n            setDrivers([]);\n        }\n    }, []);\n\n    return (\n        <>\n            <Grid container direction=\"column\" className={root} >\n                <Grid item>\n                    <Typography>\n                        Please Select Driver\n                    </Typography>\n                        <List style={{ width: '100%', maxWidth: 360, backgroundColor: 'background.paper' }}>\n                            {drivers.map((driver, idx) => (\n                                <ListItem alignItems=\"flex-start\" onClick={() => { driver._id ? setValue(driver._id) : null }}>\n                                    <ListItemAvatar>\n                                        <Avatar alt={`${driver.firstName} ${driver.lastName}`} src=\"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\" />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={`${driver.firstName} ${driver.lastName}`}\n                                        secondary={\n                                            <>\n                                            <Typography\n                                                style={{ display: 'inline' }}\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                            >\n                                                Ali Connors\n                                            </Typography>\n                                            {\" — I'll be in your neighborhood doing errands this…\"}\n                                            </>\n                                            }\n                                            />\n                                </ListItem>\n                            ))}\n                        <Divider variant=\"inset\" component=\"li\" />\n                            <ListItem alignItems=\"flex-start\" onClick={() => {setValue('2')}}>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"Remy Sharp\" src=\"https://airportshuttle0.s3.amazonaws.com/defaultAvatar.png\" />\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary=\"Brunch this weekend?\"\n                                        secondary={\n                                            <>\n                                            <Typography\n                                                style={{ display: 'inline' }}\n                                                component=\"span\"\n                                                variant=\"body2\"\n                                            >\n                                                Ali Connors\n                                            </Typography>\n                                            {\" — I'll be in your neighborhood doing errands this…\"}\n                                            </>\n                                            }\n                                            />\n                                </ListItem>\n                            </List>\n                    <Button onClick={() => {console.log(value)}}>\n                        click me\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default AssignDriver;"]},"metadata":{},"sourceType":"module"}