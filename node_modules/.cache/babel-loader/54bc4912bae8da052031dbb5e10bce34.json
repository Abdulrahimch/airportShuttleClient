{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, InputLabel, TextField, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CustomButton from \"../../Button/CustomButton\";\nimport useStyles from './useStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = () => {\n  _s();\n\n  const {\n    root,\n    title,\n    inputs,\n    label\n  } = useStyles();\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n  const changePassword = (passwordType, event) => {\n    switch (passwordType) {\n      case 'oldPassword':\n        setOldPassword(event.target.value);\n        break;\n\n      case 'newPassword':\n        setNewPassword(event.target.value);\n        break;\n    }\n  };\n\n  const handleSubmit = () => {\n    const passwordInputs = {\n      oldPassword,\n      newPassword\n    };\n    changePassword(passwordInputs).then(data => {\n      if (data.error) {}\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: title,\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"Old Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: oldPassword,\n      onChange: event => {\n        changePassword('oldPassword', event);\n      },\n      InputProps: {\n        classes: {\n          input: inputs\n        },\n        disableUnderline: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      value: newPassword,\n      onChange: event => {\n        changePassword('newPassword', event);\n      },\n      InputProps: {\n        classes: {\n          input: inputs\n        },\n        disableUnderline: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      style: \"submit\",\n      btnText: \"Submit\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePassword, \"7qT4hVhmjo1+JbZyaHh63kIy3Ak=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx"],"names":["Box","InputLabel","TextField","Typography","useState","CustomButton","useStyles","ChangePassword","root","title","inputs","label","oldPassword","setOldPassword","newPassword","setNewPassword","changePassword","passwordType","event","target","value","handleSubmit","passwordInputs","then","data","error","classes","input","disableUnderline"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,SAA1B,EAAqCC,UAArC,QAAgE,mBAAhE;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,MAAMC,cAAc,GAAG,MAAmB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA;AAAvB,MAAiCL,SAAS,EAAhD;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMY,cAAc,GAAG,CAACC,YAAD,EAAuBC,KAAvB,KAAsC;AACzD,YAAOD,YAAP;AACI,WAAK,aAAL;AACIJ,QAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACA;;AACJ,WAAK,aAAL;AACIL,QAAAA,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACA;AANR;AAQH,GATD;;AAWA,QAAMC,YAAY,GAAG,MAAO;AACxB,UAAMC,cAAc,GAAG;AAAEV,MAAAA,WAAF;AAAeE,MAAAA;AAAf,KAAvB;AACAE,IAAAA,cAAc,CAACM,cAAD,CAAd,CAA+BC,IAA/B,CAAqCC,IAAD,IAAU;AAC1C,UAAIA,IAAI,CAACC,KAAT,EAAgB,CAEf;AACJ,KAJD;AAKH,GAPD;;AASA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEjB,IAAhB;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,SAAD;AACI,MAAA,KAAK,EAAEG,WADX;AAEI,MAAA,QAAQ,EAAGM,KAAD,IAAW;AAACF,QAAAA,cAAc,CAAC,aAAD,EAAgBE,KAAhB,CAAd;AAAqC,OAF/D;AAGI,MAAA,UAAU,EAAE;AACAQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEjB;AAAT,SADT;AAEAkB,QAAAA,gBAAgB,EAAE;AAFlB;AAHhB;AAAA;AAAA;AAAA;AAAA,YALJ,eAaI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAgBI,QAAC,SAAD;AACI,MAAA,KAAK,EAAEd,WADX;AAEI,MAAA,QAAQ,EAAGI,KAAD,IAAW;AAACF,QAAAA,cAAc,CAAC,aAAD,EAAgBE,KAAhB,CAAd;AAAqC,OAF/D;AAGI,MAAA,UAAU,EAAE;AACAQ,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEjB;AAAT,SADT;AAEAkB,QAAAA,gBAAgB,EAAE;AAFlB;AAHhB;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAwBI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAxBJ,eAyBQ,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAC,QAArC;AAA8C,MAAA,OAAO,EAAEP;AAAvD;AAAA;AAAA;AAAA;AAAA,YAzBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CArDD;;GAAMd,c;UACqCD,S;;;KADrCC,c;AAuDN,eAAeA,cAAf","sourcesContent":["import { Box, InputLabel, TextField, Typography, Divider } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CustomButton from \"../../Button/CustomButton\";\nimport useStyles from './useStyles';\nimport { changePassword } from '../../../helpers/APICalls/login';\n\nconst ChangePassword = (): JSX.Element => {\n    const { root, title, inputs, label } = useStyles();\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const changePassword = (passwordType: string, event: any) => {\n        switch(passwordType) {\n            case 'oldPassword':\n                setOldPassword(event.target.value);\n                break;\n            case 'newPassword':\n                setNewPassword(event.target.value);\n                break;\n            }\n    }\n\n    const handleSubmit = ()  => {\n        const passwordInputs = { oldPassword, newPassword };\n        changePassword(passwordInputs).then((data) => {\n            if (data.error) {\n                \n            }\n        }) \n    }\n\n    return (\n        <Box className={root}>\n            <Typography className={title}>Change Password</Typography>\n            <InputLabel>\n                Old Password\n            </InputLabel>\n            <TextField \n                value={oldPassword}\n                onChange={(event) => {changePassword('oldPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}                \n            />\n            <InputLabel>\n                New Password\n            </InputLabel>\n            <TextField \n                value={newPassword}\n                onChange={(event) => {changePassword('newPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}\n            />\n            <Box />\n                <CustomButton style='submit' btnText='Submit' onClick={handleSubmit} />\n        </Box>\n    )\n};\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}