{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, InputLabel, TextField, Typography } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CustomButton from \"../../Button/CustomButton\";\nimport useStyles from './useStyles';\nimport { changePasswordApi } from '../../../helpers/APICalls/login';\nimport { useSnackBar } from \"../../../context/useSnackbarContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = _ref => {\n  _s();\n\n  let {\n    handleDialogClose\n  } = _ref;\n  const {\n    root,\n    title,\n    inputs,\n    label\n  } = useStyles();\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n\n  const changePassword = (passwordType, event) => {\n    switch (passwordType) {\n      case 'oldPassword':\n        setOldPassword(event.target.value);\n        break;\n\n      case 'newPassword':\n        setNewPassword(event.target.value);\n        break;\n    }\n  };\n\n  const handleSubmit = () => {\n    const passwordInputs = {\n      oldPassword,\n      newPassword\n    };\n    changePasswordApi(passwordInputs).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error);\n      } else if (data.success) {\n        updateSnackBarMessage('Password has been updated successfully');\n        handleDialogClose();\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: title,\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"Old Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      value: oldPassword,\n      onChange: event => {\n        changePassword('oldPassword', event);\n      },\n      InputProps: {\n        classes: {\n          input: inputs\n        },\n        disableUnderline: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      value: newPassword,\n      onChange: event => {\n        changePassword('newPassword', event);\n      },\n      InputProps: {\n        classes: {\n          input: inputs\n        },\n        disableUnderline: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      style: \"submit\",\n      btnText: \"Submit\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePassword, \"XPgHYM2eATjJOWPZk+UPM6LJQus=\", false, function () {\n  return [useStyles, useSnackBar];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/components/Header/ChangePassword/ChangePassword.tsx"],"names":["Box","InputLabel","TextField","Typography","useState","CustomButton","useStyles","changePasswordApi","useSnackBar","ChangePassword","handleDialogClose","root","title","inputs","label","oldPassword","setOldPassword","newPassword","setNewPassword","updateSnackBarMessage","changePassword","passwordType","event","target","value","handleSubmit","passwordInputs","then","data","error","success","classes","input","disableUnderline"],"mappings":"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","sourcesContent":["import { Box, InputLabel, TextField, Typography, Divider } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport CustomButton from \"../../Button/CustomButton\";\nimport useStyles from './useStyles';\nimport { changePasswordApi } from '../../../helpers/APICalls/login';\nimport { useSnackBar } from \"../../../context/useSnackbarContext\";\n\ninterface Props {\n    handleDialogClose: () => void;\n}\n\nconst ChangePassword = ({ handleDialogClose }: Props): JSX.Element => {\n    const { root, title, inputs, label } = useStyles();\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const { updateSnackBarMessage } = useSnackBar();\n    \n    const changePassword = (passwordType: string, event: any) => {\n        switch(passwordType) {\n            case 'oldPassword':\n                setOldPassword(event.target.value);\n                break;\n            case 'newPassword':\n                setNewPassword(event.target.value);\n                break;\n            }\n    }\n\n    const handleSubmit = ()  => {\n        const passwordInputs = { oldPassword, newPassword };\n        changePasswordApi(passwordInputs).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error);\n            } else if (data.success) {\n                updateSnackBarMessage('Password has been updated successfully');\n                handleDialogClose();\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        }) \n    };\n\n    return (\n        <Box className={root}>\n            <Typography className={title}>Change Password</Typography>\n            <InputLabel>\n                Old Password\n            </InputLabel>\n            <TextField\n                type={\"password\"}                \n                value={oldPassword}\n                onChange={(event) => {changePassword('oldPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}                \n            />\n            <InputLabel>\n                New Password\n            </InputLabel>\n            <TextField\n                type=\"password\"\n                value={newPassword}\n                onChange={(event) => {changePassword('newPassword', event)}}\n                InputProps={{\n                            classes: { input: inputs },\n                            disableUnderline: true\n                }}\n            />\n            <Box />\n                <CustomButton style='submit' btnText='Submit' onClick={handleSubmit} />\n        </Box>\n    )\n};\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}