{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/NewReservation/NewReservationForm/NewReservationForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, InputLabel, TextField, Grid, Select, MenuItem } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewReservationForm() {\n  _s();\n\n  const classes = useStyles(); // const [type, setType] = useState<string>('Airport to Resort')\n\n  const airports = [{\n    value: 1,\n    name: 'Istanbul Airport'\n  }, {\n    value: 2,\n    name: 'Sabiha Airport'\n  }];\n  const resorts = [{\n    value: 1,\n    name: 'Sultan Ahmet'\n  }, {\n    value: 2,\n    name: 'Sirkeci'\n  }, {\n    value: 3,\n    name: 'Taksim'\n  }, {\n    value: 4,\n    name: 'Fatih'\n  }];\n\n  const handleSubmit = () => {\n    console.log('submitting');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: '',\n          lastName: '',\n          type: 0,\n          from: 0,\n          to: 0,\n          hotel: '',\n          pax: 1,\n          flightNo: '',\n          driverNote: ''\n        },\n        validationSchema: Yup.object().shape({\n          firstName: Yup.string().required('FirstName is required!'),\n          lastName: Yup.string().required('LastName is required!'),\n          type: Yup.string().required(),\n          from: Yup.string().required(),\n          to: Yup.string().required(),\n          hotel: Yup.string().required(),\n          flightNo: Yup.string().required(),\n          driverNote: Yup.string(),\n          noOfPpl: Yup.number().min(1).max(9)\n        }),\n        onSubmit: handleSubmit,\n        children: _ref => {\n          let {\n            handleSubmit,\n            handleChange,\n            values,\n            touched,\n            errors,\n            isSubmitting\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: classes.form,\n            noValidate: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: \"first name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"firstName\",\n                    name: \"firstName\",\n                    InputProps: {\n                      classes: {\n                        input: classes.inputs\n                      },\n                      disableUnderline: true\n                    },\n                    value: values.firstName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    className: classes.inputLabel,\n                    children: \"last name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    id: \"lastName\",\n                    name: \"lastName\",\n                    InputProps: {\n                      classes: {\n                        input: classes.inputs\n                      },\n                      disableUnderline: true\n                    },\n                    value: values.lastName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  spacing: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"type\",\n                      className: classes.inputLabel,\n                      children: \"type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"type\",\n                      name: \"type\",\n                      autoWidth: true,\n                      value: values.type,\n                      onChange: handleChange // className={classes.select}\n                      ,\n                      classes: {\n                        select: classes.select\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 0,\n                        children: \"---Select---\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 1,\n                        children: \"Airport to Resort\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 2,\n                        children: \"Resort to Airport\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"from\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"from\",\n                      name: \"from\",\n                      autoWidth: true,\n                      value: values.from,\n                      onChange: handleChange,\n                      classes: {\n                        select: classes.select\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 0,\n                        children: \"---Select---\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 45\n                      }, this), values.type === 1 ? airports.map(airport => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: airport.value,\n                        children: airport.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 49\n                      }, this)) : resorts.map(resort => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: resort.value,\n                        children: resort.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 49\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"to\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      id: \"to\",\n                      name: \"to\",\n                      autoWidth: true,\n                      value: values.to,\n                      onChange: handleChange,\n                      classes: {\n                        select: classes.select\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 0,\n                        children: \"---Select---\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 45\n                      }, this), values.type === 2 ? airports.map(airport => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: airport.value,\n                        children: airport.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 49\n                      }, this)) : resorts.map(resort => /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: resort.value,\n                        children: resort.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 49\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"hotel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"hotel\",\n                      name: \"hotel\",\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.hotel,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      className: classes.inputLabel,\n                      children: \"pax\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                      id: \"hotel\",\n                      name: \"hotel\",\n                      InputProps: {\n                        classes: {\n                          input: classes.inputs\n                        },\n                        disableUnderline: true\n                      },\n                      value: values.hotel,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(NewReservationForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NewReservationForm;\nexport default NewReservationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewReservationForm\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/NewReservation/NewReservationForm/NewReservationForm.tsx"],"names":["Box","InputLabel","TextField","Grid","Select","MenuItem","Formik","Yup","useStyles","NewReservationForm","classes","airports","value","name","resorts","handleSubmit","console","log","firstName","lastName","type","from","to","hotel","pax","flightNo","driverNote","object","shape","string","required","noOfPpl","number","min","max","handleChange","values","touched","errors","isSubmitting","form","inputLabel","input","inputs","disableUnderline","select","map","airport","resort"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Box, InputLabel, TextField, Grid, Select, MenuItem } from '@material-ui/core';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport useStyles from './useStyles';\n\nfunction NewReservationForm(): JSX.Element {\n    const classes = useStyles();\n    // const [type, setType] = useState<string>('Airport to Resort')\n    const airports = [\n                        {value: 1, name: 'Istanbul Airport'}, \n                        {value: 2, name:'Sabiha Airport'}\n                     ];\n    const resorts = [\n                        {value: 1, name: 'Sultan Ahmet'},\n                        {value: 2, name: 'Sirkeci'},\n                        {value: 3, name: 'Taksim'},\n                        {value: 4, name: 'Fatih'}\n                    ];\n\n    const handleSubmit = () => {console.log('submitting')};\n    return (\n        <>\n            <Box>\n                <Formik\n                    initialValues={{\n                        firstName: '',\n                        lastName: '',\n                        type: 0,\n                        from: 0,\n                        to: 0,\n                        hotel: '',\n                        pax: 1,\n                        flightNo: '',\n                        driverNote: ''\n                    }}\n                    validationSchema={Yup.object().shape({ \n                        firstName: Yup.string().required('FirstName is required!'),\n                        lastName: Yup.string().required('LastName is required!'),\n                        type: Yup.string().required(),\n                        from:  Yup.string().required(),\n                        to: Yup.string().required(),\n                        hotel: Yup.string().required(),\n                        flightNo: Yup.string().required(),\n                        driverNote: Yup.string(),\n                        noOfPpl: Yup.number().min(1).max(9),\n                    })}\n                    onSubmit={handleSubmit}\n                >   \n                    {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                    <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                        <Grid container direction='column'>\n                            <Grid item container spacing={2}>\n                                <Grid item>\n                                    <InputLabel className={classes.inputLabel}>\n                                        first name\n                                    </InputLabel>\n                                    <TextField \n                                        id='firstName'\n                                        name='firstName'\n                                        InputProps= {{\n                                            classes: { input: classes.inputs },\n                                            disableUnderline: true\n                                        }}\n                                        value={values.firstName}\n                                        onChange={handleChange}\n                                        \n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <InputLabel className={classes.inputLabel}>\n                                        last name\n                                    </InputLabel>\n                                    <TextField \n                                        id='lastName'\n                                        name='lastName'\n                                        InputProps= {{\n                                            classes: { input: classes.inputs },\n                                            disableUnderline: true\n                                        }}\n                                        value={values.lastName}\n                                        onChange={handleChange}\n                                    />\n                                </Grid>\n                                <Grid item container spacing={4}>\n                                    <Grid item>\n                                        <InputLabel id=\"type\" className={classes.inputLabel}>\n                                            type\n                                        </InputLabel>\n                                        <Select\n                                            id=\"type\"\n                                            name=\"type\"\n                                            autoWidth\n                                            value={values.type}\n                                            onChange={handleChange}\n                                            // className={classes.select}\n                                            classes={{ select: classes.select }}\n                                            >\n                                            <MenuItem value={0}>---Select---</MenuItem>\n                                            <MenuItem value={1}>Airport to Resort</MenuItem>\n                                            <MenuItem value={2}>Resort to Airport</MenuItem>\n                                        </Select>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            from\n                                        </InputLabel>\n                                        <Select\n                                            id=\"from\"\n                                            name=\"from\"\n                                            autoWidth\n                                            value={values.from}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                            >\n                                            <MenuItem value={0}>---Select---</MenuItem>\n                                            {values.type === 1 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            to\n                                        </InputLabel>\n                                        <Select\n                                            id=\"to\"\n                                            name=\"to\"\n                                            autoWidth\n                                            value={values.to}\n                                            onChange={handleChange}\n                                            classes={{ select: classes.select }}\n                                            >\n                                            <MenuItem value={0}>---Select---</MenuItem>\n                                            {values.type === 2 ? airports.map((airport) => (\n                                                <MenuItem value={airport.value}>{airport.name}</MenuItem>\n                                            )): resorts.map((resort) => (\n                                                <MenuItem value={resort.value}>{resort.name}</MenuItem>\n                                            ))\n                                            }\n                                        </Select>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            hotel\n                                        </InputLabel>\n                                        <TextField \n                                            id='hotel'\n                                            name='hotel'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.hotel}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                    <Grid item>\n                                        <InputLabel className={classes.inputLabel}>\n                                            pax\n                                        </InputLabel>\n                                        <TextField \n                                            id='hotel'\n                                            name='hotel'\n                                            InputProps= {{\n                                                classes: { input: classes.inputs },\n                                                disableUnderline: true\n                                            }}\n                                            value={values.hotel}\n                                            onChange={handleChange}\n                                            \n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            \n                        </Grid>\n                    </form>\n                    )}\n                </Formik>\n            </Box>\n        </>\n    )\n}\nexport default NewReservationForm;\n"]},"metadata":{},"sourceType":"module"}