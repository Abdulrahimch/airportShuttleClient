{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { agencyListPaymentEngColumns } from '../../../../utils/dictionary';\nimport { getPayments } from '../../../../helpers/APICalls/agencyPayment';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListPayments() {\n  _s();\n\n  const [rows, setRows] = useState([]);\n\n  const handleCancelClick = cellValues => {\n    const id = cellValues.row._id;\n    console.log('vakues are: ', cellValues);\n  };\n\n  const columns = agencyListPaymentEngColumns(handleCancelClick);\n  useEffect(() => {\n    getPayments().then(data => {\n      if (data.error) {\n        console.log(data.error.message);\n      } else if (data.success) {\n        data.success.payment.map((item, idx) => {\n          var _item$client, _item$client2;\n\n          item.id = idx + 1;\n          item.property = (_item$client = item.client) === null || _item$client === void 0 ? void 0 : _item$client.property;\n          item.email = (_item$client2 = item.client) === null || _item$client2 === void 0 ? void 0 : _item$client2.email;\n          const date = new Date(item.createdAt);\n          item.createdAt = format(date, \"dd-MM-yyyy kk:mm\");\n        });\n        setRows(data.success.payment);\n      } else {\n        console.log('EXternal Error!');\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    rows: rows,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListPayments, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = ListPayments;\n;\nexport default ListPayments;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPayments\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/Agency/Payments/ListPayments/ListPayments.tsx"],"names":["useEffect","useState","DataTable","agencyListPaymentEngColumns","getPayments","format","ListPayments","rows","setRows","handleCancelClick","cellValues","id","row","_id","console","log","columns","then","data","error","message","success","payment","map","item","idx","property","client","email","date","Date","createdAt"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,SAASC,2BAAT,QAA4C,8BAA5C;AACA,SAASC,WAAT,QAA4B,4CAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAGA,SAASC,YAAT,GAAqC;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAM,EAAN,CAAhC;;AAEA,QAAMQ,iBAAiB,GAAIC,UAAD,IAAqB;AAC3C,UAAMC,EAAE,GAAGD,UAAU,CAACE,GAAX,CAAeC,GAA1B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,UAA5B;AACH,GAJD;;AAKA,QAAMM,OAAO,GAAGb,2BAA2B,CAACM,iBAAD,CAA3C;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW,GAAGa,IAAd,CAAoBC,IAAD,IAAU;AACzB,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,KAAL,CAAWC,OAAvB;AACH,OAFD,MAEO,IAAIF,IAAI,CAACG,OAAT,EAAkB;AACrBH,QAAAA,IAAI,CAACG,OAAL,CAAaC,OAAb,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAAA;;AACpCD,UAAAA,IAAI,CAACb,EAAL,GAAUc,GAAG,GAAG,CAAhB;AACAD,UAAAA,IAAI,CAACE,QAAL,mBAAgBF,IAAI,CAACG,MAArB,iDAAgB,aAAaD,QAA7B;AACAF,UAAAA,IAAI,CAACI,KAAL,oBAAaJ,IAAI,CAACG,MAAlB,kDAAa,cAAaC,KAA1B;AACA,gBAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASN,IAAI,CAACO,SAAd,CAAb;AACAP,UAAAA,IAAI,CAACO,SAAL,GAAiB1B,MAAM,CAACwB,IAAD,EAAO,kBAAP,CAAvB;AACH,SAND;AAOArB,QAAAA,OAAO,CAACU,IAAI,CAACG,OAAL,CAAaC,OAAd,CAAP;AACH,OATM,MASA;AACHR,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ,KAfD;AAgBC,GAjBI,EAiBF,EAjBE,CAAT;AAkBA,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,EAAER,IAAjB;AAAuB,IAAA,OAAO,EAAES;AAAhC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA9BQV,Y;;KAAAA,Y;AA8BR;AAED,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport DataTable from \"../../../../components/DataTable/DataTable\";\nimport { agencyListPaymentEngColumns } from '../../../../utils/dictionary';\nimport { getPayments } from '../../../../helpers/APICalls/agencyPayment';\nimport { format } from 'date-fns';\n\n\nfunction ListPayments(): JSX.Element {\n    const [rows, setRows] = useState<any>([]);\n\n    const handleCancelClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n\n        console.log('vakues are: ', cellValues);\n    }\n    const columns = agencyListPaymentEngColumns(handleCancelClick);\n    useEffect(() => {\n        getPayments().then((data) => {\n            if (data.error){\n                console.log(data.error.message)\n            } else if (data.success) {\n                data.success.payment.map((item, idx) => {\n                    item.id = idx + 1;\n                    item.property = item.client?.property;\n                    item.email = item.client?.email;\n                    const date = new Date(item.createdAt);\n                    item.createdAt = format(date, \"dd-MM-yyyy kk:mm\")\n                })\n                setRows(data.success.payment);\n            } else {\n                console.log('EXternal Error!');\n            }\n        });\n        }, [])\n    return (\n        <DataTable rows={rows} columns={columns} />\n    )\n};\n\nexport default ListPayments;"]},"metadata":{},"sourceType":"module"}