{"ast":null,"code":"import{Form,Formik}from\"formik\";import*as Yup from'yup';import useStyles from\"./useStyles\";import{Grid,InputLabel,TextField}from'@material-ui/core';import CustomButton from\"../../../../components/Button/CustomButton\";import{useLanguage}from\"../../../../context/useLanguageContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var engDriverForm={name:'Name',phoneNumber:'Cep',email:'Email',carNumber:'Vehicle No'};var turkishDriverForm={name:'Isim',phoneNumber:'Cep',email:'Email',carNumber:'Araç No'};function AddClientForm(_ref){var handleSubmit=_ref.handleSubmit,initValues=_ref.initValues;var classes=useStyles();var _useLanguage=useLanguage(),language=_useLanguage.language;var _ref2=language==='tr'?turkishDriverForm:engDriverForm,name=_ref2.name,phoneNumber=_ref2.phoneNumber,email=_ref2.email,carNumber=_ref2.carNumber;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{email:initValues.email,name:initValues.name,phoneNumber:initValues.phoneNumber,carNumber:initValues.carNumber},validationSchema:Yup.object().shape({email:Yup.string().email('Invalid Email Address').required('Please Enter Email Address'),name:Yup.string().required('This field can not be blank'),phoneNumber:Yup.number().required('This field can not be blank'),carNumber:Yup.string().required('This field can not be blank')}),onSubmit:function onSubmit(values){handleSubmit(values);},children:function children(_ref3){var handleSubmit=_ref3.handleSubmit,handleChange=_ref3.handleChange,values=_ref3.values,touched=_ref3.touched,errors=_ref3.errors,isSubmitting=_ref3.isSubmitting;return/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit,className:classes.form,noValidate:true,children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,container:true,justify:\"space-evenly\",spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.label,children:name}),/*#__PURE__*/_jsx(TextField,{id:\"name\",name:\"name\",value:values.name,onChange:handleChange,error:Boolean(errors.name),helperText:errors.name,InputProps:{classes:{input:classes.inputs},disableUnderline:true}})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.label,children:phoneNumber}),/*#__PURE__*/_jsx(TextField,{id:\"phoneNumber\",name:\"phoneNumber\",value:values.phoneNumber,onChange:handleChange,error:Boolean(errors.phoneNumber),helperText:Boolean(errors.phoneNumber)?'please enter a valid number':null,InputProps:{classes:{input:classes.inputs},disableUnderline:true}})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,container:true,justify:\"space-evenly\",spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.label,children:email}),/*#__PURE__*/_jsx(TextField,{id:\"email\",name:\"email\",value:values.email,onChange:handleChange,error:Boolean(errors.email),helperText:errors.email,InputProps:{classes:{input:classes.inputs},disableUnderline:true}})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(InputLabel,{className:classes.label,children:carNumber}),/*#__PURE__*/_jsx(TextField,{id:\"carNumber\",name:\"carNumber\",value:values.carNumber,onChange:handleChange,error:Boolean(errors.carNumber),helperText:errors.carNumber,InputProps:{classes:{input:classes.inputs},disableUnderline:true}})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,justifyContent:\"center\",children:/*#__PURE__*/_jsx(CustomButton,{btnText:\"submit\",style:\"submit\"})})]})});}})});};export default AddClientForm;","map":{"version":3,"sources":["/home/cisco/airportShuttleDeploy/airportShuttleV2/client/src/pages/Agency/Drivers/DriverForm/DriverForm.tsx"],"names":["Form","Formik","Yup","useStyles","Grid","InputLabel","TextField","CustomButton","useLanguage","engDriverForm","name","phoneNumber","email","carNumber","turkishDriverForm","AddClientForm","handleSubmit","initValues","classes","language","object","shape","string","required","number","values","handleChange","touched","errors","isSubmitting","form","label","Boolean","input","inputs","disableUnderline"],"mappings":"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","sourcesContent":["import { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport useStyles from \"./useStyles\";\nimport { Grid, InputLabel, TextField, Select, MenuItem, Typography } from '@material-ui/core';\nimport CustomButton from \"../../../../components/Button/CustomButton\";\nimport { Driver } from '../../../../interface/Driver';\nimport { useLanguage } from \"../../../../context/useLanguageContext\";\n\nconst engDriverForm = {\n    name: 'Name',\n    phoneNumber: 'Cep',\n    email: 'Email',\n    carNumber: 'Vehicle No'\n};\n\nconst turkishDriverForm = {\n    name: 'Isim',\n    phoneNumber: 'Cep',\n    email: 'Email',\n    carNumber: 'Araç No'\n};\n\ninterface Props {\n    handleSubmit: (inputs: Driver) => void;\n    initValues: Driver\n}\n\nfunction AddClientForm( { handleSubmit, initValues } : Props): JSX.Element {\n    const classes = useStyles();\n    const { language } = useLanguage();\n    const { name, phoneNumber, email, carNumber } = language === 'tr' ? turkishDriverForm : engDriverForm\n\n    return (\n       <>\n        <Formik\n            initialValues={{\n                email: initValues.email,\n                name: initValues.name,\n                phoneNumber: initValues.phoneNumber,\n                carNumber: initValues.carNumber\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Invalid Email Address').required('Please Enter Email Address'),\n                name: Yup.string().required('This field can not be blank'),\n                phoneNumber: Yup.number().required('This field can not be blank'),\n                carNumber: Yup.string().required('This field can not be blank'),\n            })} \n            onSubmit={(values) => {handleSubmit(values)}}\n\n        >\n            {({ handleSubmit, handleChange, values, touched, errors, isSubmitting }) => (\n                <Form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <Grid container direction=\"column\" spacing={2}>\n                        <Grid item container justify=\"space-evenly\" spacing={2}>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {name}\n                                </InputLabel>\n                                <TextField\n                                    id=\"name\"\n                                    name=\"name\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.name)}\n                                    helperText={errors.name}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {phoneNumber}\n                                </InputLabel>\n                                <TextField\n                                    id=\"phoneNumber\"\n                                    name=\"phoneNumber\"\n                                    value={values.phoneNumber}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.phoneNumber)}\n                                    helperText={Boolean(errors.phoneNumber) ? 'please enter a valid number': null}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }} \n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justify=\"space-evenly\" spacing={2}>\n                        <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {email}\n                                </InputLabel>\n                                <TextField\n                                    id=\"email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.email)}\n                                    helperText={errors.email}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item>\n                                <InputLabel className={classes.label}>\n                                    {carNumber}\n                                </InputLabel>\n                                <TextField\n                                    id=\"carNumber\"\n                                    name=\"carNumber\"\n                                    value={values.carNumber}\n                                    onChange={handleChange}\n                                    error={Boolean(errors.carNumber)}\n                                    helperText={errors.carNumber}\n                                    InputProps={{\n                                        classes: { input: classes.inputs },\n                                        disableUnderline: true\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid item container justifyContent='center'>\n                            <CustomButton btnText='submit' style=\"submit\" />\n                        </Grid>\n                    </Grid>\n                </Form> \n            )}\n        </Formik>\n       </>\n    )\n};\n\nexport default AddClientForm;\n\n"]},"metadata":{},"sourceType":"module"}