{"ast":null,"code":"var _jsxFileName = \"/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format } from 'date-fns';\nimport { Box } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable'; // import { clientReservationsDictionary } from '../../utils/dictionary';\n\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet lan = 'tr';\n\nfunction ListReservations() {\n  _s();\n\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  const {\n    updateSnackBarMessage\n  } = useSnackBar();\n\n  const handleCacelClick = cellValues => {\n    const id = cellValues.row._id;\n    deleteReservation(id).then(data => {\n      if (data.error) {\n        updateSnackBarMessage(data.error.message);\n      } else if (data.success) {\n        updateSnackBarMessage('reservation cenceled!');\n        setRows(rows.filter(row => row.id !== cellValues.id));\n      } else {\n        updateSnackBarMessage('An unexpected error occurred. Please try again !');\n      }\n    });\n  };\n\n  const handleEditClick = () => {\n    console.log('Updating your reservation');\n  };\n\n  const columns = lan === 'tr' ? turksihColumns(handleEditClick, handleCacelClick) : engColumn(handleEditClick, handleCacelClick);\n  useEffect(() => {\n    getReservations().then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else if (data.success) {\n        data.success.reservations.map((reservation, idx) => {\n          reservation.id = idx + 1;\n          const date = new Date(reservation.selectedDate);\n          reservation.date = format(date, \"dd-MM-yyyy kk:mm\");\n        });\n        setRows(data.success.reservations);\n      } else {\n        console.log('Externam error');\n      }\n    });\n    return () => {\n      setRows([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      rows: rows,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListReservations, \"OELOywNXQmj95EU5LiqHceODFg4=\", false, function () {\n  return [useStyles, useSnackBar];\n});\n\n_c = ListReservations;\nexport default ListReservations;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListReservations\");","map":{"version":3,"sources":["/home/cisco/airport-shuttle-v2/airportShuttleV2/client/src/pages/ClientReservations/ListReservations.tsx"],"names":["useEffect","useState","useStyles","format","Box","DataTable","engColumn","turksihColumns","getReservations","deleteReservation","useSnackBar","lan","ListReservations","classes","rows","setRows","updateSnackBarMessage","handleCacelClick","cellValues","id","row","_id","then","data","error","message","success","filter","handleEditClick","console","log","columns","reservations","map","reservation","idx","date","Date","selectedDate","root"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,MAAT,QAAiC,UAAjC;AACA,SAASC,GAAT,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,sCAAtB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AACA,SAASC,eAAT,QAAgC,oCAAhC;AAGA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,WAAT,QAA4B,kCAA5B;;AAGA,IAAIC,GAAG,GAAG,IAAV;;AAEA,SAASC,gBAAT,GAAwC;AAAA;;AACpC,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAM,EAAN,CAAhC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAA4BN,WAAW,EAA7C;;AAEA,QAAMO,gBAAgB,GAAIC,UAAD,IAAqB;AAC1C,UAAMC,EAAE,GAAGD,UAAU,CAACE,GAAX,CAAeC,GAA1B;AACAZ,IAAAA,iBAAiB,CAACU,EAAD,CAAjB,CAAsBG,IAAtB,CAA4BC,IAAD,IAAU;AACjC,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZR,QAAAA,qBAAqB,CAACO,IAAI,CAACC,KAAL,CAAWC,OAAZ,CAArB;AACH,OAFD,MAEO,IAAIF,IAAI,CAACG,OAAT,EAAkB;AACrBV,QAAAA,qBAAqB,CAAC,uBAAD,CAArB;AACAD,QAAAA,OAAO,CAACD,IAAI,CAACa,MAAL,CAAaP,GAAD,IAAcA,GAAG,CAACD,EAAJ,KAAWD,UAAU,CAACC,EAAhD,CAAD,CAAP;AACH,OAHM,MAGA;AACHH,QAAAA,qBAAqB,CAAC,kDAAD,CAArB;AACH;AACJ,KATD;AAWH,GAbD;;AAcA,QAAMY,eAAe,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,GAFD;;AAIA,QAAMC,OAAO,GAAGpB,GAAG,KAAK,IAAR,GAAeJ,cAAc,CAACqB,eAAD,EAAkBX,gBAAlB,CAA7B,GAAkEX,SAAS,CAACsB,eAAD,EAAkBX,gBAAlB,CAA3F;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,eAAe,GAAGc,IAAlB,CAAwBC,IAAD,IAAU;AAC7B,UAAIA,IAAI,CAACC,KAAT,EAAe;AACXK,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACC,KAAjB;AACH,OAFD,MAEO,IAAID,IAAI,CAACG,OAAT,EAAkB;AACrBH,QAAAA,IAAI,CAACG,OAAL,CAAaM,YAAb,CAA0BC,GAA1B,CAA8B,CAACC,WAAD,EAAcC,GAAd,KAAsB;AAChDD,UAAAA,WAAW,CAACf,EAAZ,GAAiBgB,GAAG,GAAG,CAAvB;AACA,gBAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASH,WAAW,CAACI,YAArB,CAAb;AACAJ,UAAAA,WAAW,CAACE,IAAZ,GAAmBjC,MAAM,CAACiC,IAAD,EAAO,kBAAP,CAAzB;AACH,SAJD;AAKArB,QAAAA,OAAO,CAACQ,IAAI,CAACG,OAAL,CAAaM,YAAd,CAAP;AACH,OAPM,MAOA;AACHH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,KAbD;AAcA,WAAO,MAAM;AACTf,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH,KAFD;AAGH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEF,OAAO,CAAC0B,IAAxB;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEzB,IAAjB;AAAuB,MAAA,OAAO,EAAEiB;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAjDQnB,gB;UACWV,S,EAEkBQ,W;;;KAH7BE,gB;AAmDT,eAAeA,gBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useStyles from './useStyles';\nimport { format, addHours } from 'date-fns';\nimport { Box, Button } from '@material-ui/core';\nimport DataTable from '../../components/DataTable/DataTable';\n// import { clientReservationsDictionary } from '../../utils/dictionary';\nimport { engColumn, turksihColumns } from '../../utils/dictionary';\nimport { getReservations } from '../../helpers/APICalls/reservation';\nimport { GetReservationApiData } from '../../interface/Reservation';\nimport { GridColumns } from '@material-ui/data-grid';\nimport { deleteReservation } from '../../helpers/APICalls/reservation';\nimport { useSnackBar } from '../../context/useSnackbarContext';\n\n\nlet lan = 'tr';\n\nfunction ListReservations(): JSX.Element{\n    const classes = useStyles();\n    const [rows, setRows] = useState<any>([]);\n    const { updateSnackBarMessage } = useSnackBar();\n\n    const handleCacelClick = (cellValues: any) => {\n        const id = cellValues.row._id;\n        deleteReservation(id).then((data) => {\n            if (data.error) {\n                updateSnackBarMessage(data.error.message);\n            } else if (data.success) {\n                updateSnackBarMessage('reservation cenceled!');\n                setRows(rows.filter((row: any) => row.id !== cellValues.id));\n            } else {\n                updateSnackBarMessage('An unexpected error occurred. Please try again !');\n            }\n        })\n        \n    };\n    const handleEditClick = () => {\n        console.log('Updating your reservation')\n    }\n\n    const columns = lan === 'tr' ? turksihColumns(handleEditClick, handleCacelClick): engColumn(handleEditClick, handleCacelClick);\n    useEffect(() => {\n        getReservations().then((data) => {\n            if (data.error){\n                console.log(data.error)\n            } else if (data.success) {\n                data.success.reservations.map((reservation, idx) => {\n                    reservation.id = idx + 1;\n                    const date = new Date(reservation.selectedDate)\n                    reservation.date = format(date, \"dd-MM-yyyy kk:mm\")\n                });\n                setRows(data.success.reservations);\n            } else {\n                console.log('Externam error')\n            }\n        })\n        return () => {\n            setRows([]);\n        }\n    }, []);\n\n    return (\n        <Box className={classes.root}>\n            <DataTable rows={rows} columns={columns} />\n        </Box>\n    )\n}\n\nexport default ListReservations;"]},"metadata":{},"sourceType":"module"}